.stackEditor {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-lg);
  height: 100%;
}

.stackContainer {
  border-radius: var(--border-radius-sm);
  background-color: var(--color-background-primary);
  flex: 1;
  overflow-y: auto;
  display: flex;
  flex-direction: column;
}

.stackHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-size: var(--font-size-sm);
  color: var(--color-text-secondary);

  margin-bottom: var(--spacing-sm);
}

.stackHeader h4 {
  margin: 0;
}

.stackHeaderActions {
  display: flex;
  gap: var(--spacing-xs);
}

.stackButton {
  background-color: var(--color-background-secondary);
  border: none;
  border-radius: 6px;
  padding: 8px 16px;
  font-size: 13px;
  font-weight: 500;
  cursor: pointer;
  transition: border-color 0.2s;
  color: var(--color-text-secondary);
  gap: var(--spacing-xs);
}

.applyStackButton {
  gap: var(--spacing-xs);
}

.emptyStack {
  padding: var(--spacing-md);
  text-align: center;
  color: var(--color-text-placeholder);
}

.stackItems {
  display: flex;
  flex-direction: column;
  min-height: 100%;
  padding: 0 0 var(--spacing-md) 0;
}

.stackElement {
  display: flex;
  border-bottom: 1px solid var(--stack-item-border);
  padding: var(--spacing-xs);
  font-size: var(--font-size-sm);
  align-items: flex-start;
  gap: var(--spacing-xs);
}

.stackElement:last-child {
  border-bottom: none;
}

.stackIndex {
  min-width: 24px;
  height: 24px;
  background-color: var(--stack-item-index-bg);
  color: var(--stack-item-index-text);
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: var(--border-radius-sm);
  font-size: var(--font-size-xs);
  flex-shrink: 0;
}

.stackItemContainer {
  flex: 1;
  min-width: 0;
}

.stackItemActions {
  display: flex;
  flex-direction: column;
  gap: 2px;
  flex-shrink: 0;
}

.stackItem {
  position: relative;
  padding: var(--spacing-xs) var(--spacing-sm);
  border-radius: var(--border-radius-sm);
  cursor: pointer;
  transition:
    opacity var(--transition-duration-fast) ease,
    box-shadow var(--transition-duration-fast) ease;
}

.stackItem:hover {
  opacity: 0.9;
  box-shadow: var(--stack-item-hover-shadow);
}

.stackItem:hover .stackItemCopyButton {
  opacity: 1;
}

.stackItemLabel {
  font-weight: var(--font-weight-bold);
  margin-bottom: 2px;
  font-size: var(--font-size-xs);
  color: var(--stack-item-label-text);
}

.stackItemValue {
  font-family: var(--font-family-mono);
  word-break: break-all;
  font-size: var(--font-size-sm);
}

.stackItemDetails {
  font-size: var(--font-size-xs);
  color: var(--stack-item-details-text);
  margin-top: 2px;
}

.stackItemCopyButton {
  opacity: 0;
  position: absolute;
  top: 0.15rem;
  right: var(--spacing-xs);
}

.nullItem {
  composes: stackItem;
  background-color: var(--stack-item-null-bg);
  color: var(--stack-item-null-text);
}

.nanItem {
  composes: stackItem;
  background-color: var(--stack-item-nan-bg);
  color: var(--stack-item-nan-text);
}

.integerItem {
  composes: stackItem;
  background-color: var(--stack-item-integer-bg);
  color: var(--stack-item-integer-text);
  word-break: break-all;
}

.integerItemCopyButton {
  composes: stackItemCopyButton;
  background-color: var(--stack-item-integer-bg);
  color: var(--stack-item-integer-text);
}

.cellItem {
  composes: stackItem;
  background-color: var(--stack-item-cell-bg);
  color: var(--stack-item-cell-text);
}

.cellItemCopyButton {
  composes: stackItemCopyButton;
  background-color: var(--stack-item-cell-bg);
  color: var(--stack-item-cell-text);
}

.sliceItem {
  composes: stackItem;
  background-color: var(--stack-item-slice-bg);
  color: var(--stack-item-slice-text);
}

.sliceItemCopyButton {
  composes: stackItemCopyButton;
  background-color: var(--stack-item-slice-bg);
  color: var(--stack-item-slice-text);
}

.builderItem {
  composes: stackItem;
  background-color: var(--stack-item-builder-bg);
  color: var(--stack-item-builder-text);
}

.builderItemCopyButton {
  composes: stackItemCopyButton;
  background-color: var(--stack-item-builder-bg);
  color: var(--stack-item-builder-text);
}

.continuationItem {
  composes: stackItem;
  background-color: var(--stack-item-continuation-bg);
  color: var(--stack-item-continuation-text);
}

.continuationItemCopyButton {
  composes: stackItemCopyButton;
  background-color: var(--stack-item-continuation-bg);
  color: var(--stack-item-continuation-text);
}

.addressItem {
  composes: stackItem;
  background-color: var(--stack-item-address-bg);
  color: var(--stack-item-address-text);
}

.addressItemCopyButton {
  composes: stackItemCopyButton;
  background-color: var(--stack-item-address-bg);
  color: var(--stack-item-address-text);
}

.tupleItem {
  composes: stackItem;
  background-color: var(--stack-item-tuple-bg);
  color: var(--stack-item-tuple-text);
}

.unknownItem {
  composes: stackItem;
  background-color: var(--stack-item-unknown-bg);
  color: var(--stack-item-unknown-text);
}

.tupleElement {
  margin-left: var(--spacing-md);
  margin-bottom: var(--spacing-xs);
  padding-left: var(--spacing-xs);
  border-left: 2px solid var(--stack-item-border);
}

.truncatedMiddle {
  white-space: nowrap;
  overflow: hidden;
  max-width: 100%;
  display: inline-block;
}

.ellipsis {
  font-weight: var(--font-weight-bold);
  margin: 0 2px;
}

.textImportSection {
  margin-bottom: var(--spacing-sm);
}

.textImportInput {
  width: calc(100% - var(--spacing-lg));
  min-height: 60px;
  padding: var(--spacing-sm);
  border: 1px solid var(--color-border);
  border-radius: var(--border-radius-sm);
  background-color: var(--color-background-primary);
  color: var(--color-text-primary);
  font-family: var(--font-family-mono);
  font-size: var(--font-size-sm);
  resize: vertical;
  margin-bottom: var(--spacing-sm);
}

.textImportInput:focus {
  outline: none;
  box-shadow: 0 0 0 3px rgba(var(--color-primary-rgb), 0.2);
  border-color: var(--color-primary);
}

.textImportInput::placeholder {
  color: var(--color-text-placeholder);
}

.textImportActions {
  display: flex;
  gap: var(--spacing-sm);
}

.parseError {
  color: var(--color-error-text);
  font-size: var(--font-size-sm);
  margin-bottom: var(--spacing-sm);
  padding: var(--spacing-xs) var(--spacing-md);
  background-color: var(--color-error-bg);
  border-radius: var(--border-radius-sm);
  border: 1px solid var(--color-error);
}

/* Add item form */
.addItemForm {
  padding: var(--spacing-md);
  border-top: 1px solid var(--color-border);
}

.addItemForm h4 {
  margin: 0 0 var(--spacing-md) 0;
  font-size: var(--font-size-sm);
  color: var(--color-text-secondary);
}

.formRow {
  margin-bottom: var(--spacing-sm);
}

.compactFormRow {
  display: flex;
  gap: var(--spacing-sm);
  align-items: center;
}

.typeSelect,
.valueInput {
  padding: var(--spacing-sm);
  border: 1px solid var(--color-border);
  border-radius: var(--border-radius-sm);
  background-color: var(--color-background-primary);
  color: var(--color-text-primary);
  font-size: var(--font-size-sm);
}

.formRow .typeSelect,
.formRow .valueInput {
  width: 100%;
}

.compactFormRow .typeSelect {
  min-width: 80px;
  flex-shrink: 0;
}

.compactFormRow .valueInput {
  flex: 1;
  min-width: 0;
}

.typeSelect:focus,
.valueInput:focus {
  outline: none;
  border-color: var(--color-primary);
  box-shadow: 0 0 0 2px var(--color-primary-alpha);
}

.valueInput {
  font-family: var(--font-family-mono);
}

.valueInput::placeholder {
  color: var(--color-text-placeholder);
}

.formActions {
  display: flex;
  justify-content: flex-start;
}

@media (max-width: 768px) {
  .stackElement {
    padding: 2px;
    flex-direction: column;
    gap: var(--spacing-xs);
  }

  .stackIndex {
    min-width: 20px;
    height: 20px;
    font-size: calc(var(--font-size-xs) - 1px);
  }

  .stackItem {
    padding: 2px 4px;
  }

  .stackItemLabel,
  .stackItemDetails {
    font-size: var(--font-size-xs);
  }

  .stackItemValue {
    font-size: var(--font-size-sm);
  }

  .stackItemActions {
    flex-direction: row;
    justify-content: center;
  }

  .textImportSection {
    margin: 0 var(--spacing-sm) var(--spacing-sm) var(--spacing-sm);
    padding: var(--spacing-sm);
  }

  .addItemForm {
    padding: var(--spacing-sm);
  }

  .compactFormRow {
    flex-direction: column;
    align-items: stretch;
  }

  .compactFormRow .typeSelect,
  .compactFormRow .valueInput {
    width: 100%;
    min-width: auto;
  }
}
