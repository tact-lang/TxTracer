var xC=Object.defineProperty;var eA=(r,G,_)=>G in r?xC(r,G,{enumerable:!0,configurable:!0,writable:!0,value:_}):r[G]=_;var le=(r,G,_)=>eA(r,typeof G!="symbol"?G+"":G,_);import{a as Ke,d as rA}from"./ton-vendor-SyIg3Zil.js";import{R as sr,j as se,s as _e}from"./index-BQTtEi8G.js";var kC={color:void 0,size:void 0,className:void 0,style:void 0,attr:void 0},zu=sr.createContext&&sr.createContext(kC),nA=["attr","size","title"];function tA(r,G){if(r==null)return{};var _=aA(r,G),S,t;if(Object.getOwnPropertySymbols){var e=Object.getOwnPropertySymbols(r);for(t=0;t<e.length;t++)S=e[t],!(G.indexOf(S)>=0)&&Object.prototype.propertyIsEnumerable.call(r,S)&&(_[S]=r[S])}return _}function aA(r,G){if(r==null)return{};var _={};for(var S in r)if(Object.prototype.hasOwnProperty.call(r,S)){if(G.indexOf(S)>=0)continue;_[S]=r[S]}return _}function zn(){return zn=Object.assign?Object.assign.bind():function(r){for(var G=1;G<arguments.length;G++){var _=arguments[G];for(var S in _)Object.prototype.hasOwnProperty.call(_,S)&&(r[S]=_[S])}return r},zn.apply(this,arguments)}function qu(r,G){var _=Object.keys(r);if(Object.getOwnPropertySymbols){var S=Object.getOwnPropertySymbols(r);G&&(S=S.filter(function(t){return Object.getOwnPropertyDescriptor(r,t).enumerable})),_.push.apply(_,S)}return _}function qn(r){for(var G=1;G<arguments.length;G++){var _=arguments[G]!=null?arguments[G]:{};G%2?qu(Object(_),!0).forEach(function(S){TA(r,S,_[S])}):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(_)):qu(Object(_)).forEach(function(S){Object.defineProperty(r,S,Object.getOwnPropertyDescriptor(_,S))})}return r}function TA(r,G,_){return G=IA(G),G in r?Object.defineProperty(r,G,{value:_,enumerable:!0,configurable:!0,writable:!0}):r[G]=_,r}function IA(r){var G=DA(r,"string");return typeof G=="symbol"?G:G+""}function DA(r,G){if(typeof r!="object"||!r)return r;var _=r[Symbol.toPrimitive];if(_!==void 0){var S=_.call(r,G);if(typeof S!="object")return S;throw new TypeError("@@toPrimitive must return a primitive value.")}return(G==="string"?String:Number)(r)}function hC(r){return r&&r.map((G,_)=>sr.createElement(G.tag,qn({key:_},G.attr),hC(G.child)))}function ce(r){return G=>sr.createElement(EA,zn({attr:qn({},r.attr)},G),hC(r.child))}function EA(r){var G=_=>{var{attr:S,size:t,title:e}=r,a=tA(r,nA),C=t||_.size||"1em",u;return _.className&&(u=_.className),r.className&&(u=(u?u+" ":"")+r.className),sr.createElement("svg",zn({stroke:"currentColor",fill:"currentColor",strokeWidth:"0"},_.attr,S,a,{className:u,style:qn(qn({color:r.color||_.color},_.style),r.style),height:C,width:C,xmlns:"http://www.w3.org/2000/svg"}),e&&sr.createElement("title",null,e),r.children)};return zu!==void 0?sr.createElement(zu.Consumer,null,_=>G(_)):G(kC)}function qA(r){return ce({attr:{viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"},child:[{tag:"line",attr:{x1:"12",y1:"5",x2:"12",y2:"19"},child:[]},{tag:"polyline",attr:{points:"19 12 12 19 5 12"},child:[]}]})(r)}function xA(r){return ce({attr:{viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"},child:[{tag:"line",attr:{x1:"12",y1:"19",x2:"12",y2:"5"},child:[]},{tag:"polyline",attr:{points:"5 12 12 5 19 12"},child:[]}]})(r)}function sA(r){return ce({attr:{viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"},child:[{tag:"path",attr:{d:"M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z"},child:[]},{tag:"path",attr:{d:"M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z"},child:[]}]})(r)}function eM(r){return ce({attr:{viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"},child:[{tag:"polyline",attr:{points:"20 6 9 17 4 12"},child:[]}]})(r)}function rM(r){return ce({attr:{viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"},child:[{tag:"polyline",attr:{points:"6 9 12 15 18 9"},child:[]}]})(r)}function nM(r){return ce({attr:{viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"},child:[{tag:"polyline",attr:{points:"9 18 15 12 9 6"},child:[]}]})(r)}function tM(r){return ce({attr:{viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"},child:[{tag:"circle",attr:{cx:"12",cy:"12",r:"10"},child:[]},{tag:"polyline",attr:{points:"12 6 12 12 16 14"},child:[]}]})(r)}function aM(r){return ce({attr:{viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"},child:[{tag:"rect",attr:{x:"9",y:"9",width:"13",height:"13",rx:"2",ry:"2"},child:[]},{tag:"path",attr:{d:"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"},child:[]}]})(r)}function TM(r){return ce({attr:{viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"},child:[{tag:"path",attr:{d:"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"},child:[]},{tag:"polyline",attr:{points:"14 2 14 8 20 8"},child:[]},{tag:"line",attr:{x1:"16",y1:"13",x2:"8",y2:"13"},child:[]},{tag:"line",attr:{x1:"16",y1:"17",x2:"8",y2:"17"},child:[]},{tag:"polyline",attr:{points:"10 9 9 9 8 9"},child:[]}]})(r)}function SA(r){return ce({attr:{viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"},child:[{tag:"path",attr:{d:"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"},child:[]}]})(r)}function IM(r){return ce({attr:{viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"},child:[{tag:"circle",attr:{cx:"12",cy:"12",r:"10"},child:[]},{tag:"line",attr:{x1:"12",y1:"16",x2:"12",y2:"12"},child:[]},{tag:"line",attr:{x1:"12",y1:"8",x2:"12.01",y2:"8"},child:[]}]})(r)}function DM(r){return ce({attr:{viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"},child:[{tag:"polygon",attr:{points:"5 3 19 12 5 21 5 3"},child:[]}]})(r)}function EM(r){return ce({attr:{viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"},child:[{tag:"line",attr:{x1:"12",y1:"5",x2:"12",y2:"19"},child:[]},{tag:"line",attr:{x1:"5",y1:"12",x2:"19",y2:"12"},child:[]}]})(r)}function sM(r){return ce({attr:{viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"},child:[{tag:"circle",attr:{cx:"11",cy:"11",r:"8"},child:[]},{tag:"line",attr:{x1:"21",y1:"21",x2:"16.65",y2:"16.65"},child:[]}]})(r)}function SM(r){return ce({attr:{viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"},child:[{tag:"circle",attr:{cx:"12",cy:"12",r:"3"},child:[]},{tag:"path",attr:{d:"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z"},child:[]}]})(r)}function RM(r){return ce({attr:{viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"},child:[{tag:"circle",attr:{cx:"18",cy:"5",r:"3"},child:[]},{tag:"circle",attr:{cx:"6",cy:"12",r:"3"},child:[]},{tag:"circle",attr:{cx:"18",cy:"19",r:"3"},child:[]},{tag:"line",attr:{x1:"8.59",y1:"13.51",x2:"15.42",y2:"17.49"},child:[]},{tag:"line",attr:{x1:"15.41",y1:"6.51",x2:"8.59",y2:"10.49"},child:[]}]})(r)}function iM(r){return ce({attr:{viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"},child:[{tag:"polyline",attr:{points:"3 6 5 6 21 6"},child:[]},{tag:"path",attr:{d:"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"},child:[]},{tag:"line",attr:{x1:"10",y1:"11",x2:"10",y2:"17"},child:[]},{tag:"line",attr:{x1:"14",y1:"11",x2:"14",y2:"17"},child:[]}]})(r)}function oM(r){return ce({attr:{viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"},child:[{tag:"line",attr:{x1:"18",y1:"6",x2:"6",y2:"18"},child:[]},{tag:"line",attr:{x1:"6",y1:"6",x2:"18",y2:"18"},child:[]}]})(r)}var or={},ve={},xu;function RA(){if(xu)return ve;xu=1,Object.defineProperty(ve,"__esModule",{value:!0}),ve.loadFuncMapping=ve.FuncVarFlag=ve.FuncType=void 0;var r;(function(S){S[S.INT=172]="INT",S[S.CELL=173]="CELL",S[S.SLICE=174]="SLICE",S[S.BUILDER=175]="BUILDER",S[S.CONT=176]="CONT",S[S.TUPLE=177]="TUPLE",S[S.TYPE=178]="TYPE"})(r||(ve.FuncType=r={}));var G;(function(S){S[S.IN=1]="IN",S[S.NAMED=2]="NAMED",S[S.TMP=4]="TMP"})(G||(ve.FuncVarFlag=G={}));const _=S=>JSON.parse(S);return ve.loadFuncMapping=_,ve}var Jn={},Lr={},je={},Er={},eC;function iA(){if(eC)return Er;eC=1,Object.defineProperty(Er,"__esModule",{value:!0}),Er.SyntaxError=Er.StartRules=void 0,Er.parse=G;class r extends SyntaxError{constructor(t,e,a,C){super(t),this.expected=e,this.found=a,this.location=C,this.name="SyntaxError"}format(t){let e="Error: "+this.message;if(this.location){let a=null;const C=t.find(c=>c.source===this.location.source);C&&(a=C.text.split(/\r\n|\n|\r/g));const u=this.location.start,o=this.location.source&&typeof this.location.source.offset=="function"?this.location.source.offset(u):u,A=this.location.source+":"+o.line+":"+o.column;if(a){const c=this.location.end,l="".padEnd(o.line.toString().length," "),K=a[u.line-1],f=(u.line===c.line?c.column:K.length+1)-u.column||1;e+=`
 --> `+A+`
`+l+` |
`+o.line+" | "+K+`
`+l+" | "+"".padEnd(u.column-1," ")+"".padEnd(f,"^")}else e+=`
 at `+A}return e}static buildMessage(t,e){function a(f){return f.codePointAt(0).toString(16).toUpperCase()}const C=Object.prototype.hasOwnProperty.call(RegExp.prototype,"unicode")?new RegExp("[\\p{C}\\p{Mn}\\p{Mc}]","gu"):null;function u(f){return C?f.replace(C,p=>"\\u{"+a(p)+"}"):f}function o(f){return u(f.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,p=>"\\x0"+a(p)).replace(/[\x10-\x1F\x7F-\x9F]/g,p=>"\\x"+a(p)))}function A(f){return u(f.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,p=>"\\x0"+a(p)).replace(/[\x10-\x1F\x7F-\x9F]/g,p=>"\\x"+a(p)))}const c={literal(f){return'"'+o(f.text)+'"'},class(f){const p=f.parts.map(v=>Array.isArray(v)?A(v[0])+"-"+A(v[1]):A(v));return"["+(f.inverted?"^":"")+p.join("")+"]"+(f.unicode?"u":"")},any(){return"any character"},end(){return"end of input"},other(f){return f.description}};function l(f){return c[f.type](f)}function K(f){const p=f.map(l);if(p.sort(),p.length>0){let v=1;for(let B=1;B<p.length;B++)p[B-1]!==p[B]&&(p[v]=p[B],v++);p.length=v}switch(p.length){case 1:return p[0];case 2:return p[0]+" or "+p[1];default:return p.slice(0,-1).join(", ")+", or "+p[p.length-1]}}function d(f){return f?'"'+o(f)+'"':"end of input"}return"Expected "+K(t)+" but "+d(e)+" found."}}Er.SyntaxError=r;function G(S,t){t=t!==void 0?t:{};const e={},a=t.grammarSource,C={vmLine:Fr,VmParsedStack:ln};let u=Fr;const o="stack: ",A="code cell hash:",c="offset:",l="execute ",K="changing gas limit to ",d="gas remaining: ",f="handling exception code ",p=": ",v="default exception handler, terminating vm with exit code ",B="final c5:",F="stack",N="[",P="]",O="()",Q="(null)",V="NaN",w="(",b=")",j="C{",ne="}",Ie="Cont{",Pe="BC{",Se="???",Ce="CS{",h="Cell{",Z=";",k="bits:",Y="..",q="refs:",ae="-",te=/^[^\r\n]/,Ae=/^[A-Za-z_0-9]/,Fe=/^[0-9]/,Ge=/^[0-9a-fA-F]/,m=/^[ \t\r\n]/,H=Te("stack: ",!1),$=be(["\r",`
`],!0,!1,!1),J=Te("code cell hash:",!1),re=Te("offset:",!1),De=Te("execute ",!1),Ee=Te("changing gas limit to ",!1),Re=Te("gas remaining: ",!1),oe=Te("handling exception code ",!1),Oe=Te(": ",!1),ge=Te("default exception handler, terminating vm with exit code ",!1),de=Te("final c5:",!1),Rr=Te("stack",!1),ur=Te("[",!1),Cr=Te("]",!1),Ur=Te("()",!1),lr=Te("(null)",!1),Nr=Te("NaN",!1),Hr=Te("(",!1),Gr=Te(")",!1),Qr=Te("C{",!1),pe=Te("}",!1),_r=Te("Cont{",!1),Ar=be([["A","Z"],["a","z"],"_",["0","9"]],!1,!1,!1),Br=Te("BC{",!1),fr=Te("???",!1),Xr=Te("CS{",!1),Vr=Te("Cell{",!1),$r=Te(";",!1),Wr=Te("bits:",!1),Mr=Te("..",!1),Kr=Te("refs:",!1),Zr=Te("-",!1),cr=be([["0","9"]],!1,!1,!1),Pr=be([["0","9"],["a","f"],["A","F"]],!1,!1,!1),kr=be([" ","	","\r",`
`],!1,!1,!1);function hr(L){return{$:"VmStack",stack:L}}function yr(L,g){return{$:"VmLoc",hash:L.trim(),offset:g}}function wr(L){return{$:"VmExecute",instr:L.trim()}}function pr(L){return{$:"VmLimitChanged",limit:L}}function Yr(L){return{$:"VmGasRemaining",gas:L}}function br(L,g){return{$:"VmException",errno:L,message:g.trim()}}function Jr(L){return{$:"VmExceptionHandler",errno:L}}function vr(L){return{$:"VmFinalC5",value:L}}function jr(L){return{$:"VmUnknown",text:L.trim()}}function zr(L){return{$:"VmParsedStack",values:L}}function qr(L){return{$:"VmStackValue",value:L}}function xr(){return{$:"Null"}}function en(){return{$:"NaN"}}function rn(L){return{$:"Integer",value:L}}function nn(L){return{$:"Tuple",elements:L}}function tn(L){return{$:"Tuple",elements:L}}function an(L){return{$:"Cell",value:L}}function Tn(L){return{$:"Continuation",value:L}}function In(L){return{$:"Builder",value:L}}function Dn(){return{$:"Unknown",value:""}}function En(L){return{$:"CellSlice",body:L}}function sn(L,g,U){return{value:L,bits:g,refs:U}}function Sn(L,g){return{start:L,end:g}}function Rn(L,g){return{start:L,end:g}}function on(L){return{value:L}}function Ln(L,g){return{op:L||void 0,value:g}}let M=t.peg$currPos|0;const Ze=[{line:1,column:1}];let me=M,Dr=t.peg$maxFailExpected||[],x=t.peg$silentFails|0,Ye;if(t.startRule){if(!(t.startRule in C))throw new Error(`Can't start parsing from rule "`+t.startRule+'".');u=C[t.startRule]}function un(L=M){const g=S.codePointAt(L);return g===void 0?"":String.fromCodePoint(g)}function Te(L,g){return{type:"literal",text:L,ignoreCase:g}}function be(L,g,U,y){return{type:"class",parts:L,inverted:g,ignoreCase:U,unicode:y}}function Cn(){return{type:"end"}}function Or(L){let g=Ze[L],U;if(g)return g;if(L>=Ze.length)U=Ze.length-1;else for(U=L;!Ze[--U];);for(g=Ze[U],g={line:g.line,column:g.column};U<L;)S.charCodeAt(U)===10?(g.line++,g.column=1):g.column++,U++;return Ze[L]=g,g}function dr(L,g,U){const y=Or(L),W=Or(g);return{source:a,start:{offset:L,line:y.line,column:y.column},end:{offset:g,line:W.line,column:W.column}}}function ee(L){M<me||(M>me&&(me=M,Dr=[]),Dr.push(L))}function An(L,g,U){return new r(r.buildMessage(L,g),L,g,U)}function Fr(){let L;return L=cn(),L===e&&(L=Mn(),L===e&&(L=Pn(),L===e&&(L=On(),L===e&&(L=dn(),L===e&&(L=Fn(),L===e&&(L=mn(),L===e&&(L=gn(),L===e&&(L=Un())))))))),L}function Mn(){let L,g,U,y,W;if(L=M,S.substr(M,7)===o?(g=o,M+=7):(g=e,x===0&&ee(H)),g!==e){for(U=M,y=[],W=S.charAt(M),te.test(W)?M++:(W=e,x===0&&ee($));W!==e;)y.push(W),W=S.charAt(M),te.test(W)?M++:(W=e,x===0&&ee($));U=S.substring(U,M),L=hr(U)}else M=L,L=e;return L}function cn(){let L,g,U,y,W,ue,Me,Qe;if(L=M,S.substr(M,15)===A?(g=A,M+=15):(g=e,x===0&&ee(J)),g!==e){for(U=[],y=Le();y!==e;)U.push(y),y=Le();if(y=Je(),W=[],ue=Le(),ue!==e)for(;ue!==e;)W.push(ue),ue=Le();else W=e;if(W!==e)if(S.substr(M,7)===c?(ue=c,M+=7):(ue=e,x===0&&ee(re)),ue!==e){for(Me=[],Qe=Le();Qe!==e;)Me.push(Qe),Qe=Le();Qe=Ue(),Qe!==e?L=yr(y,Qe):(M=L,L=e)}else M=L,L=e;else M=L,L=e}else M=L,L=e;return L}function Pn(){let L,g,U,y,W;if(L=M,S.substr(M,8)===l?(g=l,M+=8):(g=e,x===0&&ee(De)),g!==e){for(U=M,y=[],W=S.charAt(M),te.test(W)?M++:(W=e,x===0&&ee($));W!==e;)y.push(W),W=S.charAt(M),te.test(W)?M++:(W=e,x===0&&ee($));U=S.substring(U,M),L=wr(U)}else M=L,L=e;return L}function On(){let L,g,U;return L=M,S.substr(M,22)===K?(g=K,M+=22):(g=e,x===0&&ee(Ee)),g!==e?(U=Ue(),U!==e?L=pr(U):(M=L,L=e)):(M=L,L=e),L}function dn(){let L,g,U;return L=M,S.substr(M,15)===d?(g=d,M+=15):(g=e,x===0&&ee(Re)),g!==e?(U=Ue(),U!==e?L=Yr(U):(M=L,L=e)):(M=L,L=e),L}function Fn(){let L,g,U,y,W,ue,Me;if(L=M,S.substr(M,24)===f?(g=f,M+=24):(g=e,x===0&&ee(oe)),g!==e)if(U=Ue(),U!==e)if(S.substr(M,2)===p?(y=p,M+=2):(y=e,x===0&&ee(Oe)),y!==e){for(W=M,ue=[],Me=S.charAt(M),te.test(Me)?M++:(Me=e,x===0&&ee($));Me!==e;)ue.push(Me),Me=S.charAt(M),te.test(Me)?M++:(Me=e,x===0&&ee($));W=S.substring(W,M),L=br(U,W)}else M=L,L=e;else M=L,L=e;else M=L,L=e;return L}function mn(){let L,g,U;return L=M,S.substr(M,57)===v?(g=v,M+=57):(g=e,x===0&&ee(ge)),g!==e?(U=Ue(),U!==e?L=Jr(U):(M=L,L=e)):(M=L,L=e),L}function gn(){let L,g,U;return L=M,S.substr(M,9)===B?(g=B,M+=9):(g=e,x===0&&ee(de)),g!==e?(U=mr(),U!==e?L=vr(U):(M=L,L=e)):(M=L,L=e),L}function Un(){let L,g,U,y,W;if(L=M,g=M,x++,S.substr(M,5)===F?(U=F,M+=5):(U=e,x===0&&ee(Rr)),U===e&&(S.substr(M,15)===A?(U=A,M+=15):(U=e,x===0&&ee(J)),U===e&&(S.substr(M,8)===l?(U=l,M+=8):(U=e,x===0&&ee(De)),U===e&&(S.substr(M,22)===K?(U=K,M+=22):(U=e,x===0&&ee(Ee)),U===e&&(S.substr(M,15)===d?(U=d,M+=15):(U=e,x===0&&ee(Re)),U===e&&(S.substr(M,24)===f?(U=f,M+=24):(U=e,x===0&&ee(oe)),U===e&&(S.substr(M,57)===v?(U=v,M+=57):(U=e,x===0&&ee(ge)),U===e&&(S.substr(M,9)===B?(U=B,M+=9):(U=e,x===0&&ee(de))))))))),x--,U===e?g=void 0:(M=g,g=e),g!==e){for(U=M,y=[],W=S.charAt(M),te.test(W)?M++:(W=e,x===0&&ee($));W!==e;)y.push(W),W=S.charAt(M),te.test(W)?M++:(W=e,x===0&&ee($));U=S.substring(U,M),L=jr(U)}else M=L,L=e;return L}function ln(){let L,g,U,y,W;if(L=M,S.charCodeAt(M)===91?(g=N,M++):(g=e,x===0&&ee(ur)),g!==e){for(U=[],y=Le();y!==e;)U.push(y),y=Le();for(y=[],W=ke();W!==e;)y.push(W),W=ke();S.charCodeAt(M)===93?(W=P,M++):(W=e,x===0&&ee(Cr)),W!==e?L=zr(y):(M=L,L=e)}else M=L,L=e;return L}function ke(){let L,g,U,y,W;for(L=M,g=[],U=Le();U!==e;)g.push(U),U=Le();if(U=Nn(),U===e&&(U=Hn(),U===e&&(U=Gn(),U===e&&(U=Qn(),U===e&&(U=_n(),U===e&&(U=mr(),U===e&&(U=Bn(),U===e&&(U=fn(),U===e&&(U=Vn(),U===e&&(U=Xn()))))))))),U!==e){for(y=[],W=Le();W!==e;)y.push(W),W=Le();L=qr(U)}else M=L,L=e;return L}function Nn(){let L,g;return L=M,S.substr(M,2)===O?(g=O,M+=2):(g=e,x===0&&ee(Ur)),g===e&&(S.substr(M,6)===Q?(g=Q,M+=6):(g=e,x===0&&ee(lr))),g!==e&&(g=xr()),L=g,L}function Hn(){let L,g;return L=M,S.substr(M,3)===V?(g=V,M+=3):(g=e,x===0&&ee(Nr)),g!==e&&(g=en()),L=g,L}function Gn(){let L,g;return L=M,g=Ue(),g!==e&&(g=rn(g)),L=g,L}function Qn(){let L,g,U,y,W;if(L=M,S.charCodeAt(M)===91?(g=N,M++):(g=e,x===0&&ee(ur)),g!==e){for(U=[],y=Le();y!==e;)U.push(y),y=Le();for(y=[],W=ke();W!==e;)y.push(W),W=ke();S.charCodeAt(M)===93?(W=P,M++):(W=e,x===0&&ee(Cr)),W!==e?L=nn(y):(M=L,L=e)}else M=L,L=e;return L}function _n(){let L,g,U,y,W;if(L=M,S.charCodeAt(M)===40?(g=w,M++):(g=e,x===0&&ee(Hr)),g!==e){for(U=[],y=Le();y!==e;)U.push(y),y=Le();for(y=[],W=ke();W!==e;)y.push(W),W=ke();S.charCodeAt(M)===41?(W=b,M++):(W=e,x===0&&ee(Gr)),W!==e?L=tn(y):(M=L,L=e)}else M=L,L=e;return L}function mr(){let L,g,U,y;return L=M,S.substr(M,2)===j?(g=j,M+=2):(g=e,x===0&&ee(Qr)),g!==e?(U=Je(),S.charCodeAt(M)===125?(y=ne,M++):(y=e,x===0&&ee(pe)),y!==e?L=an(U):(M=L,L=e)):(M=L,L=e),L}function Bn(){let L,g,U,y,W;if(L=M,S.substr(M,5)===Ie?(g=Ie,M+=5):(g=e,x===0&&ee(_r)),g!==e){for(U=M,y=[],W=S.charAt(M),Ae.test(W)?M++:(W=e,x===0&&ee(Ar));W!==e;)y.push(W),W=S.charAt(M),Ae.test(W)?M++:(W=e,x===0&&ee(Ar));U=S.substring(U,M),S.charCodeAt(M)===125?(y=ne,M++):(y=e,x===0&&ee(pe)),y!==e?L=Tn(U):(M=L,L=e)}else M=L,L=e;return L}function fn(){let L,g,U,y;return L=M,S.substr(M,3)===Pe?(g=Pe,M+=3):(g=e,x===0&&ee(Br)),g!==e?(U=Je(),S.charCodeAt(M)===125?(y=ne,M++):(y=e,x===0&&ee(pe)),y!==e?L=In(U):(M=L,L=e)):(M=L,L=e),L}function Xn(){let L,g;return L=M,S.substr(M,3)===Se?(g=Se,M+=3):(g=e,x===0&&ee(fr)),g!==e&&(g=Dn()),L=g,L}function Vn(){let L,g,U,y;return L=M,S.substr(M,3)===Ce?(g=Ce,M+=3):(g=e,x===0&&ee(Xr)),g!==e?(U=$n(),U===e&&(U=Zn()),U!==e?(S.charCodeAt(M)===125?(y=ne,M++):(y=e,x===0&&ee(pe)),y!==e?L=En(U):(M=L,L=e)):(M=L,L=e)):(M=L,L=e),L}function $n(){let L,g,U,y,W,ue,Me;return L=M,S.substr(M,5)===h?(g=h,M+=5):(g=e,x===0&&ee(Vr)),g!==e?(U=Je(),S.charCodeAt(M)===125?(y=ne,M++):(y=e,x===0&&ee(pe)),y!==e?(W=Wn(),W!==e?(S.charCodeAt(M)===59?(ue=Z,M++):(ue=e,x===0&&ee($r)),ue!==e?(Me=Kn(),Me!==e?L=sn(U,W,Me):(M=L,L=e)):(M=L,L=e)):(M=L,L=e)):(M=L,L=e)):(M=L,L=e),L}function Wn(){let L,g,U,y,W;return L=M,S.substr(M,5)===k?(g=k,M+=5):(g=e,x===0&&ee(Wr)),g!==e?(U=Ue(),U!==e?(S.substr(M,2)===Y?(y=Y,M+=2):(y=e,x===0&&ee(Mr)),y!==e?(W=Ue(),W!==e?L=Sn(U,W):(M=L,L=e)):(M=L,L=e)):(M=L,L=e)):(M=L,L=e),L}function Kn(){let L,g,U,y,W;return L=M,S.substr(M,5)===q?(g=q,M+=5):(g=e,x===0&&ee(Kr)),g!==e?(U=Ue(),U!==e?(S.substr(M,2)===Y?(y=Y,M+=2):(y=e,x===0&&ee(Mr)),y!==e?(W=Ue(),W!==e?L=Rn(U,W):(M=L,L=e)):(M=L,L=e)):(M=L,L=e)):(M=L,L=e),L}function Zn(){let L,g;return L=M,g=Je(),g=on(g),L=g,L}function Ue(){let L,g,U,y,W;if(L=M,S.charCodeAt(M)===45?(g=ae,M++):(g=e,x===0&&ee(Zr)),g===e&&(g=null),U=M,y=[],W=S.charAt(M),Fe.test(W)?M++:(W=e,x===0&&ee(cr)),W!==e)for(;W!==e;)y.push(W),W=S.charAt(M),Fe.test(W)?M++:(W=e,x===0&&ee(cr));else y=e;return y!==e?U=S.substring(U,M):U=y,U!==e?L=Ln(g,U):(M=L,L=e),L}function Je(){let L,g,U;for(L=M,g=[],U=S.charAt(M),Ge.test(U)?M++:(U=e,x===0&&ee(Pr));U!==e;)g.push(U),U=S.charAt(M),Ge.test(U)?M++:(U=e,x===0&&ee(Pr));return L=S.substring(L,M),L}function Le(){let L;return L=S.charAt(M),m.test(L)?M++:(L=e,x===0&&ee(kr)),L}Ye=u();const ir=Ye!==e&&M===S.length;function gr(){throw Ye!==e&&M<S.length&&ee(Cn()),An(Dr,me<S.length?un(me):null,me<S.length?dr(me,me+1):dr(me,me))}if(t.peg$library)return{peg$result:Ye,peg$currPos:M,peg$FAILED:e,peg$maxFailExpected:Dr,peg$maxFailPos:me,peg$success:ir,peg$throw:ir?void 0:gr};if(ir)return Ye;gr()}const _=["vmLine","VmParsedStack"];return Er.StartRules=_,Er}var rC;function oA(){return rC||(rC=1,function(r){var G=je&&je.__createBinding||(Object.create?function(d,f,p,v){v===void 0&&(v=p);var B=Object.getOwnPropertyDescriptor(f,p);(!B||("get"in B?!f.__esModule:B.writable||B.configurable))&&(B={enumerable:!0,get:function(){return f[p]}}),Object.defineProperty(d,v,B)}:function(d,f,p,v){v===void 0&&(v=p),d[v]=f[p]}),_=je&&je.__setModuleDefault||(Object.create?function(d,f){Object.defineProperty(d,"default",{enumerable:!0,value:f})}:function(d,f){d.default=f}),S=je&&je.__importStar||function(){var d=function(f){return d=Object.getOwnPropertyNames||function(p){var v=[];for(var B in p)Object.prototype.hasOwnProperty.call(p,B)&&(v[v.length]=B);return v},d(f)};return function(f){if(f&&f.__esModule)return f;var p={};if(f!=null)for(var v=d(f),B=0;B<v.length;B++)v[B]!=="default"&&G(p,f,v[B]);return _(p,f),p}}();Object.defineProperty(r,"__esModule",{value:!0}),r.processStack=r.parseStack=r.parse=void 0;const t=S(iA()),e=d=>d.split(`
`).map(v=>a(v.trim())).map(v=>C(v));r.parse=e;const a=d=>{try{return t.parse(d,{startRule:"vmLine"})}catch{return{$:"VmUnknown",text:d}}},C=d=>{switch(d.$){case"VmLoc":return{$:"VmLoc",hash:d.hash.trim(),offset:c(d.offset)};case"VmStack":{const f=(0,r.parseStack)(d.stack);if(!f)throw new Error(`Cannot parse stack: ${d.stack}`);return{$:"VmStack",stack:(0,r.processStack)(f)}}case"VmExecute":return{$:"VmExecute",instr:d.instr.trim()};case"VmLimitChanged":return{$:"VmLimitChanged",limit:c(d.limit)};case"VmGasRemaining":return{$:"VmGasRemaining",gas:c(d.gas)};case"VmException":return{$:"VmException",errno:c(d.errno),message:d.message.trim()};case"VmExceptionHandler":return{$:"VmExceptionHandler",errno:c(d.errno)};case"VmFinalC5":return{$:"VmFinalC5",hex:d.value.value.trim()};case"VmUnknown":return{$:"VmUnknown",text:d.text.trim()};default:return{$:"VmUnknown",text:""}}},u=d=>{const f=o(d);if(f)return f;const p=o(d+"]");if(p)return p;const v=o(d+"} ]");if(v)return v;for(let B=0;B<100;B++){const F=o(d+"} ]"+"]".repeat(B));if(F)return F}};r.parseStack=u;const o=d=>{try{return t.parse(d,{startRule:"VmParsedStack"})}catch{return}},A=d=>d.values.map(f=>K(f));r.processStack=A;const c=d=>{const f=Number.parseInt(d.value);return d.op==="-"?-f:f},l=d=>{const f=BigInt(d.value);return d.op==="-"?-f:f},K=d=>{switch(d.value.$){case"Null":return{$:"Null"};case"NaN":return{$:"NaN"};case"Integer":return{$:"Integer",value:l(d.value.value)};case"Tuple":case"TupleParen":return{$:"Tuple",elements:d.value.elements.map(f=>K(f))};case"Cell":return{$:"Cell",boc:d.value.value};case"Continuation":return{$:"Continuation",name:d.value.value};case"Builder":return{$:"Builder",hex:d.value.value};case"CellSlice":return d.value.body.$==="CellSliceBody"?{$:"Slice",hex:d.value.body.value,startBit:c(d.value.body.bits.start),endBit:c(d.value.body.bits.end),startRef:c(d.value.body.refs.start),endRef:c(d.value.body.refs.end)}:{$:"Slice",hex:d.value.body.value,startBit:0,endBit:0,startRef:0,endRef:0};case"Unknown":return{$:"Unknown",value:""};default:return{$:"Unknown",value:""}}}}(je)),je}var ku={},nC;function LA(){return nC||(nC=1,function(r){Object.defineProperty(r,"__esModule",{value:!0}),r.serializeStackElement=r.serializeStack=void 0;const G=S=>"["+S.map(t=>(0,r.serializeStackElement)(t)).join(" ")+"]";r.serializeStack=G;const _=S=>{switch(S.$){case"Null":return"()";case"NaN":return"NaN";case"Integer":return S.value.toString();case"Tuple":return"[ "+S.elements.map(t=>(0,r.serializeStackElement)(t)).join(" ")+" ]";case"Unknown":return S.value;case"Cell":return"C{"+S.boc+"}";case"Continuation":return"Cont{"+S.name+"}";case"Builder":return"BC{"+S.hex+"}";case"Slice":return S.startBit===0&&S.endBit===0?"CS{"+S.hex+"}":"CS{Cell{"+S.hex+"} bits:"+S.startBit+".."+S.endBit+";refs:"+S.startRef+".."+S.endRef+"}";case"Address":return"CS{"+S.value+"}";default:return""}};r.serializeStackElement=_}(ku)),ku}var tC;function yC(){return tC||(tC=1,function(r){var G=Lr&&Lr.__createBinding||(Object.create?function(S,t,e,a){a===void 0&&(a=e);var C=Object.getOwnPropertyDescriptor(t,e);(!C||("get"in C?!t.__esModule:C.writable||C.configurable))&&(C={enumerable:!0,get:function(){return t[e]}}),Object.defineProperty(S,a,C)}:function(S,t,e,a){a===void 0&&(a=e),S[a]=t[e]}),_=Lr&&Lr.__exportStar||function(S,t){for(var e in S)e!=="default"&&!Object.prototype.hasOwnProperty.call(t,e)&&G(t,S,e)};Object.defineProperty(r,"__esModule",{value:!0}),_(oA(),r),_(LA(),r)}(Lr)),Lr}var aC;function wC(){if(aC)return Jn;aC=1,Object.defineProperty(Jn,"__esModule",{value:!0}),Jn.parseLogs=G;const r=yC();function G(_){const S=(0,r.parse)(_),t=[];let e=[],a=[],C=1e6;for(const u of S){if(u.$==="VmStack"&&(a=u.stack),u.$==="VmLoc"&&(e.push({hash:u.hash.toLowerCase(),offset:u.offset,stack:a,gas:C,gasCost:0}),a=[]),u.$==="VmGasRemaining"){const o=u.gas,A=C-o,c=A<0?1e7-o:A,l=e.at(-1);l&&(l.gasCost=c),C=o}u.$==="VmLimitChanged"&&(C=u.limit),u.$==="VmUnknown"&&u.text.includes("console.log")&&(C=1e6,t.push([...e]),e=[])}return e.length>0&&t.push([...e]),t}return Jn}var hu={},TC;function uA(){return TC||(TC=1,function(r){Object.defineProperty(r,"__esModule",{value:!0}),r.createMappingInfo=r.fromParserLoc=r.Loc=void 0;const G=(a,C,u)=>({file:a,line:C,otherLines:u});r.Loc=G;const _=a=>({file:a.file,line:a.line,otherLines:[]});r.fromParserLoc=_;const S=(a,C)=>{const u=C[a.cell];if(u!==void 0){for(const[A,c]of a.instructions.entries()){const l=c.instr.loc?.line,K=u.instructions.at(A);l!==void 0&&K!==void 0&&K.loc?.otherLines.push(l)}return}const o=a.instructions.map(({instr:{$:A,loc:c},offset:l,debugSection:K})=>({name:A,loc:c?(0,r.fromParserLoc)(c):void 0,offset:l,debugSection:K}));C[a.cell]={instructions:o}},t=(a,C)=>{const u=[...a.dictionaryInfo];S(a,C);for(const o of a.subMappings){S(o,C);for(const A of o.subMappings)u.push(...t(A,C))}return u},e=a=>{const C={};return{dictionaryCells:t(a,C).map(o=>({cell:o.builder.asCell().hash().toString("hex"),offset:o.offset,dataCell:o.childCell.hash().toString("hex")})),cells:C}};r.createMappingInfo=e}(hu)),hu}var yu={},IC;function CA(){return IC||(IC=1,function(r){Object.defineProperty(r,"__esModule",{value:!0}),r.findInstructionInfo=r.createTraceInfoPerTransaction=r.createTraceInfo=void 0;const G=wC(),_=(e,a,C)=>({steps:(0,G.parseLogs)(e).flat().flatMap(A=>{const c=(0,r.findInstructionInfo)(a,A);if(!c)return[];const[l,K]=c,d=l[K];if(!d)return[];const f=d.debugSection!==-1&&C?C.locations[d.debugSection]:void 0;return[{loc:d.loc,instructionName:d.name,stack:A.stack,gas:A.gas,gasCost:A.gasCost,funcLoc:f}]})});r.createTraceInfo=_;const S=(e,a,C)=>(0,G.parseLogs)(e).map(o=>{const A=[];let c=0;for(const l of o){const K=(0,r.findInstructionInfo)(a,l);if(!K)continue;l.offset!==0&&c!==0&&(c=0);const[d,f]=K,p=d[f+c];if(!p)continue;l.offset===0&&c===0&&(c=1);const v=p.debugSection!==-1&&C?C.locations[p.debugSection]:void 0;A.push({loc:p.loc,instructionName:p.name,stack:l.stack,gas:l.gas,gasCost:l.gasCost,funcLoc:v})}return{steps:A}});r.createTraceInfoPerTransaction=S;const t=(e,a)=>{const C=a.hash,u=e.dictionaryCells.find(l=>l.cell===C),[o,A]=u?[u.dataCell,u.offset]:[C,0],c=e.cells[o];if(c)return[c.instructions,c.instructions.findIndex(l=>l.offset===a.offset-A)]};r.findInstructionInfo=t}(yu)),yu}var DC;function AA(){return DC||(DC=1,function(r){var G=or&&or.__createBinding||(Object.create?function(S,t,e,a){a===void 0&&(a=e);var C=Object.getOwnPropertyDescriptor(t,e);(!C||("get"in C?!t.__esModule:C.writable||C.configurable))&&(C={enumerable:!0,get:function(){return t[e]}}),Object.defineProperty(S,a,C)}:function(S,t,e,a){a===void 0&&(a=e),S[a]=t[e]}),_=or&&or.__exportStar||function(S,t){for(var e in S)e!=="default"&&!Object.prototype.hasOwnProperty.call(t,e)&&G(t,S,e)};Object.defineProperty(r,"__esModule",{value:!0}),_(RA(),r),_(wC(),r),_(uA(),r),_(CA(),r)}(or)),or}var LM=Ke(),ze={},Be={},kn={},EC;function xn(){if(EC)return kn;EC=1,Object.defineProperty(kn,"__esModule",{value:!0}),kn.CodeBuilder=void 0;const r=Ke();class G extends r.Builder{constructor(){super(...arguments);le(this,"instructions",[]);le(this,"subMappings",[]);le(this,"dictionaryInfo",[]);le(this,"debugSectionId",-1)}storeInstructionPrefix(t,e,a){return this.instructions.push({instr:a,offset:this.bits,debugSection:this.debugSectionId}),super.storeUint(t,e)}build(){const t=this.asCell();return[t,{cell:t.hash().toString("hex"),instructions:this.instructions,subMappings:this.subMappings,dictionaryInfo:this.dictionaryInfo}]}startDebugSection(t){return this.debugSectionId=t,this}pushMappings(...t){return this.subMappings.push(...t),this}pushInstructions(...t){return this.instructions.push(...t),this}getDictionaryInfo(){return this.dictionaryInfo}pushDictionaryInfo(...t){return this.dictionaryInfo.push(...t),this}storeRefWithMapping([t,e]){return this.subMappings.push(e),super.storeRef(t)}storeDictionaryDirect(t){return t.storeDirect(this),this}reinitFrom(t){return this._bits=t._bits,this._refs=t._refs,this.instructions.push(...t.instructions),this.subMappings.push(...t.subMappings),this.dictionaryInfo.push(...t.dictionaryInfo),this.debugSectionId=t.debugSectionId,this}}return kn.CodeBuilder=G,kn}var D={},sC;function Sr(){if(sC)return D;sC=1,Object.defineProperty(D,"__esModule",{value:!0}),D.ISNAN=D.CMP=D.GEQ=D.NEQ=D.GREATER=D.LEQ=D.EQUAL=D.LESS=D.SGN=D.QABS=D.QMINMAX=D.QMAX=D.QMIN=D.QUBITSIZE=D.QBITSIZE=D.QUFITSX=D.QFITSX=D.QNOT=D.QXOR=D.QOR=D.QAND=D.QPOW2=D.QMUL=D.QDEC=D.QINC=D.QNEGATE=D.QSUBR=D.QSUB=D.QADD=D.ABS=D.MINMAX=D.MAX=D.MIN=D.UBITSIZE=D.BITSIZE=D.UFITSX=D.FITSX=D.NOT=D.XOR=D.OR=D.AND=D.POW2=D.MUL=D.DEC=D.INC=D.NEGATE=D.SUBR=D.SUB=D.ADD=D.PUSHNAN=void 0,D.BREMBITS=D.BBITREFS=D.BREFS=D.BBITS=D.BDEPTH=D.ENDXC=D.STBRQ=D.STSLICERQ=D.STBREFRQ=D.STREFRQ=D.STBQ=D.STSLICEQ=D.STBREFQ=D.STREFQ=D.STBR=D.STSLICER=D.STBREFR=D.STREFR=D.STB=D.STBREF=D.ENDCST=D.ENDC=D.NEWC=D.SDCNTTRAIL1=D.SDCNTTRAIL0=D.SDCNTLEAD1=D.SDCNTLEAD0=D.SDPSFXREV=D.SDPSFX=D.SDSFXREV=D.SDSFX=D.SDPPFXREV=D.SDPPFX=D.SDPFXREV=D.SDPFX=D.SDEQ=D.SDLEXCMP=D.SDFIRST=D.SREMPTY=D.SDEMPTY=D.SEMPTY=D.QCMP=D.QGEQ=D.QNEQ=D.QGREATER=D.QLEQ=D.QEQUAL=D.QLESS=D.QSGN=D.CHKNAN=void 0,D.RET=D.JMPX=D.EXECUTE=D.CDEPTHIX=D.CHASHIX=D.CLEVELMASK=D.CLEVEL=D.CDEPTH=D.SDEPTH=D.LDSAME=D.LDONES=D.LDZEROES=D.SBITREFS=D.SREFS=D.SBITS=D.PLDREFVAR=D.SCHKBITREFSQ=D.SCHKREFSQ=D.SCHKBITSQ=D.SCHKBITREFS=D.SCHKREFS=D.SCHKBITS=D.XLOADQ=D.XLOAD=D.XCTOS=D.SPLITQ=D.SPLIT=D.SUBSLICE=D.SSKIPLAST=D.SCUTLAST=D.SSKIPFIRST=D.SCUTFIRST=D.SDSUBSTR=D.SDSKIPLAST=D.SDCUTLAST=D.SDSKIPFIRST=D.SDCUTFIRST=D.LDREFRTOS=D.LDREF=D.ENDS=D.CTOS=D.STSAME=D.STONES=D.STZEROES=D.BCHKBITREFSQ=D.BCHKREFSQ=D.BCHKBITREFS=D.BCHKREFS=D.BREMBITREFS=D.BREMREFS=void 0,D.ATEXIT=D.COMPOSBOTH=D.BOOLOR=D.BOOLAND=D.SETCONTCTRMANYX=D.SETCONTCTRX=D.POPCTRX=D.PUSHCTRX=D.BLESSVARARGS=D.BLESS=D.SETNUMVARARGS=D.SETCONTVARARGS=D.RETURNVARARGS=D.AGAINENDBRK=D.AGAINBRK=D.WHILEENDBRK=D.WHILEBRK=D.UNTILENDBRK=D.UNTILBRK=D.REPEATENDBRK=D.REPEATBRK=D.AGAINEND=D.AGAIN=D.WHILEEND=D.WHILE=D.UNTILEND=D.UNTIL=D.REPEATEND=D.REPEAT=D.IFNOTRETALT=D.IFRETALT=D.CONDSELCHK=D.CONDSEL=D.IFELSE=D.IFNOTJMP=D.IFJMP=D.IFNOT=D.IF=D.IFNOTRET=D.IFRET=D.RUNVMX=D.RETDATA=D.CALLCCVARARGS=D.JMPXVARARGS=D.RETVARARGS=D.CALLXVARARGS=D.JMPXDATA=D.CALLCC=D.RETBOOL=D.RETALT=void 0,D.NOW=D.COMMIT=D.GASCONSUMED=D.SETGASLIMIT=D.ACCEPT=D.ONLYX=D.ONLYTOPX=D.CHKDEPTH=D.DEPTH=D.XCHGX=D.TUCK=D.DROPX=D.REVX=D.BLKSWX=D.ROLLREV=D.ROLL=D.PICK=D.ROTREV=D.ROT=D.NIP=D.DROP=D.OVER=D.DUP=D.SWAP=D.NOP=D.PFXDICTGETEXEC=D.PFXDICTGETJMP=D.PFXDICTGET=D.PFXDICTGETQ=D.PFXDICTDEL=D.PFXDICTADD=D.PFXDICTREPLACE=D.PFXDICTSET=D.PLDDICTQ=D.LDDICTQ=D.PLDDICT=D.LDDICT=D.PLDDICTS=D.LDDICTS=D.SKIPDICT=D.STDICT=D.TRY=D.SAMEALTSAVE=D.SAMEALT=D.BOOLEVAL=D.INVERT=D.THENRETALT=D.THENRET=D.SETEXITALT=D.ATEXITALT=void 0,D.RIST255_QADD=D.RIST255_QVALIDATE=D.RIST255_PUSHL=D.RIST255_MULBASE=D.RIST255_MUL=D.RIST255_SUB=D.RIST255_ADD=D.RIST255_VALIDATE=D.RIST255_FROMHASH=D.P256_CHKSIGNS=D.P256_CHKSIGNU=D.SECP256K1_XONLY_PUBKEY_TWEAK_ADD=D.ECRECOVER=D.CHKSIGNS=D.CHKSIGNU=D.SHA256U=D.HASHSU=D.HASHCU=D.ADDRAND=D.SETRAND=D.RAND=D.RANDU256=D.SETGLOBVAR=D.GETGLOBVAR=D.GETFORWARDFEESIMPLE=D.GETGASFEESIMPLE=D.GETORIGINALFWDFEE=D.GETPRECOMPILEDGAS=D.GETFORWARDFEE=D.GETSTORAGEFEE=D.GETGASFEE=D.GLOBALID=D.PREVMCBLOCKS_100=D.PREVKEYBLOCK=D.PREVMCBLOCKS=D.CONFIGOPTPARAM=D.CONFIGPARAM=D.CONFIGDICT=D.DUEPAYMENT=D.UNPACKEDCONFIGTUPLE=D.PREVBLOCKSINFOTUPLE=D.STORAGEFEES=D.INCOMINGVALUE=D.MYCODE=D.CONFIGROOT=D.MYADDR=D.BALANCE=D.RANDSEED=D.LTIME=D.BLOCKLT=void 0,D.RAWRESERVEX=D.RAWRESERVE=D.SENDRAWMSG=D.REWRITEVARADDRQ=D.REWRITEVARADDR=D.REWRITESTDADDRQ=D.REWRITESTDADDR=D.PARSEMSGADDRQ=D.PARSEMSGADDR=D.LDMSGADDRQ=D.LDMSGADDR=D.STVARINT32=D.STVARUINT32=D.LDVARINT32=D.LDVARUINT32=D.STVARINT16=D.STGRAMS=D.LDVARINT16=D.LDGRAMS=D.SDATASIZE=D.SDATASIZEQ=D.CDATASIZE=D.CDATASIZEQ=D.BLS_PUSHR=D.BLS_PAIRING=D.BLS_G2_ISZERO=D.BLS_G2_INGROUP=D.BLS_MAP_TO_G2=D.BLS_G2_ZERO=D.BLS_G2_MULTIEXP=D.BLS_G2_MUL=D.BLS_G2_NEG=D.BLS_G2_SUB=D.BLS_G2_ADD=D.BLS_G1_ISZERO=D.BLS_G1_INGROUP=D.BLS_MAP_TO_G1=D.BLS_G1_ZERO=D.BLS_G1_MULTIEXP=D.BLS_G1_MUL=D.BLS_G1_NEG=D.BLS_G1_SUB=D.BLS_G1_ADD=D.BLS_AGGREGATEVERIFY=D.BLS_FASTAGGREGATEVERIFY=D.BLS_AGGREGATE=D.BLS_VERIFY=D.RIST255_QMULBASE=D.RIST255_QMUL=D.RIST255_QSUB=void 0,D.QDIVMOD=D.QMODC=D.QMODR=D.QMOD=D.QDIVC=D.QDIVR=D.QDIV=D.QADDDIVMODC=D.QADDDIVMODR=D.QADDDIVMOD=D.DIVMODC=D.DIVMODR=D.DIVMOD=D.MODC=D.MODR=D.MOD=D.DIVC=D.DIVR=D.DIV=D.ADDDIVMODC=D.ADDDIVMODR=D.ADDDIVMOD=D.NULLROTRIFNOT2=D.NULLROTRIF2=D.NULLSWAPIFNOT2=D.NULLSWAPIF2=D.NULLROTRIFNOT=D.NULLROTRIF=D.NULLSWAPIFNOT=D.NULLSWAPIF=D.TPOP=D.TPUSH=D.LAST=D.ISTUPLE=D.QTLEN=D.TLEN=D.SETINDEXVARQ=D.INDEXVARQ=D.SETINDEXVAR=D.EXPLODEVAR=D.UNPACKFIRSTVAR=D.UNTUPLEVAR=D.INDEXVAR=D.TUPLEVAR=D.ISNULL=D.PUSHNULL=D.SENDMSG=D.CHANGELIB=D.SETLIBCODE=D.SETCODE=void 0,D.MULADDRSHIFTRMOD=D.MULADDRSHIFTMOD=D.QMULDIVMODC=D.QMULDIVMODR=D.QMULDIVMOD=D.QMULMODC=D.QMULMODR=D.QMULMOD=D.QMULDIVC=D.QMULDIVR=D.QMULDIV=D.QMULADDDIVMODC=D.QMULADDDIVMODR=D.QMULADDDIVMOD=D.MULDIVMODC=D.MULDIVMODR=D.MULDIVMOD=D.MULMODC=D.MULMODR=D.MULMOD=D.MULDIVC=D.MULDIVR=D.MULDIV=D.MULADDDIVMODC=D.MULADDDIVMODR=D.MULADDDIVMOD=D.QRSHIFTMODC=D.QRSHIFTMODR=D.QRSHIFTMOD=D.QMODPOW2C=D.QMODPOW2R=D.QMODPOW2=D.QRSHIFTC=D.QRSHIFTR=D.QADDRSHIFTMODC=D.QADDRSHIFTMODR=D.QADDRSHIFTMOD=D.RSHIFTMODC=D.RSHIFTMODR=D.RSHIFTMOD=D.MODPOW2C=D.MODPOW2R=D.MODPOW2=D.RSHIFTC=D.RSHIFTR=D.ADDRSHIFTMODC=D.ADDRSHIFTMODR=D.ADDRSHIFTMOD=D.QDIVMODC=D.QDIVMODR=void 0,D.STUXR=D.STIXR=D.STUX=D.STIX=D.QLSHIFTDIVMODC=D.QLSHIFTDIVMODR=D.QLSHIFTDIVMOD=D.QLSHIFTMODC=D.QLSHIFTMODR=D.QLSHIFTMOD=D.QLSHIFTDIVC=D.QLSHIFTDIVR=D.QLSHIFTDIV=D.QLSHIFTADDDIVMODC=D.QLSHIFTADDDIVMODR=D.QLSHIFTADDDIVMOD=D.LSHIFTDIVMODC=D.LSHIFTDIVMODR=D.LSHIFTDIVMOD=D.LSHIFTMODC=D.LSHIFTMODR=D.LSHIFTMOD=D.LSHIFTDIVC=D.LSHIFTDIVR=D.LSHIFTDIV=D.LSHIFTADDDIVMODC=D.LSHIFTADDDIVMODR=D.LSHIFTADDDIVMOD=D.QMULRSHIFTCMOD=D.QMULRSHIFTRMOD=D.QMULRSHIFTMOD=D.QMULMODPOW2C=D.QMULMODPOW2R=D.QMULMODPOW2=D.QMULRSHIFTC=D.QMULRSHIFTR=D.QMULRSHIFT=D.QMULADDRSHIFTCMOD=D.QMULADDRSHIFTRMOD=D.QMULADDRSHIFTMOD=D.MULRSHIFTCMOD=D.MULRSHIFTRMOD=D.MULRSHIFTMOD=D.MULMODPOW2C=D.MULMODPOW2R=D.MULMODPOW2=D.MULRSHIFTC=D.MULRSHIFTR=D.MULRSHIFT=D.MULADDRSHIFTCMOD=void 0,D.DICTUGETREF=D.DICTUGET=D.DICTIGETREF=D.DICTIGET=D.DICTGETREF=D.DICTGET=D.DICTUGETEXECZ=D.DICTIGETEXECZ=D.DICTUGETJMPZ=D.DICTIGETJMPZ=D.DICTUGETEXEC=D.DICTIGETEXEC=D.DICTUGETJMP=D.DICTIGETJMP=D.PLDULE8Q=D.PLDILE8Q=D.PLDULE4Q=D.PLDILE4Q=D.LDULE8Q=D.LDILE8Q=D.LDULE4Q=D.LDILE4Q=D.PLDULE8=D.PLDILE8=D.PLDULE4=D.PLDILE4=D.LDULE8=D.LDILE8=D.LDULE4=D.LDILE4=D.PLDSLICEXQ=D.LDSLICEXQ=D.PLDSLICEX=D.LDSLICEX=D.PLDUXQ=D.PLDIXQ=D.LDUXQ=D.LDIXQ=D.PLDUX=D.PLDIX=D.LDUX=D.LDIX=D.STULE8=D.STILE8=D.STULE4=D.STILE4=D.STUXRQ=D.STIXRQ=D.STUXQ=D.STIXQ=void 0,D.DICTMAXREF=D.DICTMAX=D.DICTUMINREF=D.DICTUMIN=D.DICTIMINREF=D.DICTIMIN=D.DICTMINREF=D.DICTMIN=D.DICTUDELGETREF=D.DICTUDELGET=D.DICTIDELGETREF=D.DICTIDELGET=D.DICTDELGETREF=D.DICTDELGET=D.DICTUADDGETREF=D.DICTUADDGET=D.DICTIADDGETREF=D.DICTIADDGET=D.DICTADDGETREF=D.DICTADDGET=D.DICTUADDREF=D.DICTUADD=D.DICTIADDREF=D.DICTIADD=D.DICTADDREF=D.DICTADD=D.DICTUREPLACEGETREF=D.DICTUREPLACEGET=D.DICTIREPLACEGETREF=D.DICTIREPLACEGET=D.DICTREPLACEGETREF=D.DICTREPLACEGET=D.DICTUREPLACEREF=D.DICTUREPLACE=D.DICTIREPLACEREF=D.DICTIREPLACE=D.DICTREPLACEREF=D.DICTREPLACE=D.DICTUSETGETREF=D.DICTUSETGET=D.DICTISETGETREF=D.DICTISETGET=D.DICTSETGETREF=D.DICTSETGET=D.DICTUSETREF=D.DICTUSET=D.DICTISETREF=D.DICTISET=D.DICTSETREF=D.DICTSET=void 0,D.THROWANY=D.SUBDICTURPGET=D.SUBDICTIRPGET=D.SUBDICTRPGET=D.SUBDICTUGET=D.SUBDICTIGET=D.SUBDICTGET=D.DICTUSETGETOPTREF=D.DICTISETGETOPTREF=D.DICTSETGETOPTREF=D.DICTUGETOPTREF=D.DICTIGETOPTREF=D.DICTGETOPTREF=D.DICTUDEL=D.DICTIDEL=D.DICTDEL=D.DICTUADDGETB=D.DICTIADDGETB=D.DICTADDGETB=D.DICTUADDB=D.DICTIADDB=D.DICTADDB=D.DICTUREPLACEGETB=D.DICTIREPLACEGETB=D.DICTREPLACEGETB=D.DICTUREPLACEB=D.DICTIREPLACEB=D.DICTREPLACEB=D.DICTUSETGETB=D.DICTISETGETB=D.DICTSETGETB=D.DICTUSETB=D.DICTISETB=D.DICTSETB=D.DICTUREMMAXREF=D.DICTUREMMAX=D.DICTIREMMAXREF=D.DICTIREMMAX=D.DICTREMMAXREF=D.DICTREMMAX=D.DICTUREMMINREF=D.DICTUREMMIN=D.DICTIREMMINREF=D.DICTIREMMIN=D.DICTREMMINREF=D.DICTREMMIN=D.DICTUMAXREF=D.DICTUMAX=D.DICTIMAXREF=D.DICTIMAX=void 0,D.INDEX=D.TUPLE=D.BLKDROP=D.RETURNARGS=D.RETARGS=D.JMPXARGS=D.THROWARGIFNOT=D.THROWARGIF=D.THROWARG=D.PREPAREDICT=D.JMPDICT=D.CDEPTHI=D.CHASHI=D.PLDREFIDX=D.TRYARGS=D.CALLCCARGS=D.SETCONTCTRMANY=D.QUFITS=D.QFITS=D.UFITS=D.FITS=D.PUSHNEGPOW2=D.PUSHPOW2DEC=D.QNEQINT=D.QGTINT=D.QLESSINT=D.QEQINT=D.NEQINT=D.GTINT=D.LESSINT=D.EQINT=D.QMULINT=D.QADDINT=D.MULINT=D.ADDINT=D.DICTUGETPREVEQ=D.DICTUGETPREV=D.DICTUGETNEXTEQ=D.DICTUGETNEXT=D.DICTIGETPREVEQ=D.DICTIGETPREV=D.DICTIGETNEXTEQ=D.DICTIGETNEXT=D.DICTGETPREVEQ=D.DICTGETPREV=D.DICTGETNEXTEQ=D.DICTGETNEXT=D.THROWARGANYIFNOT=D.THROWANYIFNOT=D.THROWARGANY=void 0,D.PUSHREFCONT=D.PUSHREFSLICE=D.PUSHREF=D.GETPARAM=D.SETGLOB=D.GETGLOB=D.BLKDROP2=D.BLKPUSH=D.PUSHPOW2=D.INDEX3=D.INDEX2=D.IFNBITJMP=D.IFBITJMP=D.PLDSLICEQ=D.LDSLICEQ=D.PLDSLICE=D.PLDUZ=D.PLDUQ=D.PLDIQ=D.LDUQ=D.LDIQ=D.PLDU=D.PLDI=D.STURQ=D.STIRQ=D.STUQ=D.STIQ=D.STUR=D.STIR=D.BLESSARGS=D.SETCONTARGS=D.REVERSE=D.BLKSWAP=D.PU2XC=D.PUXCPU=D.PUXC2=D.XCPUXC=D.PUXC=D.PUSH2=D.XCPU=D.XCHG2=D.PUSH3=D.XCPU2=D.XC2PU=D.SETINDEXQ=D.INDEXQ=D.SETINDEX=D.EXPLODE=D.UNPACKFIRST=D.UNTUPLE=void 0,D.MULADDRSHIFTC_MOD=D.MULADDRSHIFTR_MOD=D.MULADDRSHIFT_MOD=D.RSHIFTC_MOD=D.RSHIFTR_MOD=D.RSHIFT_MOD=D.MODPOW2C_=D.MODPOW2R_=D.MODPOW2_=D.RSHIFTC_=D.RSHIFTR_=D.RSHIFT_=D.ADDRSHIFTC_MOD=D.ADDRSHIFTR_MOD=D.ADDRSHIFT_MOD=D.OVER2=D.DUP2=D.DROP2=D.SWAP2=D.RUNVM=D.SAVEBOTHCTR=D.SAVEALTCTR=D.SAVECTR=D.POPSAVE=D.SETALTCTR=D.SETRETCTR=D.SETCONTCTR=D.DEBUGSTR=D.THROWARGANYIF=D.THROWANYIF=D.STREF2CONST=D.STREFCONST=D.SDBEGINSQ=D.SDBEGINS=D.SDBEGINSXQ=D.SDBEGINSX=D.PFXDICTSWITCH=D.DICTPUSHCONST=D.IFNBITJMPREF=D.IFBITJMPREF=D.IFREFELSEREF=D.IFELSEREF=D.IFREFELSE=D.IFNOTJMPREF=D.IFJMPREF=D.IFNOTREF=D.IFREF=D.JMPREFDATA=D.JMPREF=D.CALLREF=void 0,D.RSHIFT_VAR=D.BCHKBITSQ=D.BCHKBITSQ_VAR=D.BCHKBITS=D.BCHKBITS_VAR=D.QLSHIFT=D.QLSHIFT_VAR=D.LSHIFT=D.LSHIFT_VAR=D.LDSLICE_ALT=D.LDSLICE=D.LDU_ALT=D.LDU=D.LDI_ALT=D.LDI=D.STU_ALT=D.STU=D.STI_ALT=D.STI=D.XCHG3_ALT=D.XCHG3=D.STSLICE_ALT=D.STSLICE=D.STREF_ALT=D.STREF=D.HASHEXTAR=D.HASHEXTA=D.HASHEXTR=D.HASHEXT=D.LSHIFT_DIVMODC=D.LSHIFT_DIVMODR=D.LSHIFT_DIVMOD=D.LSHIFT_MODC=D.LSHIFT_MODR=D.LSHIFT_MOD=D.LSHIFT_DIVC=D.LSHIFT_DIVR=D.LSHIFT_DIV=D.LSHIFT_ADDDIVMODC=D.LSHIFT_ADDDIVMODR=D.LSHIFT_ADDDIVMOD=D.MULRSHIFTC_MOD=D.MULRSHIFTR_MOD=D.MULRSHIFT_MOD=D.MULMODPOW2C_=D.MULMODPOW2R_=D.MULMODPOW2_=D.MULRSHIFTC_=D.MULRSHIFTR_=D.MULRSHIFT_=void 0,D.DEBUGMARK=D.PSEUDO_EXOTIC=D.PSEUDO_PUSHSLICE=D.PSEUDO_PUSHREF=D.SETCP_SHORT=D.SETCPX=D.SETCP=D.STSLICECONST=D.PUSHCONT_SHORT=D.PUSHCONT=D.PUSHSLICE_LONG=D.PUSHSLICE_REFS=D.PUSHSLICE=D.CALLXARGS_1=D.CALLXARGS=D.POP_LONG=D.POP=D.POPCTR=D.PUSH_LONG=D.PUSH=D.PUSHCTR=D.DEBUG_2=D.DUMP=D.DEBUG_1=D.STRDUMP=D.DEBUG=D.DUMPSTK=D.XCHG_1I=D.XCHG_IJ=D.XCHG_0I=D.XCHG_01_LONG=D.PUSHINT_LONG=D.PUSHINT_16=D.PUSHINT_8=D.PUSHINT_4=D.THROWIFNOT=D.THROWIFNOT_SHORT=D.THROWIF=D.THROWIF_SHORT=D.THROW=D.THROW_SHORT=D.CALLDICT_LONG=D.CALLDICT=D.QRSHIFT_ALT=D.QRSHIFT=D.QRSHIFT_VAR=D.RSHIFT_ALT=D.RSHIFT=void 0;const r=s=>({$:"PUSHNAN",loc:s});D.PUSHNAN=r;const G=s=>({$:"ADD",loc:s});D.ADD=G;const _=s=>({$:"SUB",loc:s});D.SUB=_;const S=s=>({$:"SUBR",loc:s});D.SUBR=S;const t=s=>({$:"NEGATE",loc:s});D.NEGATE=t;const e=s=>({$:"INC",loc:s});D.INC=e;const a=s=>({$:"DEC",loc:s});D.DEC=a;const C=s=>({$:"MUL",loc:s});D.MUL=C;const u=s=>({$:"POW2",loc:s});D.POW2=u;const o=s=>({$:"AND",loc:s});D.AND=o;const A=s=>({$:"OR",loc:s});D.OR=A;const c=s=>({$:"XOR",loc:s});D.XOR=c;const l=s=>({$:"NOT",loc:s});D.NOT=l;const K=s=>({$:"FITSX",loc:s});D.FITSX=K;const d=s=>({$:"UFITSX",loc:s});D.UFITSX=d;const f=s=>({$:"BITSIZE",loc:s});D.BITSIZE=f;const p=s=>({$:"UBITSIZE",loc:s});D.UBITSIZE=p;const v=s=>({$:"MIN",loc:s});D.MIN=v;const B=s=>({$:"MAX",loc:s});D.MAX=B;const F=s=>({$:"MINMAX",loc:s});D.MINMAX=F;const N=s=>({$:"ABS",loc:s});D.ABS=N;const P=s=>({$:"QADD",loc:s});D.QADD=P;const O=s=>({$:"QSUB",loc:s});D.QSUB=O;const Q=s=>({$:"QSUBR",loc:s});D.QSUBR=Q;const V=s=>({$:"QNEGATE",loc:s});D.QNEGATE=V;const w=s=>({$:"QINC",loc:s});D.QINC=w;const b=s=>({$:"QDEC",loc:s});D.QDEC=b;const j=s=>({$:"QMUL",loc:s});D.QMUL=j;const ne=s=>({$:"QPOW2",loc:s});D.QPOW2=ne;const Ie=s=>({$:"QAND",loc:s});D.QAND=Ie;const Pe=s=>({$:"QOR",loc:s});D.QOR=Pe;const Se=s=>({$:"QXOR",loc:s});D.QXOR=Se;const Ce=s=>({$:"QNOT",loc:s});D.QNOT=Ce;const h=s=>({$:"QFITSX",loc:s});D.QFITSX=h;const Z=s=>({$:"QUFITSX",loc:s});D.QUFITSX=Z;const k=s=>({$:"QBITSIZE",loc:s});D.QBITSIZE=k;const Y=s=>({$:"QUBITSIZE",loc:s});D.QUBITSIZE=Y;const q=s=>({$:"QMIN",loc:s});D.QMIN=q;const ae=s=>({$:"QMAX",loc:s});D.QMAX=ae;const te=s=>({$:"QMINMAX",loc:s});D.QMINMAX=te;const Ae=s=>({$:"QABS",loc:s});D.QABS=Ae;const Fe=s=>({$:"SGN",loc:s});D.SGN=Fe;const Ge=s=>({$:"LESS",loc:s});D.LESS=Ge;const m=s=>({$:"EQUAL",loc:s});D.EQUAL=m;const H=s=>({$:"LEQ",loc:s});D.LEQ=H;const $=s=>({$:"GREATER",loc:s});D.GREATER=$;const J=s=>({$:"NEQ",loc:s});D.NEQ=J;const re=s=>({$:"GEQ",loc:s});D.GEQ=re;const De=s=>({$:"CMP",loc:s});D.CMP=De;const Ee=s=>({$:"ISNAN",loc:s});D.ISNAN=Ee;const Re=s=>({$:"CHKNAN",loc:s});D.CHKNAN=Re;const oe=s=>({$:"QSGN",loc:s});D.QSGN=oe;const Oe=s=>({$:"QLESS",loc:s});D.QLESS=Oe;const ge=s=>({$:"QEQUAL",loc:s});D.QEQUAL=ge;const de=s=>({$:"QLEQ",loc:s});D.QLEQ=de;const Rr=s=>({$:"QGREATER",loc:s});D.QGREATER=Rr;const ur=s=>({$:"QNEQ",loc:s});D.QNEQ=ur;const Cr=s=>({$:"QGEQ",loc:s});D.QGEQ=Cr;const Ur=s=>({$:"QCMP",loc:s});D.QCMP=Ur;const lr=s=>({$:"SEMPTY",loc:s});D.SEMPTY=lr;const Nr=s=>({$:"SDEMPTY",loc:s});D.SDEMPTY=Nr;const Hr=s=>({$:"SREMPTY",loc:s});D.SREMPTY=Hr;const Gr=s=>({$:"SDFIRST",loc:s});D.SDFIRST=Gr;const Qr=s=>({$:"SDLEXCMP",loc:s});D.SDLEXCMP=Qr;const pe=s=>({$:"SDEQ",loc:s});D.SDEQ=pe;const _r=s=>({$:"SDPFX",loc:s});D.SDPFX=_r;const Ar=s=>({$:"SDPFXREV",loc:s});D.SDPFXREV=Ar;const Br=s=>({$:"SDPPFX",loc:s});D.SDPPFX=Br;const fr=s=>({$:"SDPPFXREV",loc:s});D.SDPPFXREV=fr;const Xr=s=>({$:"SDSFX",loc:s});D.SDSFX=Xr;const Vr=s=>({$:"SDSFXREV",loc:s});D.SDSFXREV=Vr;const $r=s=>({$:"SDPSFX",loc:s});D.SDPSFX=$r;const Wr=s=>({$:"SDPSFXREV",loc:s});D.SDPSFXREV=Wr;const Mr=s=>({$:"SDCNTLEAD0",loc:s});D.SDCNTLEAD0=Mr;const Kr=s=>({$:"SDCNTLEAD1",loc:s});D.SDCNTLEAD1=Kr;const Zr=s=>({$:"SDCNTTRAIL0",loc:s});D.SDCNTTRAIL0=Zr;const cr=s=>({$:"SDCNTTRAIL1",loc:s});D.SDCNTTRAIL1=cr;const Pr=s=>({$:"NEWC",loc:s});D.NEWC=Pr;const kr=s=>({$:"ENDC",loc:s});D.ENDC=kr;const hr=s=>({$:"ENDCST",loc:s});D.ENDCST=hr;const yr=s=>({$:"STBREF",loc:s});D.STBREF=yr;const wr=s=>({$:"STB",loc:s});D.STB=wr;const pr=s=>({$:"STREFR",loc:s});D.STREFR=pr;const Yr=s=>({$:"STBREFR",loc:s});D.STBREFR=Yr;const br=s=>({$:"STSLICER",loc:s});D.STSLICER=br;const Jr=s=>({$:"STBR",loc:s});D.STBR=Jr;const vr=s=>({$:"STREFQ",loc:s});D.STREFQ=vr;const jr=s=>({$:"STBREFQ",loc:s});D.STBREFQ=jr;const zr=s=>({$:"STSLICEQ",loc:s});D.STSLICEQ=zr;const qr=s=>({$:"STBQ",loc:s});D.STBQ=qr;const xr=s=>({$:"STREFRQ",loc:s});D.STREFRQ=xr;const en=s=>({$:"STBREFRQ",loc:s});D.STBREFRQ=en;const rn=s=>({$:"STSLICERQ",loc:s});D.STSLICERQ=rn;const nn=s=>({$:"STBRQ",loc:s});D.STBRQ=nn;const tn=s=>({$:"ENDXC",loc:s});D.ENDXC=tn;const an=s=>({$:"BDEPTH",loc:s});D.BDEPTH=an;const Tn=s=>({$:"BBITS",loc:s});D.BBITS=Tn;const In=s=>({$:"BREFS",loc:s});D.BREFS=In;const Dn=s=>({$:"BBITREFS",loc:s});D.BBITREFS=Dn;const En=s=>({$:"BREMBITS",loc:s});D.BREMBITS=En;const sn=s=>({$:"BREMREFS",loc:s});D.BREMREFS=sn;const Sn=s=>({$:"BREMBITREFS",loc:s});D.BREMBITREFS=Sn;const Rn=s=>({$:"BCHKREFS",loc:s});D.BCHKREFS=Rn;const on=s=>({$:"BCHKBITREFS",loc:s});D.BCHKBITREFS=on;const Ln=s=>({$:"BCHKREFSQ",loc:s});D.BCHKREFSQ=Ln;const M=s=>({$:"BCHKBITREFSQ",loc:s});D.BCHKBITREFSQ=M;const Ze=s=>({$:"STZEROES",loc:s});D.STZEROES=Ze;const me=s=>({$:"STONES",loc:s});D.STONES=me;const Dr=s=>({$:"STSAME",loc:s});D.STSAME=Dr;const x=s=>({$:"CTOS",loc:s});D.CTOS=x;const Ye=s=>({$:"ENDS",loc:s});D.ENDS=Ye;const un=s=>({$:"LDREF",loc:s});D.LDREF=un;const Te=s=>({$:"LDREFRTOS",loc:s});D.LDREFRTOS=Te;const be=s=>({$:"SDCUTFIRST",loc:s});D.SDCUTFIRST=be;const Cn=s=>({$:"SDSKIPFIRST",loc:s});D.SDSKIPFIRST=Cn;const Or=s=>({$:"SDCUTLAST",loc:s});D.SDCUTLAST=Or;const dr=s=>({$:"SDSKIPLAST",loc:s});D.SDSKIPLAST=dr;const ee=s=>({$:"SDSUBSTR",loc:s});D.SDSUBSTR=ee;const An=s=>({$:"SCUTFIRST",loc:s});D.SCUTFIRST=An;const Fr=s=>({$:"SSKIPFIRST",loc:s});D.SSKIPFIRST=Fr;const Mn=s=>({$:"SCUTLAST",loc:s});D.SCUTLAST=Mn;const cn=s=>({$:"SSKIPLAST",loc:s});D.SSKIPLAST=cn;const Pn=s=>({$:"SUBSLICE",loc:s});D.SUBSLICE=Pn;const On=s=>({$:"SPLIT",loc:s});D.SPLIT=On;const dn=s=>({$:"SPLITQ",loc:s});D.SPLITQ=dn;const Fn=s=>({$:"XCTOS",loc:s});D.XCTOS=Fn;const mn=s=>({$:"XLOAD",loc:s});D.XLOAD=mn;const gn=s=>({$:"XLOADQ",loc:s});D.XLOADQ=gn;const Un=s=>({$:"SCHKBITS",loc:s});D.SCHKBITS=Un;const ln=s=>({$:"SCHKREFS",loc:s});D.SCHKREFS=ln;const ke=s=>({$:"SCHKBITREFS",loc:s});D.SCHKBITREFS=ke;const Nn=s=>({$:"SCHKBITSQ",loc:s});D.SCHKBITSQ=Nn;const Hn=s=>({$:"SCHKREFSQ",loc:s});D.SCHKREFSQ=Hn;const Gn=s=>({$:"SCHKBITREFSQ",loc:s});D.SCHKBITREFSQ=Gn;const Qn=s=>({$:"PLDREFVAR",loc:s});D.PLDREFVAR=Qn;const _n=s=>({$:"SBITS",loc:s});D.SBITS=_n;const mr=s=>({$:"SREFS",loc:s});D.SREFS=mr;const Bn=s=>({$:"SBITREFS",loc:s});D.SBITREFS=Bn;const fn=s=>({$:"LDZEROES",loc:s});D.LDZEROES=fn;const Xn=s=>({$:"LDONES",loc:s});D.LDONES=Xn;const Vn=s=>({$:"LDSAME",loc:s});D.LDSAME=Vn;const $n=s=>({$:"SDEPTH",loc:s});D.SDEPTH=$n;const Wn=s=>({$:"CDEPTH",loc:s});D.CDEPTH=Wn;const Kn=s=>({$:"CLEVEL",loc:s});D.CLEVEL=Kn;const Zn=s=>({$:"CLEVELMASK",loc:s});D.CLEVELMASK=Zn;const Ue=s=>({$:"CHASHIX",loc:s});D.CHASHIX=Ue;const Je=s=>({$:"CDEPTHIX",loc:s});D.CDEPTHIX=Je;const Le=s=>({$:"EXECUTE",loc:s});D.EXECUTE=Le;const ir=s=>({$:"JMPX",loc:s});D.JMPX=ir;const gr=s=>({$:"RET",loc:s});D.RET=gr;const L=s=>({$:"RETALT",loc:s});D.RETALT=L;const g=s=>({$:"RETBOOL",loc:s});D.RETBOOL=g;const U=s=>({$:"CALLCC",loc:s});D.CALLCC=U;const y=s=>({$:"JMPXDATA",loc:s});D.JMPXDATA=y;const W=s=>({$:"CALLXVARARGS",loc:s});D.CALLXVARARGS=W;const ue=s=>({$:"RETVARARGS",loc:s});D.RETVARARGS=ue;const Me=s=>({$:"JMPXVARARGS",loc:s});D.JMPXVARARGS=Me;const Qe=s=>({$:"CALLCCVARARGS",loc:s});D.CALLCCVARARGS=Qe;const nt=s=>({$:"RETDATA",loc:s});D.RETDATA=nt;const tt=s=>({$:"RUNVMX",loc:s});D.RUNVMX=tt;const at=s=>({$:"IFRET",loc:s});D.IFRET=at;const Tt=s=>({$:"IFNOTRET",loc:s});D.IFNOTRET=Tt;const It=s=>({$:"IF",loc:s});D.IF=It;const Dt=s=>({$:"IFNOT",loc:s});D.IFNOT=Dt;const Et=s=>({$:"IFJMP",loc:s});D.IFJMP=Et;const st=s=>({$:"IFNOTJMP",loc:s});D.IFNOTJMP=st;const St=s=>({$:"IFELSE",loc:s});D.IFELSE=St;const Rt=s=>({$:"CONDSEL",loc:s});D.CONDSEL=Rt;const it=s=>({$:"CONDSELCHK",loc:s});D.CONDSELCHK=it;const ot=s=>({$:"IFRETALT",loc:s});D.IFRETALT=ot;const Lt=s=>({$:"IFNOTRETALT",loc:s});D.IFNOTRETALT=Lt;const ut=s=>({$:"REPEAT",loc:s});D.REPEAT=ut;const Ct=s=>({$:"REPEATEND",loc:s});D.REPEATEND=Ct;const At=s=>({$:"UNTIL",loc:s});D.UNTIL=At;const Mt=s=>({$:"UNTILEND",loc:s});D.UNTILEND=Mt;const ct=s=>({$:"WHILE",loc:s});D.WHILE=ct;const Pt=s=>({$:"WHILEEND",loc:s});D.WHILEEND=Pt;const Ot=s=>({$:"AGAIN",loc:s});D.AGAIN=Ot;const dt=s=>({$:"AGAINEND",loc:s});D.AGAINEND=dt;const Ft=s=>({$:"REPEATBRK",loc:s});D.REPEATBRK=Ft;const mt=s=>({$:"REPEATENDBRK",loc:s});D.REPEATENDBRK=mt;const gt=s=>({$:"UNTILBRK",loc:s});D.UNTILBRK=gt;const Ut=s=>({$:"UNTILENDBRK",loc:s});D.UNTILENDBRK=Ut;const lt=s=>({$:"WHILEBRK",loc:s});D.WHILEBRK=lt;const Nt=s=>({$:"WHILEENDBRK",loc:s});D.WHILEENDBRK=Nt;const Ht=s=>({$:"AGAINBRK",loc:s});D.AGAINBRK=Ht;const Gt=s=>({$:"AGAINENDBRK",loc:s});D.AGAINENDBRK=Gt;const Qt=s=>({$:"RETURNVARARGS",loc:s});D.RETURNVARARGS=Qt;const _t=s=>({$:"SETCONTVARARGS",loc:s});D.SETCONTVARARGS=_t;const Bt=s=>({$:"SETNUMVARARGS",loc:s});D.SETNUMVARARGS=Bt;const ft=s=>({$:"BLESS",loc:s});D.BLESS=ft;const Xt=s=>({$:"BLESSVARARGS",loc:s});D.BLESSVARARGS=Xt;const Vt=s=>({$:"PUSHCTRX",loc:s});D.PUSHCTRX=Vt;const $t=s=>({$:"POPCTRX",loc:s});D.POPCTRX=$t;const Wt=s=>({$:"SETCONTCTRX",loc:s});D.SETCONTCTRX=Wt;const Kt=s=>({$:"SETCONTCTRMANYX",loc:s});D.SETCONTCTRMANYX=Kt;const Zt=s=>({$:"BOOLAND",loc:s});D.BOOLAND=Zt;const kt=s=>({$:"BOOLOR",loc:s});D.BOOLOR=kt;const ht=s=>({$:"COMPOSBOTH",loc:s});D.COMPOSBOTH=ht;const yt=s=>({$:"ATEXIT",loc:s});D.ATEXIT=yt;const wt=s=>({$:"ATEXITALT",loc:s});D.ATEXITALT=wt;const pt=s=>({$:"SETEXITALT",loc:s});D.SETEXITALT=pt;const Yt=s=>({$:"THENRET",loc:s});D.THENRET=Yt;const bt=s=>({$:"THENRETALT",loc:s});D.THENRETALT=bt;const Jt=s=>({$:"INVERT",loc:s});D.INVERT=Jt;const vt=s=>({$:"BOOLEVAL",loc:s});D.BOOLEVAL=vt;const jt=s=>({$:"SAMEALT",loc:s});D.SAMEALT=jt;const zt=s=>({$:"SAMEALTSAVE",loc:s});D.SAMEALTSAVE=zt;const qt=s=>({$:"TRY",loc:s});D.TRY=qt;const xt=s=>({$:"STDICT",loc:s});D.STDICT=xt;const ea=s=>({$:"SKIPDICT",loc:s});D.SKIPDICT=ea;const ra=s=>({$:"LDDICTS",loc:s});D.LDDICTS=ra;const na=s=>({$:"PLDDICTS",loc:s});D.PLDDICTS=na;const ta=s=>({$:"LDDICT",loc:s});D.LDDICT=ta;const aa=s=>({$:"PLDDICT",loc:s});D.PLDDICT=aa;const Ta=s=>({$:"LDDICTQ",loc:s});D.LDDICTQ=Ta;const Ia=s=>({$:"PLDDICTQ",loc:s});D.PLDDICTQ=Ia;const Da=s=>({$:"PFXDICTSET",loc:s});D.PFXDICTSET=Da;const Ea=s=>({$:"PFXDICTREPLACE",loc:s});D.PFXDICTREPLACE=Ea;const sa=s=>({$:"PFXDICTADD",loc:s});D.PFXDICTADD=sa;const Sa=s=>({$:"PFXDICTDEL",loc:s});D.PFXDICTDEL=Sa;const Ra=s=>({$:"PFXDICTGETQ",loc:s});D.PFXDICTGETQ=Ra;const ia=s=>({$:"PFXDICTGET",loc:s});D.PFXDICTGET=ia;const oa=s=>({$:"PFXDICTGETJMP",loc:s});D.PFXDICTGETJMP=oa;const La=s=>({$:"PFXDICTGETEXEC",loc:s});D.PFXDICTGETEXEC=La;const ua=s=>({$:"NOP",loc:s});D.NOP=ua;const Ca=s=>({$:"SWAP",loc:s});D.SWAP=Ca;const Aa=s=>({$:"DUP",loc:s});D.DUP=Aa;const Ma=s=>({$:"OVER",loc:s});D.OVER=Ma;const ca=s=>({$:"DROP",loc:s});D.DROP=ca;const Pa=s=>({$:"NIP",loc:s});D.NIP=Pa;const Oa=s=>({$:"ROT",loc:s});D.ROT=Oa;const da=s=>({$:"ROTREV",loc:s});D.ROTREV=da;const Fa=s=>({$:"PICK",loc:s});D.PICK=Fa;const ma=s=>({$:"ROLL",loc:s});D.ROLL=ma;const ga=s=>({$:"ROLLREV",loc:s});D.ROLLREV=ga;const Ua=s=>({$:"BLKSWX",loc:s});D.BLKSWX=Ua;const la=s=>({$:"REVX",loc:s});D.REVX=la;const Na=s=>({$:"DROPX",loc:s});D.DROPX=Na;const Ha=s=>({$:"TUCK",loc:s});D.TUCK=Ha;const Ga=s=>({$:"XCHGX",loc:s});D.XCHGX=Ga;const Qa=s=>({$:"DEPTH",loc:s});D.DEPTH=Qa;const _a=s=>({$:"CHKDEPTH",loc:s});D.CHKDEPTH=_a;const Ba=s=>({$:"ONLYTOPX",loc:s});D.ONLYTOPX=Ba;const fa=s=>({$:"ONLYX",loc:s});D.ONLYX=fa;const Xa=s=>({$:"ACCEPT",loc:s});D.ACCEPT=Xa;const Va=s=>({$:"SETGASLIMIT",loc:s});D.SETGASLIMIT=Va;const $a=s=>({$:"GASCONSUMED",loc:s});D.GASCONSUMED=$a;const Wa=s=>({$:"COMMIT",loc:s});D.COMMIT=Wa;const Ka=s=>({$:"NOW",loc:s});D.NOW=Ka;const Za=s=>({$:"BLOCKLT",loc:s});D.BLOCKLT=Za;const ka=s=>({$:"LTIME",loc:s});D.LTIME=ka;const ha=s=>({$:"RANDSEED",loc:s});D.RANDSEED=ha;const ya=s=>({$:"BALANCE",loc:s});D.BALANCE=ya;const wa=s=>({$:"MYADDR",loc:s});D.MYADDR=wa;const pa=s=>({$:"CONFIGROOT",loc:s});D.CONFIGROOT=pa;const Ya=s=>({$:"MYCODE",loc:s});D.MYCODE=Ya;const ba=s=>({$:"INCOMINGVALUE",loc:s});D.INCOMINGVALUE=ba;const Ja=s=>({$:"STORAGEFEES",loc:s});D.STORAGEFEES=Ja;const va=s=>({$:"PREVBLOCKSINFOTUPLE",loc:s});D.PREVBLOCKSINFOTUPLE=va;const ja=s=>({$:"UNPACKEDCONFIGTUPLE",loc:s});D.UNPACKEDCONFIGTUPLE=ja;const za=s=>({$:"DUEPAYMENT",loc:s});D.DUEPAYMENT=za;const qa=s=>({$:"CONFIGDICT",loc:s});D.CONFIGDICT=qa;const xa=s=>({$:"CONFIGPARAM",loc:s});D.CONFIGPARAM=xa;const eT=s=>({$:"CONFIGOPTPARAM",loc:s});D.CONFIGOPTPARAM=eT;const rT=s=>({$:"PREVMCBLOCKS",loc:s});D.PREVMCBLOCKS=rT;const nT=s=>({$:"PREVKEYBLOCK",loc:s});D.PREVKEYBLOCK=nT;const tT=s=>({$:"PREVMCBLOCKS_100",loc:s});D.PREVMCBLOCKS_100=tT;const aT=s=>({$:"GLOBALID",loc:s});D.GLOBALID=aT;const TT=s=>({$:"GETGASFEE",loc:s});D.GETGASFEE=TT;const IT=s=>({$:"GETSTORAGEFEE",loc:s});D.GETSTORAGEFEE=IT;const DT=s=>({$:"GETFORWARDFEE",loc:s});D.GETFORWARDFEE=DT;const ET=s=>({$:"GETPRECOMPILEDGAS",loc:s});D.GETPRECOMPILEDGAS=ET;const sT=s=>({$:"GETORIGINALFWDFEE",loc:s});D.GETORIGINALFWDFEE=sT;const ST=s=>({$:"GETGASFEESIMPLE",loc:s});D.GETGASFEESIMPLE=ST;const RT=s=>({$:"GETFORWARDFEESIMPLE",loc:s});D.GETFORWARDFEESIMPLE=RT;const iT=s=>({$:"GETGLOBVAR",loc:s});D.GETGLOBVAR=iT;const oT=s=>({$:"SETGLOBVAR",loc:s});D.SETGLOBVAR=oT;const LT=s=>({$:"RANDU256",loc:s});D.RANDU256=LT;const uT=s=>({$:"RAND",loc:s});D.RAND=uT;const CT=s=>({$:"SETRAND",loc:s});D.SETRAND=CT;const AT=s=>({$:"ADDRAND",loc:s});D.ADDRAND=AT;const MT=s=>({$:"HASHCU",loc:s});D.HASHCU=MT;const cT=s=>({$:"HASHSU",loc:s});D.HASHSU=cT;const PT=s=>({$:"SHA256U",loc:s});D.SHA256U=PT;const OT=s=>({$:"CHKSIGNU",loc:s});D.CHKSIGNU=OT;const dT=s=>({$:"CHKSIGNS",loc:s});D.CHKSIGNS=dT;const FT=s=>({$:"ECRECOVER",loc:s});D.ECRECOVER=FT;const mT=s=>({$:"SECP256K1_XONLY_PUBKEY_TWEAK_ADD",loc:s});D.SECP256K1_XONLY_PUBKEY_TWEAK_ADD=mT;const gT=s=>({$:"P256_CHKSIGNU",loc:s});D.P256_CHKSIGNU=gT;const UT=s=>({$:"P256_CHKSIGNS",loc:s});D.P256_CHKSIGNS=UT;const lT=s=>({$:"RIST255_FROMHASH",loc:s});D.RIST255_FROMHASH=lT;const NT=s=>({$:"RIST255_VALIDATE",loc:s});D.RIST255_VALIDATE=NT;const HT=s=>({$:"RIST255_ADD",loc:s});D.RIST255_ADD=HT;const GT=s=>({$:"RIST255_SUB",loc:s});D.RIST255_SUB=GT;const QT=s=>({$:"RIST255_MUL",loc:s});D.RIST255_MUL=QT;const _T=s=>({$:"RIST255_MULBASE",loc:s});D.RIST255_MULBASE=_T;const BT=s=>({$:"RIST255_PUSHL",loc:s});D.RIST255_PUSHL=BT;const fT=s=>({$:"RIST255_QVALIDATE",loc:s});D.RIST255_QVALIDATE=fT;const XT=s=>({$:"RIST255_QADD",loc:s});D.RIST255_QADD=XT;const VT=s=>({$:"RIST255_QSUB",loc:s});D.RIST255_QSUB=VT;const $T=s=>({$:"RIST255_QMUL",loc:s});D.RIST255_QMUL=$T;const WT=s=>({$:"RIST255_QMULBASE",loc:s});D.RIST255_QMULBASE=WT;const KT=s=>({$:"BLS_VERIFY",loc:s});D.BLS_VERIFY=KT;const ZT=s=>({$:"BLS_AGGREGATE",loc:s});D.BLS_AGGREGATE=ZT;const kT=s=>({$:"BLS_FASTAGGREGATEVERIFY",loc:s});D.BLS_FASTAGGREGATEVERIFY=kT;const hT=s=>({$:"BLS_AGGREGATEVERIFY",loc:s});D.BLS_AGGREGATEVERIFY=hT;const yT=s=>({$:"BLS_G1_ADD",loc:s});D.BLS_G1_ADD=yT;const wT=s=>({$:"BLS_G1_SUB",loc:s});D.BLS_G1_SUB=wT;const pT=s=>({$:"BLS_G1_NEG",loc:s});D.BLS_G1_NEG=pT;const YT=s=>({$:"BLS_G1_MUL",loc:s});D.BLS_G1_MUL=YT;const bT=s=>({$:"BLS_G1_MULTIEXP",loc:s});D.BLS_G1_MULTIEXP=bT;const JT=s=>({$:"BLS_G1_ZERO",loc:s});D.BLS_G1_ZERO=JT;const vT=s=>({$:"BLS_MAP_TO_G1",loc:s});D.BLS_MAP_TO_G1=vT;const jT=s=>({$:"BLS_G1_INGROUP",loc:s});D.BLS_G1_INGROUP=jT;const zT=s=>({$:"BLS_G1_ISZERO",loc:s});D.BLS_G1_ISZERO=zT;const qT=s=>({$:"BLS_G2_ADD",loc:s});D.BLS_G2_ADD=qT;const xT=s=>({$:"BLS_G2_SUB",loc:s});D.BLS_G2_SUB=xT;const eI=s=>({$:"BLS_G2_NEG",loc:s});D.BLS_G2_NEG=eI;const rI=s=>({$:"BLS_G2_MUL",loc:s});D.BLS_G2_MUL=rI;const nI=s=>({$:"BLS_G2_MULTIEXP",loc:s});D.BLS_G2_MULTIEXP=nI;const tI=s=>({$:"BLS_G2_ZERO",loc:s});D.BLS_G2_ZERO=tI;const aI=s=>({$:"BLS_MAP_TO_G2",loc:s});D.BLS_MAP_TO_G2=aI;const TI=s=>({$:"BLS_G2_INGROUP",loc:s});D.BLS_G2_INGROUP=TI;const II=s=>({$:"BLS_G2_ISZERO",loc:s});D.BLS_G2_ISZERO=II;const DI=s=>({$:"BLS_PAIRING",loc:s});D.BLS_PAIRING=DI;const EI=s=>({$:"BLS_PUSHR",loc:s});D.BLS_PUSHR=EI;const sI=s=>({$:"CDATASIZEQ",loc:s});D.CDATASIZEQ=sI;const SI=s=>({$:"CDATASIZE",loc:s});D.CDATASIZE=SI;const RI=s=>({$:"SDATASIZEQ",loc:s});D.SDATASIZEQ=RI;const iI=s=>({$:"SDATASIZE",loc:s});D.SDATASIZE=iI;const oI=s=>({$:"LDGRAMS",loc:s});D.LDGRAMS=oI;const LI=s=>({$:"LDVARINT16",loc:s});D.LDVARINT16=LI;const uI=s=>({$:"STGRAMS",loc:s});D.STGRAMS=uI;const CI=s=>({$:"STVARINT16",loc:s});D.STVARINT16=CI;const AI=s=>({$:"LDVARUINT32",loc:s});D.LDVARUINT32=AI;const MI=s=>({$:"LDVARINT32",loc:s});D.LDVARINT32=MI;const cI=s=>({$:"STVARUINT32",loc:s});D.STVARUINT32=cI;const PI=s=>({$:"STVARINT32",loc:s});D.STVARINT32=PI;const OI=s=>({$:"LDMSGADDR",loc:s});D.LDMSGADDR=OI;const dI=s=>({$:"LDMSGADDRQ",loc:s});D.LDMSGADDRQ=dI;const FI=s=>({$:"PARSEMSGADDR",loc:s});D.PARSEMSGADDR=FI;const mI=s=>({$:"PARSEMSGADDRQ",loc:s});D.PARSEMSGADDRQ=mI;const gI=s=>({$:"REWRITESTDADDR",loc:s});D.REWRITESTDADDR=gI;const UI=s=>({$:"REWRITESTDADDRQ",loc:s});D.REWRITESTDADDRQ=UI;const lI=s=>({$:"REWRITEVARADDR",loc:s});D.REWRITEVARADDR=lI;const NI=s=>({$:"REWRITEVARADDRQ",loc:s});D.REWRITEVARADDRQ=NI;const HI=s=>({$:"SENDRAWMSG",loc:s});D.SENDRAWMSG=HI;const GI=s=>({$:"RAWRESERVE",loc:s});D.RAWRESERVE=GI;const QI=s=>({$:"RAWRESERVEX",loc:s});D.RAWRESERVEX=QI;const _I=s=>({$:"SETCODE",loc:s});D.SETCODE=_I;const BI=s=>({$:"SETLIBCODE",loc:s});D.SETLIBCODE=BI;const fI=s=>({$:"CHANGELIB",loc:s});D.CHANGELIB=fI;const XI=s=>({$:"SENDMSG",loc:s});D.SENDMSG=XI;const VI=s=>({$:"PUSHNULL",loc:s});D.PUSHNULL=VI;const $I=s=>({$:"ISNULL",loc:s});D.ISNULL=$I;const WI=s=>({$:"TUPLEVAR",loc:s});D.TUPLEVAR=WI;const KI=s=>({$:"INDEXVAR",loc:s});D.INDEXVAR=KI;const ZI=s=>({$:"UNTUPLEVAR",loc:s});D.UNTUPLEVAR=ZI;const kI=s=>({$:"UNPACKFIRSTVAR",loc:s});D.UNPACKFIRSTVAR=kI;const hI=s=>({$:"EXPLODEVAR",loc:s});D.EXPLODEVAR=hI;const yI=s=>({$:"SETINDEXVAR",loc:s});D.SETINDEXVAR=yI;const wI=s=>({$:"INDEXVARQ",loc:s});D.INDEXVARQ=wI;const pI=s=>({$:"SETINDEXVARQ",loc:s});D.SETINDEXVARQ=pI;const YI=s=>({$:"TLEN",loc:s});D.TLEN=YI;const bI=s=>({$:"QTLEN",loc:s});D.QTLEN=bI;const JI=s=>({$:"ISTUPLE",loc:s});D.ISTUPLE=JI;const vI=s=>({$:"LAST",loc:s});D.LAST=vI;const jI=s=>({$:"TPUSH",loc:s});D.TPUSH=jI;const zI=s=>({$:"TPOP",loc:s});D.TPOP=zI;const qI=s=>({$:"NULLSWAPIF",loc:s});D.NULLSWAPIF=qI;const xI=s=>({$:"NULLSWAPIFNOT",loc:s});D.NULLSWAPIFNOT=xI;const eD=s=>({$:"NULLROTRIF",loc:s});D.NULLROTRIF=eD;const rD=s=>({$:"NULLROTRIFNOT",loc:s});D.NULLROTRIFNOT=rD;const nD=s=>({$:"NULLSWAPIF2",loc:s});D.NULLSWAPIF2=nD;const tD=s=>({$:"NULLSWAPIFNOT2",loc:s});D.NULLSWAPIFNOT2=tD;const aD=s=>({$:"NULLROTRIF2",loc:s});D.NULLROTRIF2=aD;const TD=s=>({$:"NULLROTRIFNOT2",loc:s});D.NULLROTRIFNOT2=TD;const ID=s=>({$:"ADDDIVMOD",loc:s});D.ADDDIVMOD=ID;const DD=s=>({$:"ADDDIVMODR",loc:s});D.ADDDIVMODR=DD;const ED=s=>({$:"ADDDIVMODC",loc:s});D.ADDDIVMODC=ED;const sD=s=>({$:"DIV",loc:s});D.DIV=sD;const SD=s=>({$:"DIVR",loc:s});D.DIVR=SD;const RD=s=>({$:"DIVC",loc:s});D.DIVC=RD;const iD=s=>({$:"MOD",loc:s});D.MOD=iD;const oD=s=>({$:"MODR",loc:s});D.MODR=oD;const LD=s=>({$:"MODC",loc:s});D.MODC=LD;const uD=s=>({$:"DIVMOD",loc:s});D.DIVMOD=uD;const CD=s=>({$:"DIVMODR",loc:s});D.DIVMODR=CD;const AD=s=>({$:"DIVMODC",loc:s});D.DIVMODC=AD;const MD=s=>({$:"QADDDIVMOD",loc:s});D.QADDDIVMOD=MD;const cD=s=>({$:"QADDDIVMODR",loc:s});D.QADDDIVMODR=cD;const PD=s=>({$:"QADDDIVMODC",loc:s});D.QADDDIVMODC=PD;const OD=s=>({$:"QDIV",loc:s});D.QDIV=OD;const dD=s=>({$:"QDIVR",loc:s});D.QDIVR=dD;const FD=s=>({$:"QDIVC",loc:s});D.QDIVC=FD;const mD=s=>({$:"QMOD",loc:s});D.QMOD=mD;const gD=s=>({$:"QMODR",loc:s});D.QMODR=gD;const UD=s=>({$:"QMODC",loc:s});D.QMODC=UD;const lD=s=>({$:"QDIVMOD",loc:s});D.QDIVMOD=lD;const ND=s=>({$:"QDIVMODR",loc:s});D.QDIVMODR=ND;const HD=s=>({$:"QDIVMODC",loc:s});D.QDIVMODC=HD;const GD=s=>({$:"ADDRSHIFTMOD",loc:s});D.ADDRSHIFTMOD=GD;const QD=s=>({$:"ADDRSHIFTMODR",loc:s});D.ADDRSHIFTMODR=QD;const _D=s=>({$:"ADDRSHIFTMODC",loc:s});D.ADDRSHIFTMODC=_D;const BD=s=>({$:"RSHIFTR",loc:s});D.RSHIFTR=BD;const fD=s=>({$:"RSHIFTC",loc:s});D.RSHIFTC=fD;const XD=s=>({$:"MODPOW2",loc:s});D.MODPOW2=XD;const VD=s=>({$:"MODPOW2R",loc:s});D.MODPOW2R=VD;const $D=s=>({$:"MODPOW2C",loc:s});D.MODPOW2C=$D;const WD=s=>({$:"RSHIFTMOD",loc:s});D.RSHIFTMOD=WD;const KD=s=>({$:"RSHIFTMODR",loc:s});D.RSHIFTMODR=KD;const ZD=s=>({$:"RSHIFTMODC",loc:s});D.RSHIFTMODC=ZD;const kD=s=>({$:"QADDRSHIFTMOD",loc:s});D.QADDRSHIFTMOD=kD;const hD=s=>({$:"QADDRSHIFTMODR",loc:s});D.QADDRSHIFTMODR=hD;const yD=s=>({$:"QADDRSHIFTMODC",loc:s});D.QADDRSHIFTMODC=yD;const wD=s=>({$:"QRSHIFTR",loc:s});D.QRSHIFTR=wD;const pD=s=>({$:"QRSHIFTC",loc:s});D.QRSHIFTC=pD;const YD=s=>({$:"QMODPOW2",loc:s});D.QMODPOW2=YD;const bD=s=>({$:"QMODPOW2R",loc:s});D.QMODPOW2R=bD;const JD=s=>({$:"QMODPOW2C",loc:s});D.QMODPOW2C=JD;const vD=s=>({$:"QRSHIFTMOD",loc:s});D.QRSHIFTMOD=vD;const jD=s=>({$:"QRSHIFTMODR",loc:s});D.QRSHIFTMODR=jD;const zD=s=>({$:"QRSHIFTMODC",loc:s});D.QRSHIFTMODC=zD;const qD=s=>({$:"MULADDDIVMOD",loc:s});D.MULADDDIVMOD=qD;const xD=s=>({$:"MULADDDIVMODR",loc:s});D.MULADDDIVMODR=xD;const eE=s=>({$:"MULADDDIVMODC",loc:s});D.MULADDDIVMODC=eE;const rE=s=>({$:"MULDIV",loc:s});D.MULDIV=rE;const nE=s=>({$:"MULDIVR",loc:s});D.MULDIVR=nE;const tE=s=>({$:"MULDIVC",loc:s});D.MULDIVC=tE;const aE=s=>({$:"MULMOD",loc:s});D.MULMOD=aE;const TE=s=>({$:"MULMODR",loc:s});D.MULMODR=TE;const IE=s=>({$:"MULMODC",loc:s});D.MULMODC=IE;const DE=s=>({$:"MULDIVMOD",loc:s});D.MULDIVMOD=DE;const EE=s=>({$:"MULDIVMODR",loc:s});D.MULDIVMODR=EE;const sE=s=>({$:"MULDIVMODC",loc:s});D.MULDIVMODC=sE;const SE=s=>({$:"QMULADDDIVMOD",loc:s});D.QMULADDDIVMOD=SE;const RE=s=>({$:"QMULADDDIVMODR",loc:s});D.QMULADDDIVMODR=RE;const iE=s=>({$:"QMULADDDIVMODC",loc:s});D.QMULADDDIVMODC=iE;const oE=s=>({$:"QMULDIV",loc:s});D.QMULDIV=oE;const LE=s=>({$:"QMULDIVR",loc:s});D.QMULDIVR=LE;const uE=s=>({$:"QMULDIVC",loc:s});D.QMULDIVC=uE;const CE=s=>({$:"QMULMOD",loc:s});D.QMULMOD=CE;const AE=s=>({$:"QMULMODR",loc:s});D.QMULMODR=AE;const ME=s=>({$:"QMULMODC",loc:s});D.QMULMODC=ME;const cE=s=>({$:"QMULDIVMOD",loc:s});D.QMULDIVMOD=cE;const PE=s=>({$:"QMULDIVMODR",loc:s});D.QMULDIVMODR=PE;const OE=s=>({$:"QMULDIVMODC",loc:s});D.QMULDIVMODC=OE;const dE=s=>({$:"MULADDRSHIFTMOD",loc:s});D.MULADDRSHIFTMOD=dE;const FE=s=>({$:"MULADDRSHIFTRMOD",loc:s});D.MULADDRSHIFTRMOD=FE;const mE=s=>({$:"MULADDRSHIFTCMOD",loc:s});D.MULADDRSHIFTCMOD=mE;const gE=s=>({$:"MULRSHIFT",loc:s});D.MULRSHIFT=gE;const UE=s=>({$:"MULRSHIFTR",loc:s});D.MULRSHIFTR=UE;const lE=s=>({$:"MULRSHIFTC",loc:s});D.MULRSHIFTC=lE;const NE=s=>({$:"MULMODPOW2",loc:s});D.MULMODPOW2=NE;const HE=s=>({$:"MULMODPOW2R",loc:s});D.MULMODPOW2R=HE;const GE=s=>({$:"MULMODPOW2C",loc:s});D.MULMODPOW2C=GE;const QE=s=>({$:"MULRSHIFTMOD",loc:s});D.MULRSHIFTMOD=QE;const _E=s=>({$:"MULRSHIFTRMOD",loc:s});D.MULRSHIFTRMOD=_E;const BE=s=>({$:"MULRSHIFTCMOD",loc:s});D.MULRSHIFTCMOD=BE;const fE=s=>({$:"QMULADDRSHIFTMOD",loc:s});D.QMULADDRSHIFTMOD=fE;const XE=s=>({$:"QMULADDRSHIFTRMOD",loc:s});D.QMULADDRSHIFTRMOD=XE;const VE=s=>({$:"QMULADDRSHIFTCMOD",loc:s});D.QMULADDRSHIFTCMOD=VE;const $E=s=>({$:"QMULRSHIFT",loc:s});D.QMULRSHIFT=$E;const WE=s=>({$:"QMULRSHIFTR",loc:s});D.QMULRSHIFTR=WE;const KE=s=>({$:"QMULRSHIFTC",loc:s});D.QMULRSHIFTC=KE;const ZE=s=>({$:"QMULMODPOW2",loc:s});D.QMULMODPOW2=ZE;const kE=s=>({$:"QMULMODPOW2R",loc:s});D.QMULMODPOW2R=kE;const hE=s=>({$:"QMULMODPOW2C",loc:s});D.QMULMODPOW2C=hE;const yE=s=>({$:"QMULRSHIFTMOD",loc:s});D.QMULRSHIFTMOD=yE;const wE=s=>({$:"QMULRSHIFTRMOD",loc:s});D.QMULRSHIFTRMOD=wE;const pE=s=>({$:"QMULRSHIFTCMOD",loc:s});D.QMULRSHIFTCMOD=pE;const YE=s=>({$:"LSHIFTADDDIVMOD",loc:s});D.LSHIFTADDDIVMOD=YE;const bE=s=>({$:"LSHIFTADDDIVMODR",loc:s});D.LSHIFTADDDIVMODR=bE;const JE=s=>({$:"LSHIFTADDDIVMODC",loc:s});D.LSHIFTADDDIVMODC=JE;const vE=s=>({$:"LSHIFTDIV",loc:s});D.LSHIFTDIV=vE;const jE=s=>({$:"LSHIFTDIVR",loc:s});D.LSHIFTDIVR=jE;const zE=s=>({$:"LSHIFTDIVC",loc:s});D.LSHIFTDIVC=zE;const qE=s=>({$:"LSHIFTMOD",loc:s});D.LSHIFTMOD=qE;const xE=s=>({$:"LSHIFTMODR",loc:s});D.LSHIFTMODR=xE;const es=s=>({$:"LSHIFTMODC",loc:s});D.LSHIFTMODC=es;const rs=s=>({$:"LSHIFTDIVMOD",loc:s});D.LSHIFTDIVMOD=rs;const ns=s=>({$:"LSHIFTDIVMODR",loc:s});D.LSHIFTDIVMODR=ns;const ts=s=>({$:"LSHIFTDIVMODC",loc:s});D.LSHIFTDIVMODC=ts;const as=s=>({$:"QLSHIFTADDDIVMOD",loc:s});D.QLSHIFTADDDIVMOD=as;const Ts=s=>({$:"QLSHIFTADDDIVMODR",loc:s});D.QLSHIFTADDDIVMODR=Ts;const Is=s=>({$:"QLSHIFTADDDIVMODC",loc:s});D.QLSHIFTADDDIVMODC=Is;const Ds=s=>({$:"QLSHIFTDIV",loc:s});D.QLSHIFTDIV=Ds;const Es=s=>({$:"QLSHIFTDIVR",loc:s});D.QLSHIFTDIVR=Es;const ss=s=>({$:"QLSHIFTDIVC",loc:s});D.QLSHIFTDIVC=ss;const Ss=s=>({$:"QLSHIFTMOD",loc:s});D.QLSHIFTMOD=Ss;const Rs=s=>({$:"QLSHIFTMODR",loc:s});D.QLSHIFTMODR=Rs;const is=s=>({$:"QLSHIFTMODC",loc:s});D.QLSHIFTMODC=is;const os=s=>({$:"QLSHIFTDIVMOD",loc:s});D.QLSHIFTDIVMOD=os;const Ls=s=>({$:"QLSHIFTDIVMODR",loc:s});D.QLSHIFTDIVMODR=Ls;const us=s=>({$:"QLSHIFTDIVMODC",loc:s});D.QLSHIFTDIVMODC=us;const Cs=s=>({$:"STIX",loc:s});D.STIX=Cs;const As=s=>({$:"STUX",loc:s});D.STUX=As;const Ms=s=>({$:"STIXR",loc:s});D.STIXR=Ms;const cs=s=>({$:"STUXR",loc:s});D.STUXR=cs;const Ps=s=>({$:"STIXQ",loc:s});D.STIXQ=Ps;const Os=s=>({$:"STUXQ",loc:s});D.STUXQ=Os;const ds=s=>({$:"STIXRQ",loc:s});D.STIXRQ=ds;const Fs=s=>({$:"STUXRQ",loc:s});D.STUXRQ=Fs;const ms=s=>({$:"STILE4",loc:s});D.STILE4=ms;const gs=s=>({$:"STULE4",loc:s});D.STULE4=gs;const Us=s=>({$:"STILE8",loc:s});D.STILE8=Us;const ls=s=>({$:"STULE8",loc:s});D.STULE8=ls;const Ns=s=>({$:"LDIX",loc:s});D.LDIX=Ns;const Hs=s=>({$:"LDUX",loc:s});D.LDUX=Hs;const Gs=s=>({$:"PLDIX",loc:s});D.PLDIX=Gs;const Qs=s=>({$:"PLDUX",loc:s});D.PLDUX=Qs;const _s=s=>({$:"LDIXQ",loc:s});D.LDIXQ=_s;const Bs=s=>({$:"LDUXQ",loc:s});D.LDUXQ=Bs;const fs=s=>({$:"PLDIXQ",loc:s});D.PLDIXQ=fs;const Xs=s=>({$:"PLDUXQ",loc:s});D.PLDUXQ=Xs;const Vs=s=>({$:"LDSLICEX",loc:s});D.LDSLICEX=Vs;const $s=s=>({$:"PLDSLICEX",loc:s});D.PLDSLICEX=$s;const Ws=s=>({$:"LDSLICEXQ",loc:s});D.LDSLICEXQ=Ws;const Ks=s=>({$:"PLDSLICEXQ",loc:s});D.PLDSLICEXQ=Ks;const Zs=s=>({$:"LDILE4",loc:s});D.LDILE4=Zs;const ks=s=>({$:"LDULE4",loc:s});D.LDULE4=ks;const hs=s=>({$:"LDILE8",loc:s});D.LDILE8=hs;const ys=s=>({$:"LDULE8",loc:s});D.LDULE8=ys;const ws=s=>({$:"PLDILE4",loc:s});D.PLDILE4=ws;const ps=s=>({$:"PLDULE4",loc:s});D.PLDULE4=ps;const Ys=s=>({$:"PLDILE8",loc:s});D.PLDILE8=Ys;const bs=s=>({$:"PLDULE8",loc:s});D.PLDULE8=bs;const Js=s=>({$:"LDILE4Q",loc:s});D.LDILE4Q=Js;const vs=s=>({$:"LDULE4Q",loc:s});D.LDULE4Q=vs;const js=s=>({$:"LDILE8Q",loc:s});D.LDILE8Q=js;const zs=s=>({$:"LDULE8Q",loc:s});D.LDULE8Q=zs;const qs=s=>({$:"PLDILE4Q",loc:s});D.PLDILE4Q=qs;const xs=s=>({$:"PLDULE4Q",loc:s});D.PLDULE4Q=xs;const eS=s=>({$:"PLDILE8Q",loc:s});D.PLDILE8Q=eS;const rS=s=>({$:"PLDULE8Q",loc:s});D.PLDULE8Q=rS;const nS=s=>({$:"DICTIGETJMP",loc:s});D.DICTIGETJMP=nS;const tS=s=>({$:"DICTUGETJMP",loc:s});D.DICTUGETJMP=tS;const aS=s=>({$:"DICTIGETEXEC",loc:s});D.DICTIGETEXEC=aS;const TS=s=>({$:"DICTUGETEXEC",loc:s});D.DICTUGETEXEC=TS;const IS=s=>({$:"DICTIGETJMPZ",loc:s});D.DICTIGETJMPZ=IS;const DS=s=>({$:"DICTUGETJMPZ",loc:s});D.DICTUGETJMPZ=DS;const ES=s=>({$:"DICTIGETEXECZ",loc:s});D.DICTIGETEXECZ=ES;const sS=s=>({$:"DICTUGETEXECZ",loc:s});D.DICTUGETEXECZ=sS;const SS=s=>({$:"DICTGET",loc:s});D.DICTGET=SS;const RS=s=>({$:"DICTGETREF",loc:s});D.DICTGETREF=RS;const iS=s=>({$:"DICTIGET",loc:s});D.DICTIGET=iS;const oS=s=>({$:"DICTIGETREF",loc:s});D.DICTIGETREF=oS;const LS=s=>({$:"DICTUGET",loc:s});D.DICTUGET=LS;const uS=s=>({$:"DICTUGETREF",loc:s});D.DICTUGETREF=uS;const CS=s=>({$:"DICTSET",loc:s});D.DICTSET=CS;const AS=s=>({$:"DICTSETREF",loc:s});D.DICTSETREF=AS;const MS=s=>({$:"DICTISET",loc:s});D.DICTISET=MS;const cS=s=>({$:"DICTISETREF",loc:s});D.DICTISETREF=cS;const PS=s=>({$:"DICTUSET",loc:s});D.DICTUSET=PS;const OS=s=>({$:"DICTUSETREF",loc:s});D.DICTUSETREF=OS;const dS=s=>({$:"DICTSETGET",loc:s});D.DICTSETGET=dS;const FS=s=>({$:"DICTSETGETREF",loc:s});D.DICTSETGETREF=FS;const mS=s=>({$:"DICTISETGET",loc:s});D.DICTISETGET=mS;const gS=s=>({$:"DICTISETGETREF",loc:s});D.DICTISETGETREF=gS;const US=s=>({$:"DICTUSETGET",loc:s});D.DICTUSETGET=US;const lS=s=>({$:"DICTUSETGETREF",loc:s});D.DICTUSETGETREF=lS;const NS=s=>({$:"DICTREPLACE",loc:s});D.DICTREPLACE=NS;const HS=s=>({$:"DICTREPLACEREF",loc:s});D.DICTREPLACEREF=HS;const GS=s=>({$:"DICTIREPLACE",loc:s});D.DICTIREPLACE=GS;const QS=s=>({$:"DICTIREPLACEREF",loc:s});D.DICTIREPLACEREF=QS;const _S=s=>({$:"DICTUREPLACE",loc:s});D.DICTUREPLACE=_S;const BS=s=>({$:"DICTUREPLACEREF",loc:s});D.DICTUREPLACEREF=BS;const fS=s=>({$:"DICTREPLACEGET",loc:s});D.DICTREPLACEGET=fS;const XS=s=>({$:"DICTREPLACEGETREF",loc:s});D.DICTREPLACEGETREF=XS;const VS=s=>({$:"DICTIREPLACEGET",loc:s});D.DICTIREPLACEGET=VS;const $S=s=>({$:"DICTIREPLACEGETREF",loc:s});D.DICTIREPLACEGETREF=$S;const WS=s=>({$:"DICTUREPLACEGET",loc:s});D.DICTUREPLACEGET=WS;const KS=s=>({$:"DICTUREPLACEGETREF",loc:s});D.DICTUREPLACEGETREF=KS;const ZS=s=>({$:"DICTADD",loc:s});D.DICTADD=ZS;const kS=s=>({$:"DICTADDREF",loc:s});D.DICTADDREF=kS;const hS=s=>({$:"DICTIADD",loc:s});D.DICTIADD=hS;const yS=s=>({$:"DICTIADDREF",loc:s});D.DICTIADDREF=yS;const wS=s=>({$:"DICTUADD",loc:s});D.DICTUADD=wS;const pS=s=>({$:"DICTUADDREF",loc:s});D.DICTUADDREF=pS;const YS=s=>({$:"DICTADDGET",loc:s});D.DICTADDGET=YS;const bS=s=>({$:"DICTADDGETREF",loc:s});D.DICTADDGETREF=bS;const JS=s=>({$:"DICTIADDGET",loc:s});D.DICTIADDGET=JS;const vS=s=>({$:"DICTIADDGETREF",loc:s});D.DICTIADDGETREF=vS;const jS=s=>({$:"DICTUADDGET",loc:s});D.DICTUADDGET=jS;const zS=s=>({$:"DICTUADDGETREF",loc:s});D.DICTUADDGETREF=zS;const qS=s=>({$:"DICTDELGET",loc:s});D.DICTDELGET=qS;const xS=s=>({$:"DICTDELGETREF",loc:s});D.DICTDELGETREF=xS;const eR=s=>({$:"DICTIDELGET",loc:s});D.DICTIDELGET=eR;const rR=s=>({$:"DICTIDELGETREF",loc:s});D.DICTIDELGETREF=rR;const nR=s=>({$:"DICTUDELGET",loc:s});D.DICTUDELGET=nR;const tR=s=>({$:"DICTUDELGETREF",loc:s});D.DICTUDELGETREF=tR;const aR=s=>({$:"DICTMIN",loc:s});D.DICTMIN=aR;const TR=s=>({$:"DICTMINREF",loc:s});D.DICTMINREF=TR;const IR=s=>({$:"DICTIMIN",loc:s});D.DICTIMIN=IR;const DR=s=>({$:"DICTIMINREF",loc:s});D.DICTIMINREF=DR;const ER=s=>({$:"DICTUMIN",loc:s});D.DICTUMIN=ER;const sR=s=>({$:"DICTUMINREF",loc:s});D.DICTUMINREF=sR;const SR=s=>({$:"DICTMAX",loc:s});D.DICTMAX=SR;const RR=s=>({$:"DICTMAXREF",loc:s});D.DICTMAXREF=RR;const iR=s=>({$:"DICTIMAX",loc:s});D.DICTIMAX=iR;const oR=s=>({$:"DICTIMAXREF",loc:s});D.DICTIMAXREF=oR;const LR=s=>({$:"DICTUMAX",loc:s});D.DICTUMAX=LR;const uR=s=>({$:"DICTUMAXREF",loc:s});D.DICTUMAXREF=uR;const CR=s=>({$:"DICTREMMIN",loc:s});D.DICTREMMIN=CR;const AR=s=>({$:"DICTREMMINREF",loc:s});D.DICTREMMINREF=AR;const MR=s=>({$:"DICTIREMMIN",loc:s});D.DICTIREMMIN=MR;const cR=s=>({$:"DICTIREMMINREF",loc:s});D.DICTIREMMINREF=cR;const PR=s=>({$:"DICTUREMMIN",loc:s});D.DICTUREMMIN=PR;const OR=s=>({$:"DICTUREMMINREF",loc:s});D.DICTUREMMINREF=OR;const dR=s=>({$:"DICTREMMAX",loc:s});D.DICTREMMAX=dR;const FR=s=>({$:"DICTREMMAXREF",loc:s});D.DICTREMMAXREF=FR;const mR=s=>({$:"DICTIREMMAX",loc:s});D.DICTIREMMAX=mR;const gR=s=>({$:"DICTIREMMAXREF",loc:s});D.DICTIREMMAXREF=gR;const UR=s=>({$:"DICTUREMMAX",loc:s});D.DICTUREMMAX=UR;const lR=s=>({$:"DICTUREMMAXREF",loc:s});D.DICTUREMMAXREF=lR;const NR=s=>({$:"DICTSETB",loc:s});D.DICTSETB=NR;const HR=s=>({$:"DICTISETB",loc:s});D.DICTISETB=HR;const GR=s=>({$:"DICTUSETB",loc:s});D.DICTUSETB=GR;const QR=s=>({$:"DICTSETGETB",loc:s});D.DICTSETGETB=QR;const _R=s=>({$:"DICTISETGETB",loc:s});D.DICTISETGETB=_R;const BR=s=>({$:"DICTUSETGETB",loc:s});D.DICTUSETGETB=BR;const fR=s=>({$:"DICTREPLACEB",loc:s});D.DICTREPLACEB=fR;const XR=s=>({$:"DICTIREPLACEB",loc:s});D.DICTIREPLACEB=XR;const VR=s=>({$:"DICTUREPLACEB",loc:s});D.DICTUREPLACEB=VR;const $R=s=>({$:"DICTREPLACEGETB",loc:s});D.DICTREPLACEGETB=$R;const WR=s=>({$:"DICTIREPLACEGETB",loc:s});D.DICTIREPLACEGETB=WR;const KR=s=>({$:"DICTUREPLACEGETB",loc:s});D.DICTUREPLACEGETB=KR;const ZR=s=>({$:"DICTADDB",loc:s});D.DICTADDB=ZR;const kR=s=>({$:"DICTIADDB",loc:s});D.DICTIADDB=kR;const hR=s=>({$:"DICTUADDB",loc:s});D.DICTUADDB=hR;const yR=s=>({$:"DICTADDGETB",loc:s});D.DICTADDGETB=yR;const wR=s=>({$:"DICTIADDGETB",loc:s});D.DICTIADDGETB=wR;const pR=s=>({$:"DICTUADDGETB",loc:s});D.DICTUADDGETB=pR;const YR=s=>({$:"DICTDEL",loc:s});D.DICTDEL=YR;const bR=s=>({$:"DICTIDEL",loc:s});D.DICTIDEL=bR;const JR=s=>({$:"DICTUDEL",loc:s});D.DICTUDEL=JR;const vR=s=>({$:"DICTGETOPTREF",loc:s});D.DICTGETOPTREF=vR;const jR=s=>({$:"DICTIGETOPTREF",loc:s});D.DICTIGETOPTREF=jR;const zR=s=>({$:"DICTUGETOPTREF",loc:s});D.DICTUGETOPTREF=zR;const qR=s=>({$:"DICTSETGETOPTREF",loc:s});D.DICTSETGETOPTREF=qR;const xR=s=>({$:"DICTISETGETOPTREF",loc:s});D.DICTISETGETOPTREF=xR;const ei=s=>({$:"DICTUSETGETOPTREF",loc:s});D.DICTUSETGETOPTREF=ei;const ri=s=>({$:"SUBDICTGET",loc:s});D.SUBDICTGET=ri;const ni=s=>({$:"SUBDICTIGET",loc:s});D.SUBDICTIGET=ni;const ti=s=>({$:"SUBDICTUGET",loc:s});D.SUBDICTUGET=ti;const ai=s=>({$:"SUBDICTRPGET",loc:s});D.SUBDICTRPGET=ai;const Ti=s=>({$:"SUBDICTIRPGET",loc:s});D.SUBDICTIRPGET=Ti;const Ii=s=>({$:"SUBDICTURPGET",loc:s});D.SUBDICTURPGET=Ii;const Di=s=>({$:"THROWANY",loc:s});D.THROWANY=Di;const Ei=s=>({$:"THROWARGANY",loc:s});D.THROWARGANY=Ei;const si=s=>({$:"THROWANYIFNOT",loc:s});D.THROWANYIFNOT=si;const Si=s=>({$:"THROWARGANYIFNOT",loc:s});D.THROWARGANYIFNOT=Si;const Ri=s=>({$:"DICTGETNEXT",loc:s});D.DICTGETNEXT=Ri;const ii=s=>({$:"DICTGETNEXTEQ",loc:s});D.DICTGETNEXTEQ=ii;const oi=s=>({$:"DICTGETPREV",loc:s});D.DICTGETPREV=oi;const Li=s=>({$:"DICTGETPREVEQ",loc:s});D.DICTGETPREVEQ=Li;const ui=s=>({$:"DICTIGETNEXT",loc:s});D.DICTIGETNEXT=ui;const Ci=s=>({$:"DICTIGETNEXTEQ",loc:s});D.DICTIGETNEXTEQ=Ci;const Ai=s=>({$:"DICTIGETPREV",loc:s});D.DICTIGETPREV=Ai;const Mi=s=>({$:"DICTIGETPREVEQ",loc:s});D.DICTIGETPREVEQ=Mi;const ci=s=>({$:"DICTUGETNEXT",loc:s});D.DICTUGETNEXT=ci;const Pi=s=>({$:"DICTUGETNEXTEQ",loc:s});D.DICTUGETNEXTEQ=Pi;const Oi=s=>({$:"DICTUGETPREV",loc:s});D.DICTUGETPREV=Oi;const di=s=>({$:"DICTUGETPREVEQ",loc:s});D.DICTUGETPREVEQ=di;const Fi=(s,R)=>({$:"ADDINT",arg0:s,loc:R});D.ADDINT=Fi;const mi=(s,R)=>({$:"MULINT",arg0:s,loc:R});D.MULINT=mi;const gi=(s,R)=>({$:"QADDINT",arg0:s,loc:R});D.QADDINT=gi;const Ui=(s,R)=>({$:"QMULINT",arg0:s,loc:R});D.QMULINT=Ui;const li=(s,R)=>({$:"EQINT",arg0:s,loc:R});D.EQINT=li;const Ni=(s,R)=>({$:"LESSINT",arg0:s,loc:R});D.LESSINT=Ni;const Hi=(s,R)=>({$:"GTINT",arg0:s,loc:R});D.GTINT=Hi;const Gi=(s,R)=>({$:"NEQINT",arg0:s,loc:R});D.NEQINT=Gi;const Qi=(s,R)=>({$:"QEQINT",arg0:s,loc:R});D.QEQINT=Qi;const _i=(s,R)=>({$:"QLESSINT",arg0:s,loc:R});D.QLESSINT=_i;const Bi=(s,R)=>({$:"QGTINT",arg0:s,loc:R});D.QGTINT=Bi;const fi=(s,R)=>({$:"QNEQINT",arg0:s,loc:R});D.QNEQINT=fi;const Xi=(s,R)=>({$:"PUSHPOW2DEC",arg0:s,loc:R});D.PUSHPOW2DEC=Xi;const Vi=(s,R)=>({$:"PUSHNEGPOW2",arg0:s,loc:R});D.PUSHNEGPOW2=Vi;const $i=(s,R)=>({$:"FITS",arg0:s,loc:R});D.FITS=$i;const Wi=(s,R)=>({$:"UFITS",arg0:s,loc:R});D.UFITS=Wi;const Ki=(s,R)=>({$:"QFITS",arg0:s,loc:R});D.QFITS=Ki;const Zi=(s,R)=>({$:"QUFITS",arg0:s,loc:R});D.QUFITS=Zi;const ki=(s,R)=>({$:"SETCONTCTRMANY",arg0:s,loc:R});D.SETCONTCTRMANY=ki;const hi=(s,R,z)=>({$:"CALLCCARGS",arg0:s,arg1:R,loc:z});D.CALLCCARGS=hi;const yi=(s,R,z)=>({$:"TRYARGS",arg0:s,arg1:R,loc:z});D.TRYARGS=yi;const wi=(s,R)=>({$:"PLDREFIDX",arg0:s,loc:R});D.PLDREFIDX=wi;const pi=(s,R)=>({$:"CHASHI",arg0:s,loc:R});D.CHASHI=pi;const Yi=(s,R)=>({$:"CDEPTHI",arg0:s,loc:R});D.CDEPTHI=Yi;const bi=(s,R)=>({$:"JMPDICT",arg0:s,loc:R});D.JMPDICT=bi;const Ji=(s,R)=>({$:"PREPAREDICT",arg0:s,loc:R});D.PREPAREDICT=Ji;const vi=(s,R)=>({$:"THROWARG",arg0:s,loc:R});D.THROWARG=vi;const ji=(s,R)=>({$:"THROWARGIF",arg0:s,loc:R});D.THROWARGIF=ji;const zi=(s,R)=>({$:"THROWARGIFNOT",arg0:s,loc:R});D.THROWARGIFNOT=zi;const qi=(s,R)=>({$:"JMPXARGS",arg0:s,loc:R});D.JMPXARGS=qi;const xi=(s,R)=>({$:"RETARGS",arg0:s,loc:R});D.RETARGS=xi;const e1=(s,R)=>({$:"RETURNARGS",arg0:s,loc:R});D.RETURNARGS=e1;const r1=(s,R)=>({$:"BLKDROP",arg0:s,loc:R});D.BLKDROP=r1;const n1=(s,R)=>({$:"TUPLE",arg0:s,loc:R});D.TUPLE=n1;const t1=(s,R)=>({$:"INDEX",arg0:s,loc:R});D.INDEX=t1;const a1=(s,R)=>({$:"UNTUPLE",arg0:s,loc:R});D.UNTUPLE=a1;const T1=(s,R)=>({$:"UNPACKFIRST",arg0:s,loc:R});D.UNPACKFIRST=T1;const I1=(s,R)=>({$:"EXPLODE",arg0:s,loc:R});D.EXPLODE=I1;const D1=(s,R)=>({$:"SETINDEX",arg0:s,loc:R});D.SETINDEX=D1;const E1=(s,R)=>({$:"INDEXQ",arg0:s,loc:R});D.INDEXQ=E1;const s1=(s,R)=>({$:"SETINDEXQ",arg0:s,loc:R});D.SETINDEXQ=s1;const S1=(s,R,z,ie)=>({$:"XC2PU",arg0:s,arg1:R,arg2:z,loc:ie});D.XC2PU=S1;const R1=(s,R,z,ie)=>({$:"XCPU2",arg0:s,arg1:R,arg2:z,loc:ie});D.XCPU2=R1;const i1=(s,R,z,ie)=>({$:"PUSH3",arg0:s,arg1:R,arg2:z,loc:ie});D.PUSH3=i1;const o1=(s,R,z)=>({$:"XCHG2",arg0:s,arg1:R,loc:z});D.XCHG2=o1;const L1=(s,R,z)=>({$:"XCPU",arg0:s,arg1:R,loc:z});D.XCPU=L1;const u1=(s,R,z)=>({$:"PUSH2",arg0:s,arg1:R,loc:z});D.PUSH2=u1;const C1=(s,R,z)=>({$:"PUXC",arg0:s,arg1:R,loc:z});D.PUXC=C1;const A1=(s,R,z,ie)=>({$:"XCPUXC",arg0:s,arg1:R,arg2:z,loc:ie});D.XCPUXC=A1;const M1=(s,R,z,ie)=>({$:"PUXC2",arg0:s,arg1:R,arg2:z,loc:ie});D.PUXC2=M1;const c1=(s,R,z,ie)=>({$:"PUXCPU",arg0:s,arg1:R,arg2:z,loc:ie});D.PUXCPU=c1;const P1=(s,R,z,ie)=>({$:"PU2XC",arg0:s,arg1:R,arg2:z,loc:ie});D.PU2XC=P1;const O1=(s,R,z)=>({$:"BLKSWAP",arg0:s,arg1:R,loc:z});D.BLKSWAP=O1;const d1=(s,R,z)=>({$:"REVERSE",arg0:s,arg1:R,loc:z});D.REVERSE=d1;const F1=(s,R,z)=>({$:"SETCONTARGS",arg0:s,arg1:R,loc:z});D.SETCONTARGS=F1;const m1=(s,R,z)=>({$:"BLESSARGS",arg0:s,arg1:R,loc:z});D.BLESSARGS=m1;const g1=(s,R)=>({$:"STIR",arg0:s,loc:R});D.STIR=g1;const U1=(s,R)=>({$:"STUR",arg0:s,loc:R});D.STUR=U1;const l1=(s,R)=>({$:"STIQ",arg0:s,loc:R});D.STIQ=l1;const N1=(s,R)=>({$:"STUQ",arg0:s,loc:R});D.STUQ=N1;const H1=(s,R)=>({$:"STIRQ",arg0:s,loc:R});D.STIRQ=H1;const G1=(s,R)=>({$:"STURQ",arg0:s,loc:R});D.STURQ=G1;const Q1=(s,R)=>({$:"PLDI",arg0:s,loc:R});D.PLDI=Q1;const _1=(s,R)=>({$:"PLDU",arg0:s,loc:R});D.PLDU=_1;const B1=(s,R)=>({$:"LDIQ",arg0:s,loc:R});D.LDIQ=B1;const f1=(s,R)=>({$:"LDUQ",arg0:s,loc:R});D.LDUQ=f1;const X1=(s,R)=>({$:"PLDIQ",arg0:s,loc:R});D.PLDIQ=X1;const V1=(s,R)=>({$:"PLDUQ",arg0:s,loc:R});D.PLDUQ=V1;const $1=(s,R)=>({$:"PLDUZ",arg0:s,loc:R});D.PLDUZ=$1;const W1=(s,R)=>({$:"PLDSLICE",arg0:s,loc:R});D.PLDSLICE=W1;const K1=(s,R)=>({$:"LDSLICEQ",arg0:s,loc:R});D.LDSLICEQ=K1;const Z1=(s,R)=>({$:"PLDSLICEQ",arg0:s,loc:R});D.PLDSLICEQ=Z1;const k1=(s,R)=>({$:"IFBITJMP",arg0:s,loc:R});D.IFBITJMP=k1;const h1=(s,R)=>({$:"IFNBITJMP",arg0:s,loc:R});D.IFNBITJMP=h1;const y1=(s,R,z)=>({$:"INDEX2",arg0:s,arg1:R,loc:z});D.INDEX2=y1;const w1=(s,R,z,ie)=>({$:"INDEX3",arg0:s,arg1:R,arg2:z,loc:ie});D.INDEX3=w1;const p1=(s,R)=>({$:"PUSHPOW2",arg0:s,loc:R});D.PUSHPOW2=p1;const Y1=(s,R,z)=>({$:"BLKPUSH",arg0:s,arg1:R,loc:z});D.BLKPUSH=Y1;const b1=(s,R,z)=>({$:"BLKDROP2",arg0:s,arg1:R,loc:z});D.BLKDROP2=b1;const J1=(s,R)=>({$:"GETGLOB",arg0:s,loc:R});D.GETGLOB=J1;const v1=(s,R)=>({$:"SETGLOB",arg0:s,loc:R});D.SETGLOB=v1;const j1=(s,R)=>({$:"GETPARAM",arg0:s,loc:R});D.GETPARAM=j1;const z1=(s,R)=>({$:"PUSHREF",arg0:s,loc:R});D.PUSHREF=z1;const q1=(s,R)=>({$:"PUSHREFSLICE",arg0:s,loc:R});D.PUSHREFSLICE=q1;const x1=(s,R)=>({$:"PUSHREFCONT",arg0:s,loc:R});D.PUSHREFCONT=x1;const eo=(s,R)=>({$:"CALLREF",arg0:s,loc:R});D.CALLREF=eo;const ro=(s,R)=>({$:"JMPREF",arg0:s,loc:R});D.JMPREF=ro;const no=(s,R)=>({$:"JMPREFDATA",arg0:s,loc:R});D.JMPREFDATA=no;const to=(s,R)=>({$:"IFREF",arg0:s,loc:R});D.IFREF=to;const ao=(s,R)=>({$:"IFNOTREF",arg0:s,loc:R});D.IFNOTREF=ao;const To=(s,R)=>({$:"IFJMPREF",arg0:s,loc:R});D.IFJMPREF=To;const Io=(s,R)=>({$:"IFNOTJMPREF",arg0:s,loc:R});D.IFNOTJMPREF=Io;const Do=(s,R)=>({$:"IFREFELSE",arg0:s,loc:R});D.IFREFELSE=Do;const Eo=(s,R)=>({$:"IFELSEREF",arg0:s,loc:R});D.IFELSEREF=Eo;const so=(s,R,z)=>({$:"IFREFELSEREF",arg0:s,arg1:R,loc:z});D.IFREFELSEREF=so;const So=(s,R,z)=>({$:"IFBITJMPREF",arg0:s,arg1:R,loc:z});D.IFBITJMPREF=So;const Ro=(s,R,z)=>({$:"IFNBITJMPREF",arg0:s,arg1:R,loc:z});D.IFNBITJMPREF=Ro;const io=(s,R,z)=>({$:"DICTPUSHCONST",arg0:s,arg1:R,loc:z});D.DICTPUSHCONST=io;const oo=(s,R,z)=>({$:"PFXDICTSWITCH",arg0:s,arg1:R,loc:z});D.PFXDICTSWITCH=oo;const Lo=s=>({$:"SDBEGINSX",loc:s});D.SDBEGINSX=Lo;const uo=s=>({$:"SDBEGINSXQ",loc:s});D.SDBEGINSXQ=uo;const Co=(s,R)=>({$:"SDBEGINS",arg0:s,loc:R});D.SDBEGINS=Co;const Ao=(s,R)=>({$:"SDBEGINSQ",arg0:s,loc:R});D.SDBEGINSQ=Ao;const Mo=(s,R)=>({$:"STREFCONST",arg0:s,loc:R});D.STREFCONST=Mo;const co=(s,R,z)=>({$:"STREF2CONST",arg0:s,arg1:R,loc:z});D.STREF2CONST=co;const Po=s=>({$:"THROWANYIF",loc:s});D.THROWANYIF=Po;const Oo=s=>({$:"THROWARGANYIF",loc:s});D.THROWARGANYIF=Oo;const Fo=(s,R)=>({$:"DEBUGSTR",arg0:s,loc:R});D.DEBUGSTR=Fo;const mo=(s,R)=>({$:"SETCONTCTR",arg0:s,loc:R});D.SETCONTCTR=mo;const go=(s,R)=>({$:"SETRETCTR",arg0:s,loc:R});D.SETRETCTR=go;const Uo=(s,R)=>({$:"SETALTCTR",arg0:s,loc:R});D.SETALTCTR=Uo;const lo=(s,R)=>({$:"POPSAVE",arg0:s,loc:R});D.POPSAVE=lo;const No=(s,R)=>({$:"SAVECTR",arg0:s,loc:R});D.SAVECTR=No;const Ho=(s,R)=>({$:"SAVEALTCTR",arg0:s,loc:R});D.SAVEALTCTR=Ho;const Go=(s,R)=>({$:"SAVEBOTHCTR",arg0:s,loc:R});D.SAVEBOTHCTR=Go;const Qo=(s,R)=>({$:"RUNVM",arg0:s,loc:R});D.RUNVM=Qo;const _o=s=>({$:"SWAP2",loc:s});D.SWAP2=_o;const Bo=s=>({$:"DROP2",loc:s});D.DROP2=Bo;const fo=s=>({$:"DUP2",loc:s});D.DUP2=fo;const Xo=s=>({$:"OVER2",loc:s});D.OVER2=Xo;const Vo=(s,R)=>({$:"ADDRSHIFT_MOD",arg0:s,loc:R});D.ADDRSHIFT_MOD=Vo;const $o=(s,R)=>({$:"ADDRSHIFTR_MOD",arg0:s,loc:R});D.ADDRSHIFTR_MOD=$o;const Wo=(s,R)=>({$:"ADDRSHIFTC_MOD",arg0:s,loc:R});D.ADDRSHIFTC_MOD=Wo;const Ko=(s,R)=>({$:"RSHIFT_",arg0:s,loc:R});D.RSHIFT_=Ko;const Zo=(s,R)=>({$:"RSHIFTR_",arg0:s,loc:R});D.RSHIFTR_=Zo;const ko=(s,R)=>({$:"RSHIFTC_",arg0:s,loc:R});D.RSHIFTC_=ko;const ho=(s,R)=>({$:"MODPOW2_",arg0:s,loc:R});D.MODPOW2_=ho;const yo=(s,R)=>({$:"MODPOW2R_",arg0:s,loc:R});D.MODPOW2R_=yo;const wo=(s,R)=>({$:"MODPOW2C_",arg0:s,loc:R});D.MODPOW2C_=wo;const po=(s,R)=>({$:"RSHIFT_MOD",arg0:s,loc:R});D.RSHIFT_MOD=po;const Yo=(s,R)=>({$:"RSHIFTR_MOD",arg0:s,loc:R});D.RSHIFTR_MOD=Yo;const bo=(s,R)=>({$:"RSHIFTC_MOD",arg0:s,loc:R});D.RSHIFTC_MOD=bo;const Jo=(s,R)=>({$:"MULADDRSHIFT_MOD",arg0:s,loc:R});D.MULADDRSHIFT_MOD=Jo;const vo=(s,R)=>({$:"MULADDRSHIFTR_MOD",arg0:s,loc:R});D.MULADDRSHIFTR_MOD=vo;const jo=(s,R)=>({$:"MULADDRSHIFTC_MOD",arg0:s,loc:R});D.MULADDRSHIFTC_MOD=jo;const zo=(s,R)=>({$:"MULRSHIFT_",arg0:s,loc:R});D.MULRSHIFT_=zo;const qo=(s,R)=>({$:"MULRSHIFTR_",arg0:s,loc:R});D.MULRSHIFTR_=qo;const xo=(s,R)=>({$:"MULRSHIFTC_",arg0:s,loc:R});D.MULRSHIFTC_=xo;const eL=(s,R)=>({$:"MULMODPOW2_",arg0:s,loc:R});D.MULMODPOW2_=eL;const rL=(s,R)=>({$:"MULMODPOW2R_",arg0:s,loc:R});D.MULMODPOW2R_=rL;const nL=(s,R)=>({$:"MULMODPOW2C_",arg0:s,loc:R});D.MULMODPOW2C_=nL;const tL=(s,R)=>({$:"MULRSHIFT_MOD",arg0:s,loc:R});D.MULRSHIFT_MOD=tL;const aL=(s,R)=>({$:"MULRSHIFTR_MOD",arg0:s,loc:R});D.MULRSHIFTR_MOD=aL;const TL=(s,R)=>({$:"MULRSHIFTC_MOD",arg0:s,loc:R});D.MULRSHIFTC_MOD=TL;const IL=(s,R)=>({$:"LSHIFT_ADDDIVMOD",arg0:s,loc:R});D.LSHIFT_ADDDIVMOD=IL;const DL=(s,R)=>({$:"LSHIFT_ADDDIVMODR",arg0:s,loc:R});D.LSHIFT_ADDDIVMODR=DL;const EL=(s,R)=>({$:"LSHIFT_ADDDIVMODC",arg0:s,loc:R});D.LSHIFT_ADDDIVMODC=EL;const sL=(s,R)=>({$:"LSHIFT_DIV",arg0:s,loc:R});D.LSHIFT_DIV=sL;const SL=(s,R)=>({$:"LSHIFT_DIVR",arg0:s,loc:R});D.LSHIFT_DIVR=SL;const RL=(s,R)=>({$:"LSHIFT_DIVC",arg0:s,loc:R});D.LSHIFT_DIVC=RL;const iL=(s,R)=>({$:"LSHIFT_MOD",arg0:s,loc:R});D.LSHIFT_MOD=iL;const oL=(s,R)=>({$:"LSHIFT_MODR",arg0:s,loc:R});D.LSHIFT_MODR=oL;const LL=(s,R)=>({$:"LSHIFT_MODC",arg0:s,loc:R});D.LSHIFT_MODC=LL;const uL=(s,R)=>({$:"LSHIFT_DIVMOD",arg0:s,loc:R});D.LSHIFT_DIVMOD=uL;const CL=(s,R)=>({$:"LSHIFT_DIVMODR",arg0:s,loc:R});D.LSHIFT_DIVMODR=CL;const AL=(s,R)=>({$:"LSHIFT_DIVMODC",arg0:s,loc:R});D.LSHIFT_DIVMODC=AL;const ML=(s,R)=>({$:"HASHEXT",arg0:s,loc:R});D.HASHEXT=ML;const cL=(s,R)=>({$:"HASHEXTR",arg0:s,loc:R});D.HASHEXTR=cL;const PL=(s,R)=>({$:"HASHEXTA",arg0:s,loc:R});D.HASHEXTA=PL;const OL=(s,R)=>({$:"HASHEXTAR",arg0:s,loc:R});D.HASHEXTAR=OL;const dL=s=>({$:"STREF",loc:s});D.STREF=dL;const FL=s=>({$:"STREF_ALT",loc:s});D.STREF_ALT=FL;const mL=s=>({$:"STSLICE",loc:s});D.STSLICE=mL;const gL=s=>({$:"STSLICE_ALT",loc:s});D.STSLICE_ALT=gL;const UL=(s,R,z,ie)=>({$:"XCHG3",arg0:s,arg1:R,arg2:z,loc:ie});D.XCHG3=UL;const lL=(s,R,z,ie)=>({$:"XCHG3_ALT",arg0:s,arg1:R,arg2:z,loc:ie});D.XCHG3_ALT=lL;const NL=(s,R)=>({$:"STI",arg0:s,loc:R});D.STI=NL;const HL=(s,R)=>({$:"STI_ALT",arg0:s,loc:R});D.STI_ALT=HL;const GL=(s,R)=>({$:"STU",arg0:s,loc:R});D.STU=GL;const QL=(s,R)=>({$:"STU_ALT",arg0:s,loc:R});D.STU_ALT=QL;const _L=(s,R)=>({$:"LDI",arg0:s,loc:R});D.LDI=_L;const BL=(s,R)=>({$:"LDI_ALT",arg0:s,loc:R});D.LDI_ALT=BL;const fL=(s,R)=>({$:"LDU",arg0:s,loc:R});D.LDU=fL;const XL=(s,R)=>({$:"LDU_ALT",arg0:s,loc:R});D.LDU_ALT=XL;const VL=(s,R)=>({$:"LDSLICE",arg0:s,loc:R});D.LDSLICE=VL;const $L=(s,R)=>({$:"LDSLICE_ALT",arg0:s,loc:R});D.LDSLICE_ALT=$L;const WL=s=>({$:"LSHIFT_VAR",loc:s});D.LSHIFT_VAR=WL;const KL=(s,R)=>({$:"LSHIFT",arg0:s,loc:R});D.LSHIFT=KL;const ZL=s=>({$:"QLSHIFT_VAR",loc:s});D.QLSHIFT_VAR=ZL;const kL=(s,R)=>({$:"QLSHIFT",arg0:s,loc:R});D.QLSHIFT=kL;const hL=s=>({$:"BCHKBITS_VAR",loc:s});D.BCHKBITS_VAR=hL;const yL=(s,R)=>({$:"BCHKBITS",arg0:s,loc:R});D.BCHKBITS=yL;const wL=s=>({$:"BCHKBITSQ_VAR",loc:s});D.BCHKBITSQ_VAR=wL;const pL=(s,R)=>({$:"BCHKBITSQ",arg0:s,loc:R});D.BCHKBITSQ=pL;const YL=s=>({$:"RSHIFT_VAR",loc:s});D.RSHIFT_VAR=YL;const bL=(s,R)=>({$:"RSHIFT",arg0:s,loc:R});D.RSHIFT=bL;const JL=s=>({$:"RSHIFT_ALT",loc:s});D.RSHIFT_ALT=JL;const vL=s=>({$:"QRSHIFT_VAR",loc:s});D.QRSHIFT_VAR=vL;const jL=(s,R)=>({$:"QRSHIFT",arg0:s,loc:R});D.QRSHIFT=jL;const zL=s=>({$:"QRSHIFT_ALT",loc:s});D.QRSHIFT_ALT=zL;const qL=(s,R)=>({$:"CALLDICT",arg0:s,loc:R});D.CALLDICT=qL;const xL=(s,R)=>({$:"CALLDICT_LONG",arg0:s,loc:R});D.CALLDICT_LONG=xL;const eu=(s,R)=>({$:"THROW_SHORT",arg0:s,loc:R});D.THROW_SHORT=eu;const ru=(s,R)=>({$:"THROW",arg0:s,loc:R});D.THROW=ru;const nu=(s,R)=>({$:"THROWIF_SHORT",arg0:s,loc:R});D.THROWIF_SHORT=nu;const tu=(s,R)=>({$:"THROWIF",arg0:s,loc:R});D.THROWIF=tu;const au=(s,R)=>({$:"THROWIFNOT_SHORT",arg0:s,loc:R});D.THROWIFNOT_SHORT=au;const Tu=(s,R)=>({$:"THROWIFNOT",arg0:s,loc:R});D.THROWIFNOT=Tu;const Iu=(s,R)=>({$:"PUSHINT_4",arg0:s,loc:R});D.PUSHINT_4=Iu;const Du=(s,R)=>({$:"PUSHINT_8",arg0:s,loc:R});D.PUSHINT_8=Du;const Eu=(s,R)=>({$:"PUSHINT_16",arg0:s,loc:R});D.PUSHINT_16=Eu;const su=(s,R)=>({$:"PUSHINT_LONG",arg0:s,loc:R});D.PUSHINT_LONG=su;const Su=(s,R)=>({$:"XCHG_01_LONG",arg0:s,loc:R});D.XCHG_01_LONG=Su;const Ru=(s,R)=>({$:"XCHG_0I",arg0:s,loc:R});D.XCHG_0I=Ru;const iu=(s,R,z)=>({$:"XCHG_IJ",arg0:s,arg1:R,loc:z});D.XCHG_IJ=iu;const ou=(s,R,z)=>({$:"XCHG_1I",arg0:s,arg1:R,loc:z});D.XCHG_1I=ou;const Lu=s=>({$:"DUMPSTK",loc:s});D.DUMPSTK=Lu;const uu=(s,R)=>({$:"DEBUG",arg0:s,loc:R});D.DEBUG=uu;const Cu=s=>({$:"STRDUMP",loc:s});D.STRDUMP=Cu;const Au=(s,R)=>({$:"DEBUG_1",arg0:s,loc:R});D.DEBUG_1=Au;const Mu=(s,R)=>({$:"DUMP",arg0:s,loc:R});D.DUMP=Mu;const cu=(s,R)=>({$:"DEBUG_2",arg0:s,loc:R});D.DEBUG_2=cu;const Pu=(s,R)=>({$:"PUSHCTR",arg0:s,loc:R});D.PUSHCTR=Pu;const Ou=(s,R)=>({$:"PUSH",arg0:s,loc:R});D.PUSH=Ou;const du=(s,R)=>({$:"PUSH_LONG",arg0:s,loc:R});D.PUSH_LONG=du;const Fu=(s,R)=>({$:"POPCTR",arg0:s,loc:R});D.POPCTR=Fu;const mu=(s,R)=>({$:"POP",arg0:s,loc:R});D.POP=mu;const gu=(s,R)=>({$:"POP_LONG",arg0:s,loc:R});D.POP_LONG=gu;const Uu=(s,R,z)=>({$:"CALLXARGS",arg0:s,arg1:R,loc:z});D.CALLXARGS=Uu;const lu=(s,R,z)=>({$:"CALLXARGS_1",arg0:s,arg1:R,loc:z});D.CALLXARGS_1=lu;const Nu=(s,R)=>({$:"PUSHSLICE",arg0:s,loc:R});D.PUSHSLICE=Nu;const Hu=(s,R)=>({$:"PUSHSLICE_REFS",arg0:s,loc:R});D.PUSHSLICE_REFS=Hu;const Gu=(s,R)=>({$:"PUSHSLICE_LONG",arg0:s,loc:R});D.PUSHSLICE_LONG=Gu;const Qu=(s,R)=>({$:"PUSHCONT",arg0:s,loc:R});D.PUSHCONT=Qu;const _u=(s,R)=>({$:"PUSHCONT_SHORT",arg0:s,loc:R});D.PUSHCONT_SHORT=_u;const Bu=(s,R)=>({$:"STSLICECONST",arg0:s,loc:R});D.STSLICECONST=Bu;const fu=(s,R)=>({$:"SETCP",arg0:s,loc:R});D.SETCP=fu;const Xu=s=>({$:"SETCPX",loc:s});D.SETCPX=Xu;const Vu=(s,R)=>({$:"SETCP_SHORT",arg0:s,loc:R});D.SETCP_SHORT=Vu;const $u=(s,R)=>({$:"PSEUDO_PUSHREF",arg0:s,loc:R});D.PSEUDO_PUSHREF=$u;const Wu=(s,R)=>({$:"PSEUDO_PUSHSLICE",arg0:s,loc:R});D.PSEUDO_PUSHSLICE=Wu;const Ku=(s,R)=>({$:"PSEUDO_EXOTIC",arg0:s,loc:R});D.PSEUDO_EXOTIC=Ku;const Zu=(s,R)=>({$:"DEBUGMARK",arg0:s,loc:R});return D.DEBUGMARK=Zu,D}var qe={},xe={},hn={},he={},SC;function MA(){if(SC)return he;SC=1,Object.defineProperty(he,"__esModule",{value:!0}),he.findCommonPrefix=G,he.buildTree=a,he.writeLabelShort=C,he.writeLabelLong=o,he.writeLabelSame=c,he.detectLabelType=d,he.serializeDict=B;const r=et();function G(F,N=0){if(F.length===0)return"";const P=F[0];if(P===void 0)return"";let O=P.slice(N);for(let Q=1;Q<F.length;Q++){const V=F[Q];if(V===void 0)break;for(;V.indexOf(O,N)!==N;)if(O=O.substring(0,O.length-1),O==="")return O}return O}function _(F,N){for(;F.length<N;)F="0"+F;return F}function S(F,N){const P=new Map,O=new Map;for(const[Q,V]of F.entries())Q[N]==="0"?P.set(Q,V):O.set(Q,V);return{left:P,right:O}}function t(F,N){if(F.size===1){const Q=[...F.values()][0];if(!Q)throw new Error("impossible");return{type:"leaf",value:Q}}const{left:P,right:O}=S(F,N);return{type:"fork",left:e(P,N+1),right:e(O,N+1)}}function e(F,N=0){const P=G([...F.keys()],N);return{label:P,node:t(F,P.length+N)}}function a(F,N){const P=new Map;for(const O of F.keys()){const Q=_(O.toString(2),N);P.set(Q,F.get(O))}return e(P)}function C(F,N){N.storeBit(0);for(let P=0;P<F.length;P++)N.storeBit(1);return N.storeBit(0),F.length>0&&N.storeUint(BigInt("0b"+F),F.length),N}function u(F){return 1+F.length+1+F.length}function o(F,N,P){P.storeBit(1),P.storeBit(0);let O=Math.ceil(Math.log2(N+1));return P.storeUint(F.length,O),F.length>0&&P.storeUint(BigInt("0b"+F),F.length),P}function A(F,N){return 2+Math.ceil(Math.log2(N+1))+F.length}function c(F,N,P,O){O.storeBit(1),O.storeBit(1),O.storeBit(F);const Q=Math.ceil(Math.log2(P+1));O.storeUint(N,Q)}function l(F){return 3+Math.ceil(Math.log2(F+1))}function K(F){if(F.length===0||F.length===1)return!0;for(let N=1;N<F.length;N++)if(F[N]!==F[0])return!1;return!0}function d(F,N){let P="short",O=u(F),Q=A(F,N);return Q<O&&(O=Q,P="long"),K(F)&&l(N)<O&&(P="same"),P}function f(F,N,P){const O=d(F,N);O==="short"?C(F,P):O==="long"?o(F,N,P):O==="same"&&c(F[0]==="1",F.length,N,P)}function p(F,N,P,O){if(F.type==="leaf"&&P(F.value,O),F.type==="fork"){const Q=new r.CodeBuilder,V=new r.CodeBuilder;v(F.left,N-1,P,Q),v(F.right,N-1,P,V),O.storeRef(Q.asCell()),O.storeRef(V.asCell()),O.pushDictionaryInfo(...Q.getDictionaryInfo()),O.pushDictionaryInfo(...V.getDictionaryInfo())}}function v(F,N,P,O){f(F.label,N,O),p(F.node,N-F.label.length,P,O)}function B(F,N,P,O){const Q=a(F,N);v(Q,N,P,O)}return he}var vn={},RC;function cA(){if(RC)return vn;RC=1,Object.defineProperty(vn,"__esModule",{value:!0}),vn.parseDict=_;function r(S){let t=0;for(;S.loadBit();)t++;return t}function G(S,t,e,a,C){const u=t.loadBit()?1:0;let o=0,A=S;if(u===0){o=r(t);for(let c=0;c<o;c++)A+=t.loadBit()?"1":"0"}else if((t.loadBit()?1:0)===0){o=t.loadUint(Math.ceil(Math.log2(e+1)));for(let l=0;l<o;l++)A+=t.loadBit()?"1":"0"}else{const l=t.loadBit()?"1":"0";o=t.loadUint(Math.ceil(Math.log2(e+1)));for(let K=0;K<o;K++)A+=l}if(e-o===0)a.set(BigInt("0b"+A),C(t));else{const c=t.loadRef(),l=t.loadRef();c.isExotic||G(A+"0",c.beginParse(),e-o-1,a,C),l.isExotic||G(A+"1",l.beginParse(),e-o-1,a,C)}}function _(S,t,e){let a=new Map;return S&&G("",S,t,a,e),a}return vn}var yn={},jn={},iC;function PA(){if(iC)return jn;iC=1,Object.defineProperty(jn,"__esModule",{value:!0}),jn.paddedBufferToBits=G;const r=Ke();function G(_){let S=0;for(let t=_.length-1;t>=0;t--)if(_[t]!==0){const e=_[t];if(e===void 0)break;let a=e&-e;(a&1)==0&&(a=Math.log2(a)+1),t>0&&(S=t<<3),S+=8-a;break}return new r.BitString(_,0,S)}return jn}var oC;function OA(){if(oC)return yn;oC=1,Object.defineProperty(yn,"__esModule",{value:!0}),yn.serializeInternalKey=S,yn.deserializeInternalKey=t;const r=Ke(),G=Ke(),_=PA();function S(e){if(typeof e=="number"){if(!Number.isSafeInteger(e))throw Error("Invalid key type: not a safe integer: "+e);return"n:"+e.toString(10)}else{if(typeof e=="bigint")return"b:"+e.toString(10);if(r.Address.isAddress(e))return"a:"+e.toString();if(Buffer.isBuffer(e))return"f:"+e.toString("hex");if(G.BitString.isBitString(e))return"B:"+e.toString();throw Error("Invalid key type")}}function t(e){let a=e.slice(0,2),C=e.slice(2);if(a==="n:")return Number.parseInt(C,10);if(a==="b:")return BigInt(C);if(a==="a:")return r.Address.parse(C);if(a==="f:")return Buffer.from(C,"hex");if(a==="B:"){const u=C.slice(-1)=="_";if(u||C.length%2!=0){let A=u?C.length-1:C.length;const c=C.substr(0,A)+"0";return!u&&(A&1)!==0?new G.BitString(Buffer.from(c,"hex"),0,A<<2):(0,_.paddedBufferToBits)(Buffer.from(c,"hex"))}else return new G.BitString(Buffer.from(C,"hex"),0,C.length<<2)}throw Error("Invalid key type: "+a)}return yn}var LC;function dA(){var C;if(LC)return hn;LC=1,Object.defineProperty(hn,"__esModule",{value:!0}),hn.Dictionary=void 0;const r=Ke(),G=Ke(),_=MA(),S=cA(),t=OA();let e=(C=class{constructor(o,A,c){le(this,"_key");le(this,"_value");le(this,"_map");this._key=A,this._value=c,this._map=o}static empty(o,A){return o&&A?new C(new Map,o,A):new C(new Map,null,null)}set(o,A){return this._map.set((0,t.serializeInternalKey)(o),A),this}*[Symbol.iterator](){for(const[o,A]of this._map)yield[(0,t.deserializeInternalKey)(o),A]}static loadDirect(o,A,c){if(!c)return C.empty(o,A);const l=c instanceof G.Cell?c.beginParse():c,K=(0,S.parseDict)(l,o.bits,A.parse),d=new Map;for(let[f,p]of K)d.set((0,t.serializeInternalKey)(o.parse(f)),p);return new C(d,o,A)}storeDirect(o){if(this._map.size===0)throw Error("Cannot store empty dictionary directly");const A=this._key,c=this._value;if(!A)throw Error("Key serializer is not defined");if(!c)throw Error("Value serializer is not defined");let l=new Map;for(const[K,d]of this._map)l.set(A.serialize((0,t.deserializeInternalKey)(K)),d);(0,_.serializeDict)(l,A.bits,c.serialize,o)}},le(C,"Keys",{Int:o=>a(o)}),C);hn.Dictionary=e;function a(u){return{bits:u,serialize:o=>{if(!Number.isSafeInteger(o))throw Error("Key is not a safe integer: "+o);return(0,r.beginCell)().storeInt(o,u).endCell().beginParse().loadUintBig(u)},parse:o=>(0,r.beginCell)().storeUint(o,u).endCell().beginParse().loadInt(u)}}return hn}var wn={},uC;function FA(){return uC||(uC=1,Object.defineProperty(wn,"__esModule",{value:!0}),wn.rangeToName=void 0,wn.rangeToName=[{min:8650496,max:8650752,name:"PUSHNAN"},{min:10485760,max:10551296,name:"ADD"},{min:10551296,max:10616832,name:"SUB"},{min:10616832,max:10682368,name:"SUBR"},{min:10682368,max:10747904,name:"NEGATE"},{min:10747904,max:10813440,name:"INC"},{min:10813440,max:10878976,name:"DEC"},{min:11010048,max:11075584,name:"MUL"},{min:11403264,max:11468800,name:"POW2"},{min:11534336,max:11599872,name:"AND"},{min:11599872,max:11665408,name:"OR"},{min:11665408,max:11730944,name:"XOR"},{min:11730944,max:11796480,name:"NOT"},{min:11927552,max:11927808,name:"FITSX"},{min:11927808,max:11928064,name:"UFITSX"},{min:11928064,max:11928320,name:"BITSIZE"},{min:11928320,max:11928576,name:"UBITSIZE"},{min:11929600,max:11929856,name:"MIN"},{min:11929856,max:11930112,name:"MAX"},{min:11930112,max:11930368,name:"MINMAX"},{min:11930368,max:11930624,name:"ABS"},{min:12034048,max:12034304,name:"QADD"},{min:12034304,max:12034560,name:"QSUB"},{min:12034560,max:12034816,name:"QSUBR"},{min:12034816,max:12035072,name:"QNEGATE"},{min:12035072,max:12035328,name:"QINC"},{min:12035328,max:12035584,name:"QDEC"},{min:12036096,max:12036352,name:"QMUL"},{min:12037632,max:12037888,name:"QPOW2"},{min:12038144,max:12038400,name:"QAND"},{min:12038400,max:12038656,name:"QOR"},{min:12038656,max:12038912,name:"QXOR"},{min:12038912,max:12039168,name:"QNOT"},{min:12039680,max:12039681,name:"QFITSX"},{min:12039681,max:12039682,name:"QUFITSX"},{min:12039682,max:12039683,name:"QBITSIZE"},{min:12039683,max:12039684,name:"QUBITSIZE"},{min:12039688,max:12039689,name:"QMIN"},{min:12039689,max:12039690,name:"QMAX"},{min:12039690,max:12039691,name:"QMINMAX"},{min:12039691,max:12039692,name:"QABS"},{min:12058624,max:12124160,name:"SGN"},{min:12124160,max:12189696,name:"LESS"},{min:12189696,max:12255232,name:"EQUAL"},{min:12255232,max:12320768,name:"LEQ"},{min:12320768,max:12386304,name:"GREATER"},{min:12386304,max:12451840,name:"NEQ"},{min:12451840,max:12517376,name:"GEQ"},{min:12517376,max:12582912,name:"CMP"},{min:12845056,max:12910592,name:"ISNAN"},{min:12910592,max:12976128,name:"CHKNAN"},{min:12040192,max:12040448,name:"QSGN"},{min:12040448,max:12040704,name:"QLESS"},{min:12040704,max:12040960,name:"QEQUAL"},{min:12040960,max:12041216,name:"QLEQ"},{min:12041216,max:12041472,name:"QGREATER"},{min:12041472,max:12041728,name:"QNEQ"},{min:12041728,max:12041984,name:"QGEQ"},{min:12041984,max:12042240,name:"QCMP"},{min:13041664,max:13041920,name:"SEMPTY"},{min:13041920,max:13042176,name:"SDEMPTY"},{min:13042176,max:13042432,name:"SREMPTY"},{min:13042432,max:13042688,name:"SDFIRST"},{min:13042688,max:13042944,name:"SDLEXCMP"},{min:13042944,max:13043200,name:"SDEQ"},{min:13043712,max:13043968,name:"SDPFX"},{min:13043968,max:13044224,name:"SDPFXREV"},{min:13044224,max:13044480,name:"SDPPFX"},{min:13044480,max:13044736,name:"SDPPFXREV"},{min:13044736,max:13044992,name:"SDSFX"},{min:13044992,max:13045248,name:"SDSFXREV"},{min:13045248,max:13045504,name:"SDPSFX"},{min:13045504,max:13045760,name:"SDPSFXREV"},{min:13045760,max:13046016,name:"SDCNTLEAD0"},{min:13046016,max:13046272,name:"SDCNTLEAD1"},{min:13046272,max:13046528,name:"SDCNTTRAIL0"},{min:13046528,max:13046784,name:"SDCNTTRAIL1"},{min:13107200,max:13172736,name:"NEWC"},{min:13172736,max:13238272,name:"ENDC"},{min:13434880,max:13500416,name:"ENDCST"},{min:13570304,max:13570560,name:"STBREF"},{min:13570816,max:13571072,name:"STB"},{min:13571072,max:13571328,name:"STREFR"},{min:13571328,max:13571584,name:"STBREFR"},{min:13571584,max:13571840,name:"STSLICER"},{min:13571840,max:13572096,name:"STBR"},{min:13572096,max:13572352,name:"STREFQ"},{min:13572352,max:13572608,name:"STBREFQ"},{min:13572608,max:13572864,name:"STSLICEQ"},{min:13572864,max:13573120,name:"STBQ"},{min:13573120,max:13573376,name:"STREFRQ"},{min:13573376,max:13573632,name:"STBREFRQ"},{min:13573632,max:13573888,name:"STSLICERQ"},{min:13573888,max:13574144,name:"STBRQ"},{min:13574912,max:13575168,name:"ENDXC"},{min:13578240,max:13578496,name:"BDEPTH"},{min:13578496,max:13578752,name:"BBITS"},{min:13578752,max:13579008,name:"BREFS"},{min:13579008,max:13579264,name:"BBITREFS"},{min:13579520,max:13579776,name:"BREMBITS"},{min:13579776,max:13580032,name:"BREMREFS"},{min:13580032,max:13580288,name:"BREMBITREFS"},{min:13580800,max:13581056,name:"BCHKREFS"},{min:13581056,max:13581312,name:"BCHKBITREFS"},{min:13581824,max:13582080,name:"BCHKREFSQ"},{min:13582080,max:13582336,name:"BCHKBITREFSQ"},{min:13582336,max:13582592,name:"STZEROES"},{min:13582592,max:13582848,name:"STONES"},{min:13582848,max:13583104,name:"STSAME"},{min:13631488,max:13697024,name:"CTOS"},{min:13697024,max:13762560,name:"ENDS"},{min:13893632,max:13959168,name:"LDREF"},{min:13959168,max:14024704,name:"LDREFRTOS"},{min:14098432,max:14098688,name:"SDCUTFIRST"},{min:14098688,max:14098944,name:"SDSKIPFIRST"},{min:14098944,max:14099200,name:"SDCUTLAST"},{min:14099200,max:14099456,name:"SDSKIPLAST"},{min:14099456,max:14099712,name:"SDSUBSTR"},{min:14102528,max:14102784,name:"SCUTFIRST"},{min:14102784,max:14103040,name:"SSKIPFIRST"},{min:14103040,max:14103296,name:"SCUTLAST"},{min:14103296,max:14103552,name:"SSKIPLAST"},{min:14103552,max:14103808,name:"SUBSLICE"},{min:14104064,max:14104320,name:"SPLIT"},{min:14104320,max:14104576,name:"SPLITQ"},{min:14104832,max:14105088,name:"XCTOS"},{min:14105088,max:14105344,name:"XLOAD"},{min:14105344,max:14105600,name:"XLOADQ"},{min:14106880,max:14107136,name:"SCHKBITS"},{min:14107136,max:14107392,name:"SCHKREFS"},{min:14107392,max:14107648,name:"SCHKBITREFS"},{min:14107904,max:14108160,name:"SCHKBITSQ"},{min:14108160,max:14108416,name:"SCHKREFSQ"},{min:14108416,max:14108672,name:"SCHKBITREFSQ"},{min:14108672,max:14108928,name:"PLDREFVAR"},{min:14108928,max:14109184,name:"SBITS"},{min:14109184,max:14109440,name:"SREFS"},{min:14109440,max:14109696,name:"SBITREFS"},{min:14114816,max:14115072,name:"LDZEROES"},{min:14115072,max:14115328,name:"LDONES"},{min:14115328,max:14115584,name:"LDSAME"},{min:14115840,max:14116096,name:"SDEPTH"},{min:14116096,max:14116352,name:"CDEPTH"},{min:14116352,max:14116608,name:"CLEVEL"},{min:14116608,max:14116864,name:"CLEVELMASK"},{min:14118912,max:14119168,name:"CHASHIX"},{min:14119168,max:14119424,name:"CDEPTHIX"},{min:14155776,max:14221312,name:"EXECUTE"},{min:14221312,max:14286848,name:"JMPX"},{min:14364672,max:14364928,name:"RET"},{min:14364928,max:14365184,name:"RETALT"},{min:14365184,max:14365440,name:"RETBOOL"},{min:14365696,max:14365952,name:"CALLCC"},{min:14365952,max:14366208,name:"JMPXDATA"},{min:14366720,max:14366976,name:"CALLXVARARGS"},{min:14366976,max:14367232,name:"RETVARARGS"},{min:14367232,max:14367488,name:"JMPXVARARGS"},{min:14367488,max:14367744,name:"CALLCCVARARGS"},{min:14368512,max:14368768,name:"RETDATA"},{min:14372864,max:14373120,name:"RUNVMX"},{min:14417920,max:14483456,name:"IFRET"},{min:14483456,max:14548992,name:"IFNOTRET"},{min:14548992,max:14614528,name:"IF"},{min:14614528,max:14680064,name:"IFNOT"},{min:14680064,max:14745600,name:"IFJMP"},{min:14745600,max:14811136,name:"IFNOTJMP"},{min:14811136,max:14876672,name:"IFELSE"},{min:14877696,max:14877952,name:"CONDSEL"},{min:14877952,max:14878208,name:"CONDSELCHK"},{min:14878720,max:14878976,name:"IFRETALT"},{min:14878976,max:14879232,name:"IFNOTRETALT"},{min:14942208,max:15007744,name:"REPEAT"},{min:15007744,max:15073280,name:"REPEATEND"},{min:15073280,max:15138816,name:"UNTIL"},{min:15138816,max:15204352,name:"UNTILEND"},{min:15204352,max:15269888,name:"WHILE"},{min:15269888,max:15335424,name:"WHILEEND"},{min:15335424,max:15400960,name:"AGAIN"},{min:15400960,max:15466496,name:"AGAINEND"},{min:14881792,max:14882048,name:"REPEATBRK"},{min:14882048,max:14882304,name:"REPEATENDBRK"},{min:14882304,max:14882560,name:"UNTILBRK"},{min:14882560,max:14882816,name:"UNTILENDBRK"},{min:14882816,max:14883072,name:"WHILEBRK"},{min:14883072,max:14883328,name:"WHILEENDBRK"},{min:14883328,max:14883584,name:"AGAINBRK"},{min:14883584,max:14883840,name:"AGAINENDBRK"},{min:15536128,max:15536384,name:"RETURNVARARGS"},{min:15536384,max:15536640,name:"SETCONTVARARGS"},{min:15536640,max:15536896,name:"SETNUMVARARGS"},{min:15539712,max:15539968,name:"BLESS"},{min:15539968,max:15540224,name:"BLESSVARARGS"},{min:15589376,max:15589632,name:"PUSHCTRX"},{min:15589632,max:15589888,name:"POPCTRX"},{min:15589888,max:15590144,name:"SETCONTCTRX"},{min:15590400,max:15590656,name:"SETCONTCTRMANYX"},{min:15593472,max:15593728,name:"BOOLAND"},{min:15593728,max:15593984,name:"BOOLOR"},{min:15593984,max:15594240,name:"COMPOSBOTH"},{min:15594240,max:15594496,name:"ATEXIT"},{min:15594496,max:15594752,name:"ATEXITALT"},{min:15594752,max:15595008,name:"SETEXITALT"},{min:15595008,max:15595264,name:"THENRET"},{min:15595264,max:15595520,name:"THENRETALT"},{min:15595520,max:15595776,name:"INVERT"},{min:15595776,max:15596032,name:"BOOLEVAL"},{min:15596032,max:15596288,name:"SAMEALT"},{min:15596288,max:15596544,name:"SAMEALTSAVE"},{min:15924992,max:15925248,name:"TRY"},{min:15990784,max:15991040,name:"STDICT"},{min:15991040,max:15991296,name:"SKIPDICT"},{min:15991296,max:15991552,name:"LDDICTS"},{min:15991552,max:15991808,name:"PLDDICTS"},{min:15991808,max:15992064,name:"LDDICT"},{min:15992064,max:15992320,name:"PLDDICT"},{min:15992320,max:15992576,name:"LDDICTQ"},{min:15992576,max:15992832,name:"PLDDICTQ"},{min:16019456,max:16019712,name:"PFXDICTSET"},{min:16019712,max:16019968,name:"PFXDICTREPLACE"},{min:16019968,max:16020224,name:"PFXDICTADD"},{min:16020224,max:16020480,name:"PFXDICTDEL"},{min:16033792,max:16034048,name:"PFXDICTGETQ"},{min:16034048,max:16034304,name:"PFXDICTGET"},{min:16034304,max:16034560,name:"PFXDICTGETJMP"},{min:16034560,max:16034816,name:"PFXDICTGETEXEC"},{min:0,max:65536,name:"NOP"},{min:65536,max:131072,name:"SWAP"},{min:2097152,max:2162688,name:"DUP"},{min:2162688,max:2228224,name:"OVER"},{min:3145728,max:3211264,name:"DROP"},{min:3211264,max:3276800,name:"NIP"},{min:5767168,max:5832704,name:"ROT"},{min:5832704,max:5898240,name:"ROTREV"},{min:6291456,max:6356992,name:"PICK"},{min:6356992,max:6422528,name:"ROLL"},{min:6422528,max:6488064,name:"ROLLREV"},{min:6488064,max:6553600,name:"BLKSWX"},{min:6553600,max:6619136,name:"REVX"},{min:6619136,max:6684672,name:"DROPX"},{min:6684672,max:6750208,name:"TUCK"},{min:6750208,max:6815744,name:"XCHGX"},{min:6815744,max:6881280,name:"DEPTH"},{min:6881280,max:6946816,name:"CHKDEPTH"},{min:6946816,max:7012352,name:"ONLYTOPX"},{min:7012352,max:7077888,name:"ONLYX"},{min:16252928,max:16253184,name:"ACCEPT"},{min:16253184,max:16253440,name:"SETGASLIMIT"},{min:16254720,max:16254976,name:"GASCONSUMED"},{min:16256768,max:16257024,name:"COMMIT"},{min:16261888,max:16262144,name:"NOW"},{min:16262144,max:16262400,name:"BLOCKLT"},{min:16262400,max:16262656,name:"LTIME"},{min:16262656,max:16262912,name:"RANDSEED"},{min:16262912,max:16263168,name:"BALANCE"},{min:16263168,max:16263424,name:"MYADDR"},{min:16263424,max:16263680,name:"CONFIGROOT"},{min:16263680,max:16263936,name:"MYCODE"},{min:16263936,max:16264192,name:"INCOMINGVALUE"},{min:16264192,max:16264448,name:"STORAGEFEES"},{min:16264448,max:16264704,name:"PREVBLOCKSINFOTUPLE"},{min:16264704,max:16264960,name:"UNPACKEDCONFIGTUPLE"},{min:16264960,max:16265216,name:"DUEPAYMENT"},{min:16265216,max:16265472,name:"CONFIGDICT"},{min:16265728,max:16265984,name:"CONFIGPARAM"},{min:16265984,max:16266240,name:"CONFIGOPTPARAM"},{min:16266240,max:16266241,name:"PREVMCBLOCKS"},{min:16266241,max:16266242,name:"PREVKEYBLOCK"},{min:16266242,max:16266243,name:"PREVMCBLOCKS_100"},{min:16266496,max:16266752,name:"GLOBALID"},{min:16266752,max:16267008,name:"GETGASFEE"},{min:16267008,max:16267264,name:"GETSTORAGEFEE"},{min:16267264,max:16267520,name:"GETFORWARDFEE"},{min:16267520,max:16267776,name:"GETPRECOMPILEDGAS"},{min:16267776,max:16268032,name:"GETORIGINALFWDFEE"},{min:16268032,max:16268288,name:"GETGASFEESIMPLE"},{min:16268288,max:16268544,name:"GETFORWARDFEESIMPLE"},{min:16269312,max:16269568,name:"GETGLOBVAR"},{min:16277504,max:16277760,name:"SETGLOBVAR"},{min:16257024,max:16257280,name:"RANDU256"},{min:16257280,max:16257536,name:"RAND"},{min:16258048,max:16258304,name:"SETRAND"},{min:16258304,max:16258560,name:"ADDRAND"},{min:16318464,max:16318720,name:"HASHCU"},{min:16318720,max:16318976,name:"HASHSU"},{min:16318976,max:16319232,name:"SHA256U"},{min:16322560,max:16322816,name:"CHKSIGNU"},{min:16322816,max:16323072,name:"CHKSIGNS"},{min:16323072,max:16323328,name:"ECRECOVER"},{min:16323328,max:16323584,name:"SECP256K1_XONLY_PUBKEY_TWEAK_ADD"},{min:16323584,max:16323840,name:"P256_CHKSIGNU"},{min:16323840,max:16324096,name:"P256_CHKSIGNS"},{min:16326656,max:16326912,name:"RIST255_FROMHASH"},{min:16326912,max:16327168,name:"RIST255_VALIDATE"},{min:16327168,max:16327424,name:"RIST255_ADD"},{min:16327424,max:16327680,name:"RIST255_SUB"},{min:16327680,max:16327936,name:"RIST255_MUL"},{min:16327936,max:16328192,name:"RIST255_MULBASE"},{min:16328192,max:16328448,name:"RIST255_PUSHL"},{min:12056865,max:12056866,name:"RIST255_QVALIDATE"},{min:12056866,max:12056867,name:"RIST255_QADD"},{min:12056867,max:12056868,name:"RIST255_QSUB"},{min:12056868,max:12056869,name:"RIST255_QMUL"},{min:12056869,max:12056870,name:"RIST255_QMULBASE"},{min:16330752,max:16330753,name:"BLS_VERIFY"},{min:16330753,max:16330754,name:"BLS_AGGREGATE"},{min:16330754,max:16330755,name:"BLS_FASTAGGREGATEVERIFY"},{min:16330755,max:16330756,name:"BLS_AGGREGATEVERIFY"},{min:16330768,max:16330769,name:"BLS_G1_ADD"},{min:16330769,max:16330770,name:"BLS_G1_SUB"},{min:16330770,max:16330771,name:"BLS_G1_NEG"},{min:16330771,max:16330772,name:"BLS_G1_MUL"},{min:16330772,max:16330773,name:"BLS_G1_MULTIEXP"},{min:16330773,max:16330774,name:"BLS_G1_ZERO"},{min:16330774,max:16330775,name:"BLS_MAP_TO_G1"},{min:16330775,max:16330776,name:"BLS_G1_INGROUP"},{min:16330776,max:16330777,name:"BLS_G1_ISZERO"},{min:16330784,max:16330785,name:"BLS_G2_ADD"},{min:16330785,max:16330786,name:"BLS_G2_SUB"},{min:16330786,max:16330787,name:"BLS_G2_NEG"},{min:16330787,max:16330788,name:"BLS_G2_MUL"},{min:16330788,max:16330789,name:"BLS_G2_MULTIEXP"},{min:16330789,max:16330790,name:"BLS_G2_ZERO"},{min:16330790,max:16330791,name:"BLS_MAP_TO_G2"},{min:16330791,max:16330792,name:"BLS_G2_INGROUP"},{min:16330792,max:16330793,name:"BLS_G2_ISZERO"},{min:16330800,max:16330801,name:"BLS_PAIRING"},{min:16330801,max:16330802,name:"BLS_PUSHR"},{min:16334848,max:16335104,name:"CDATASIZEQ"},{min:16335104,max:16335360,name:"CDATASIZE"},{min:16335360,max:16335616,name:"SDATASIZEQ"},{min:16335616,max:16335872,name:"SDATASIZE"},{min:16384e3,max:16384256,name:"LDGRAMS"},{min:16384256,max:16384512,name:"LDVARINT16"},{min:16384512,max:16384768,name:"STGRAMS"},{min:16384768,max:16385024,name:"STVARINT16"},{min:16385024,max:16385280,name:"LDVARUINT32"},{min:16385280,max:16385536,name:"LDVARINT32"},{min:16385536,max:16385792,name:"STVARUINT32"},{min:16385792,max:16386048,name:"STVARINT32"},{min:16400384,max:16400640,name:"LDMSGADDR"},{min:16400640,max:16400896,name:"LDMSGADDRQ"},{min:16400896,max:16401152,name:"PARSEMSGADDR"},{min:16401152,max:16401408,name:"PARSEMSGADDRQ"},{min:16401408,max:16401664,name:"REWRITESTDADDR"},{min:16401664,max:16401920,name:"REWRITESTDADDRQ"},{min:16401920,max:16402176,name:"REWRITEVARADDR"},{min:16402176,max:16402432,name:"REWRITEVARADDRQ"},{min:16449536,max:16449792,name:"SENDRAWMSG"},{min:16450048,max:16450304,name:"RAWRESERVE"},{min:16450304,max:16450560,name:"RAWRESERVEX"},{min:16450560,max:16450816,name:"SETCODE"},{min:16451072,max:16451328,name:"SETLIBCODE"},{min:16451328,max:16451584,name:"CHANGELIB"},{min:16451584,max:16451840,name:"SENDMSG"},{min:7143424,max:7208960,name:"PUSHNULL"},{min:7208960,max:7274496,name:"ISNULL"},{min:7307264,max:7307520,name:"TUPLEVAR"},{min:7307520,max:7307776,name:"INDEXVAR"},{min:7307776,max:7308032,name:"UNTUPLEVAR"},{min:7308032,max:7308288,name:"UNPACKFIRSTVAR"},{min:7308288,max:7308544,name:"EXPLODEVAR"},{min:7308544,max:7308800,name:"SETINDEXVAR"},{min:7308800,max:7309056,name:"INDEXVARQ"},{min:7309056,max:7309312,name:"SETINDEXVARQ"},{min:7309312,max:7309568,name:"TLEN"},{min:7309568,max:7309824,name:"QTLEN"},{min:7309824,max:7310080,name:"ISTUPLE"},{min:7310080,max:7310336,name:"LAST"},{min:7310336,max:7310592,name:"TPUSH"},{min:7310592,max:7310848,name:"TPOP"},{min:7315456,max:7315712,name:"NULLSWAPIF"},{min:7315712,max:7315968,name:"NULLSWAPIFNOT"},{min:7315968,max:7316224,name:"NULLROTRIF"},{min:7316224,max:7316480,name:"NULLROTRIFNOT"},{min:7316480,max:7316736,name:"NULLSWAPIF2"},{min:7316736,max:7316992,name:"NULLSWAPIFNOT2"},{min:7316992,max:7317248,name:"NULLROTRIF2"},{min:7317248,max:7317504,name:"NULLROTRIFNOT2"},{min:11075584,max:11075840,name:"ADDDIVMOD"},{min:11075840,max:11076096,name:"ADDDIVMODR"},{min:11076096,max:11076352,name:"ADDDIVMODC"},{min:11076608,max:11076864,name:"DIV"},{min:11076864,max:11077120,name:"DIVR"},{min:11077120,max:11077376,name:"DIVC"},{min:11077632,max:11077888,name:"MOD"},{min:11077888,max:11078144,name:"MODR"},{min:11078144,max:11078400,name:"MODC"},{min:11078656,max:11078912,name:"DIVMOD"},{min:11078912,max:11079168,name:"DIVMODR"},{min:11079168,max:11079424,name:"DIVMODC"},{min:12036352,max:12036353,name:"QADDDIVMOD"},{min:12036353,max:12036354,name:"QADDDIVMODR"},{min:12036354,max:12036355,name:"QADDDIVMODC"},{min:12036356,max:12036357,name:"QDIV"},{min:12036357,max:12036358,name:"QDIVR"},{min:12036358,max:12036359,name:"QDIVC"},{min:12036360,max:12036361,name:"QMOD"},{min:12036361,max:12036362,name:"QMODR"},{min:12036362,max:12036363,name:"QMODC"},{min:12036364,max:12036365,name:"QDIVMOD"},{min:12036365,max:12036366,name:"QDIVMODR"},{min:12036366,max:12036367,name:"QDIVMODC"},{min:11083776,max:11084032,name:"ADDRSHIFTMOD"},{min:11084032,max:11084288,name:"ADDRSHIFTMODR"},{min:11084288,max:11084544,name:"ADDRSHIFTMODC"},{min:11085056,max:11085312,name:"RSHIFTR"},{min:11085312,max:11085568,name:"RSHIFTC"},{min:11085824,max:11086080,name:"MODPOW2"},{min:11086080,max:11086336,name:"MODPOW2R"},{min:11086336,max:11086592,name:"MODPOW2C"},{min:11086848,max:11087104,name:"RSHIFTMOD"},{min:11087104,max:11087360,name:"RSHIFTMODR"},{min:11087360,max:11087616,name:"RSHIFTMODC"},{min:12036384,max:12036385,name:"QADDRSHIFTMOD"},{min:12036385,max:12036386,name:"QADDRSHIFTMODR"},{min:12036386,max:12036387,name:"QADDRSHIFTMODC"},{min:12036389,max:12036390,name:"QRSHIFTR"},{min:12036390,max:12036391,name:"QRSHIFTC"},{min:12036392,max:12036393,name:"QMODPOW2"},{min:12036393,max:12036394,name:"QMODPOW2R"},{min:12036394,max:12036395,name:"QMODPOW2C"},{min:12036396,max:12036397,name:"QRSHIFTMOD"},{min:12036397,max:12036398,name:"QRSHIFTMODR"},{min:12036398,max:12036399,name:"QRSHIFTMODC"},{min:11108352,max:11108608,name:"MULADDDIVMOD"},{min:11108608,max:11108864,name:"MULADDDIVMODR"},{min:11108864,max:11109120,name:"MULADDDIVMODC"},{min:11109376,max:11109632,name:"MULDIV"},{min:11109632,max:11109888,name:"MULDIVR"},{min:11109888,max:11110144,name:"MULDIVC"},{min:11110400,max:11110656,name:"MULMOD"},{min:11110656,max:11110912,name:"MULMODR"},{min:11110912,max:11111168,name:"MULMODC"},{min:11111424,max:11111680,name:"MULDIVMOD"},{min:11111680,max:11111936,name:"MULDIVMODR"},{min:11111936,max:11112192,name:"MULDIVMODC"},{min:12036480,max:12036481,name:"QMULADDDIVMOD"},{min:12036481,max:12036482,name:"QMULADDDIVMODR"},{min:12036482,max:12036483,name:"QMULADDDIVMODC"},{min:12036484,max:12036485,name:"QMULDIV"},{min:12036485,max:12036486,name:"QMULDIVR"},{min:12036486,max:12036487,name:"QMULDIVC"},{min:12036488,max:12036489,name:"QMULMOD"},{min:12036489,max:12036490,name:"QMULMODR"},{min:12036490,max:12036491,name:"QMULMODC"},{min:12036492,max:12036493,name:"QMULDIVMOD"},{min:12036493,max:12036494,name:"QMULDIVMODR"},{min:12036494,max:12036495,name:"QMULDIVMODC"},{min:11116544,max:11116800,name:"MULADDRSHIFTMOD"},{min:11116800,max:11117056,name:"MULADDRSHIFTRMOD"},{min:11117056,max:11117312,name:"MULADDRSHIFTCMOD"},{min:11117568,max:11117824,name:"MULRSHIFT"},{min:11117824,max:11118080,name:"MULRSHIFTR"},{min:11118080,max:11118336,name:"MULRSHIFTC"},{min:11118592,max:11118848,name:"MULMODPOW2"},{min:11118848,max:11119104,name:"MULMODPOW2R"},{min:11119104,max:11119360,name:"MULMODPOW2C"},{min:11119616,max:11119872,name:"MULRSHIFTMOD"},{min:11119872,max:11120128,name:"MULRSHIFTRMOD"},{min:11120128,max:11120384,name:"MULRSHIFTCMOD"},{min:12036512,max:12036513,name:"QMULADDRSHIFTMOD"},{min:12036513,max:12036514,name:"QMULADDRSHIFTRMOD"},{min:12036514,max:12036515,name:"QMULADDRSHIFTCMOD"},{min:12036516,max:12036517,name:"QMULRSHIFT"},{min:12036517,max:12036518,name:"QMULRSHIFTR"},{min:12036518,max:12036519,name:"QMULRSHIFTC"},{min:12036520,max:12036521,name:"QMULMODPOW2"},{min:12036521,max:12036522,name:"QMULMODPOW2R"},{min:12036522,max:12036523,name:"QMULMODPOW2C"},{min:12036524,max:12036525,name:"QMULRSHIFTMOD"},{min:12036525,max:12036526,name:"QMULRSHIFTRMOD"},{min:12036526,max:12036527,name:"QMULRSHIFTCMOD"},{min:11124736,max:11124992,name:"LSHIFTADDDIVMOD"},{min:11124992,max:11125248,name:"LSHIFTADDDIVMODR"},{min:11125248,max:11125504,name:"LSHIFTADDDIVMODC"},{min:11125760,max:11126016,name:"LSHIFTDIV"},{min:11126016,max:11126272,name:"LSHIFTDIVR"},{min:11126272,max:11126528,name:"LSHIFTDIVC"},{min:11126784,max:11127040,name:"LSHIFTMOD"},{min:11127040,max:11127296,name:"LSHIFTMODR"},{min:11127296,max:11127552,name:"LSHIFTMODC"},{min:11127808,max:11128064,name:"LSHIFTDIVMOD"},{min:11128064,max:11128320,name:"LSHIFTDIVMODR"},{min:11128320,max:11128576,name:"LSHIFTDIVMODC"},{min:12036544,max:12036545,name:"QLSHIFTADDDIVMOD"},{min:12036545,max:12036546,name:"QLSHIFTADDDIVMODR"},{min:12036546,max:12036547,name:"QLSHIFTADDDIVMODC"},{min:12036548,max:12036549,name:"QLSHIFTDIV"},{min:12036549,max:12036550,name:"QLSHIFTDIVR"},{min:12036550,max:12036551,name:"QLSHIFTDIVC"},{min:12036552,max:12036553,name:"QLSHIFTMOD"},{min:12036553,max:12036554,name:"QLSHIFTMODR"},{min:12036554,max:12036555,name:"QLSHIFTMODC"},{min:12036556,max:12036557,name:"QLSHIFTDIVMOD"},{min:12036557,max:12036558,name:"QLSHIFTDIVMODR"},{min:12036558,max:12036559,name:"QLSHIFTDIVMODC"},{min:13565952,max:13566208,name:"STIX"},{min:13566208,max:13566464,name:"STUX"},{min:13566464,max:13566720,name:"STIXR"},{min:13566720,max:13566976,name:"STUXR"},{min:13566976,max:13567232,name:"STIXQ"},{min:13567232,max:13567488,name:"STUXQ"},{min:13567488,max:13567744,name:"STIXRQ"},{min:13567744,max:13568e3,name:"STUXRQ"},{min:13576192,max:13576448,name:"STILE4"},{min:13576448,max:13576704,name:"STULE4"},{min:13576704,max:13576960,name:"STILE8"},{min:13576960,max:13577216,name:"STULE8"},{min:14090240,max:14090496,name:"LDIX"},{min:14090496,max:14090752,name:"LDUX"},{min:14090752,max:14091008,name:"PLDIX"},{min:14091008,max:14091264,name:"PLDUX"},{min:14091264,max:14091520,name:"LDIXQ"},{min:14091520,max:14091776,name:"LDUXQ"},{min:14091776,max:14092032,name:"PLDIXQ"},{min:14092032,max:14092288,name:"PLDUXQ"},{min:14096384,max:14096640,name:"LDSLICEX"},{min:14096640,max:14096896,name:"PLDSLICEX"},{min:14096896,max:14097152,name:"LDSLICEXQ"},{min:14097152,max:14097408,name:"PLDSLICEXQ"},{min:14110720,max:14110976,name:"LDILE4"},{min:14110976,max:14111232,name:"LDULE4"},{min:14111232,max:14111488,name:"LDILE8"},{min:14111488,max:14111744,name:"LDULE8"},{min:14111744,max:14112e3,name:"PLDILE4"},{min:14112e3,max:14112256,name:"PLDULE4"},{min:14112256,max:14112512,name:"PLDILE8"},{min:14112512,max:14112768,name:"PLDULE8"},{min:14112768,max:14113024,name:"LDILE4Q"},{min:14113024,max:14113280,name:"LDULE4Q"},{min:14113280,max:14113536,name:"LDILE8Q"},{min:14113536,max:14113792,name:"LDULE8Q"},{min:14113792,max:14114048,name:"PLDILE4Q"},{min:14114048,max:14114304,name:"PLDULE4Q"},{min:14114304,max:14114560,name:"PLDILE8Q"},{min:14114560,max:14114816,name:"PLDULE8Q"},{min:16031744,max:16032e3,name:"DICTIGETJMP"},{min:16032e3,max:16032256,name:"DICTUGETJMP"},{min:16032256,max:16032512,name:"DICTIGETEXEC"},{min:16032512,max:16032768,name:"DICTUGETEXEC"},{min:16038912,max:16039168,name:"DICTIGETJMPZ"},{min:16039168,max:16039424,name:"DICTUGETJMPZ"},{min:16039424,max:16039680,name:"DICTIGETEXECZ"},{min:16039680,max:16039936,name:"DICTUGETEXECZ"},{min:15993344,max:15993600,name:"DICTGET"},{min:15993600,max:15993856,name:"DICTGETREF"},{min:15993856,max:15994112,name:"DICTIGET"},{min:15994112,max:15994368,name:"DICTIGETREF"},{min:15994368,max:15994624,name:"DICTUGET"},{min:15994624,max:15994880,name:"DICTUGETREF"},{min:15995392,max:15995648,name:"DICTSET"},{min:15995648,max:15995904,name:"DICTSETREF"},{min:15995904,max:15996160,name:"DICTISET"},{min:15996160,max:15996416,name:"DICTISETREF"},{min:15996416,max:15996672,name:"DICTUSET"},{min:15996672,max:15996928,name:"DICTUSETREF"},{min:15997440,max:15997696,name:"DICTSETGET"},{min:15997696,max:15997952,name:"DICTSETGETREF"},{min:15997952,max:15998208,name:"DICTISETGET"},{min:15998208,max:15998464,name:"DICTISETGETREF"},{min:15998464,max:15998720,name:"DICTUSETGET"},{min:15998720,max:15998976,name:"DICTUSETGETREF"},{min:15999488,max:15999744,name:"DICTREPLACE"},{min:15999744,max:16e6,name:"DICTREPLACEREF"},{min:16e6,max:16000256,name:"DICTIREPLACE"},{min:16000256,max:16000512,name:"DICTIREPLACEREF"},{min:16000512,max:16000768,name:"DICTUREPLACE"},{min:16000768,max:16001024,name:"DICTUREPLACEREF"},{min:16001536,max:16001792,name:"DICTREPLACEGET"},{min:16001792,max:16002048,name:"DICTREPLACEGETREF"},{min:16002048,max:16002304,name:"DICTIREPLACEGET"},{min:16002304,max:16002560,name:"DICTIREPLACEGETREF"},{min:16002560,max:16002816,name:"DICTUREPLACEGET"},{min:16002816,max:16003072,name:"DICTUREPLACEGETREF"},{min:16003584,max:16003840,name:"DICTADD"},{min:16003840,max:16004096,name:"DICTADDREF"},{min:16004096,max:16004352,name:"DICTIADD"},{min:16004352,max:16004608,name:"DICTIADDREF"},{min:16004608,max:16004864,name:"DICTUADD"},{min:16004864,max:16005120,name:"DICTUADDREF"},{min:16005632,max:16005888,name:"DICTADDGET"},{min:16005888,max:16006144,name:"DICTADDGETREF"},{min:16006144,max:16006400,name:"DICTIADDGET"},{min:16006400,max:16006656,name:"DICTIADDGETREF"},{min:16006656,max:16006912,name:"DICTUADDGET"},{min:16006912,max:16007168,name:"DICTUADDGETREF"},{min:16015872,max:16016128,name:"DICTDELGET"},{min:16016128,max:16016384,name:"DICTDELGETREF"},{min:16016384,max:16016640,name:"DICTIDELGET"},{min:16016640,max:16016896,name:"DICTIDELGETREF"},{min:16016896,max:16017152,name:"DICTUDELGET"},{min:16017152,max:16017408,name:"DICTUDELGETREF"},{min:16024064,max:16024320,name:"DICTMIN"},{min:16024320,max:16024576,name:"DICTMINREF"},{min:16024576,max:16024832,name:"DICTIMIN"},{min:16024832,max:16025088,name:"DICTIMINREF"},{min:16025088,max:16025344,name:"DICTUMIN"},{min:16025344,max:16025600,name:"DICTUMINREF"},{min:16026112,max:16026368,name:"DICTMAX"},{min:16026368,max:16026624,name:"DICTMAXREF"},{min:16026624,max:16026880,name:"DICTIMAX"},{min:16026880,max:16027136,name:"DICTIMAXREF"},{min:16027136,max:16027392,name:"DICTUMAX"},{min:16027392,max:16027648,name:"DICTUMAXREF"},{min:16028160,max:16028416,name:"DICTREMMIN"},{min:16028416,max:16028672,name:"DICTREMMINREF"},{min:16028672,max:16028928,name:"DICTIREMMIN"},{min:16028928,max:16029184,name:"DICTIREMMINREF"},{min:16029184,max:16029440,name:"DICTUREMMIN"},{min:16029440,max:16029696,name:"DICTUREMMINREF"},{min:16030208,max:16030464,name:"DICTREMMAX"},{min:16030464,max:16030720,name:"DICTREMMAXREF"},{min:16030720,max:16030976,name:"DICTIREMMAX"},{min:16030976,max:16031232,name:"DICTIREMMAXREF"},{min:16031232,max:16031488,name:"DICTUREMMAX"},{min:16031488,max:16031744,name:"DICTUREMMAXREF"},{min:16007424,max:16007680,name:"DICTSETB"},{min:16007680,max:16007936,name:"DICTISETB"},{min:16007936,max:16008192,name:"DICTUSETB"},{min:16008448,max:16008704,name:"DICTSETGETB"},{min:16008704,max:16008960,name:"DICTISETGETB"},{min:16008960,max:16009216,name:"DICTUSETGETB"},{min:16009472,max:16009728,name:"DICTREPLACEB"},{min:16009728,max:16009984,name:"DICTIREPLACEB"},{min:16009984,max:16010240,name:"DICTUREPLACEB"},{min:16010496,max:16010752,name:"DICTREPLACEGETB"},{min:16010752,max:16011008,name:"DICTIREPLACEGETB"},{min:16011008,max:16011264,name:"DICTUREPLACEGETB"},{min:16011520,max:16011776,name:"DICTADDB"},{min:16011776,max:16012032,name:"DICTIADDB"},{min:16012032,max:16012288,name:"DICTUADDB"},{min:16012544,max:16012800,name:"DICTADDGETB"},{min:16012800,max:16013056,name:"DICTIADDGETB"},{min:16013056,max:16013312,name:"DICTUADDGETB"},{min:16013568,max:16013824,name:"DICTDEL"},{min:16013824,max:16014080,name:"DICTIDEL"},{min:16014080,max:16014336,name:"DICTUDEL"},{min:16017664,max:16017920,name:"DICTGETOPTREF"},{min:16017920,max:16018176,name:"DICTIGETOPTREF"},{min:16018176,max:16018432,name:"DICTUGETOPTREF"},{min:16018688,max:16018944,name:"DICTSETGETOPTREF"},{min:16018944,max:16019200,name:"DICTISETGETOPTREF"},{min:16019200,max:16019456,name:"DICTUSETGETOPTREF"},{min:16036096,max:16036352,name:"SUBDICTGET"},{min:16036352,max:16036608,name:"SUBDICTIGET"},{min:16036608,max:16036864,name:"SUBDICTUGET"},{min:16037120,max:16037376,name:"SUBDICTRPGET"},{min:16037376,max:16037632,name:"SUBDICTIRPGET"},{min:16037632,max:16037888,name:"SUBDICTURPGET"},{min:15921152,max:15921408,name:"THROWANY"},{min:15921408,max:15921664,name:"THROWARGANY"},{min:15922176,max:15922432,name:"THROWANYIFNOT"},{min:15922432,max:15922688,name:"THROWARGANYIFNOT"},{min:16020480,max:16020736,name:"DICTGETNEXT"},{min:16020736,max:16020992,name:"DICTGETNEXTEQ"},{min:16020992,max:16021248,name:"DICTGETPREV"},{min:16021248,max:16021504,name:"DICTGETPREVEQ"},{min:16021504,max:16021760,name:"DICTIGETNEXT"},{min:16021760,max:16022016,name:"DICTIGETNEXTEQ"},{min:16022016,max:16022272,name:"DICTIGETPREV"},{min:16022272,max:16022528,name:"DICTIGETPREVEQ"},{min:16022528,max:16022784,name:"DICTUGETNEXT"},{min:16022784,max:16023040,name:"DICTUGETNEXTEQ"},{min:16023040,max:16023296,name:"DICTUGETPREV"},{min:16023296,max:16023552,name:"DICTUGETPREVEQ"},{min:10878976,max:10944512,name:"ADDINT"},{min:10944512,max:11010048,name:"MULINT"},{min:12035584,max:12035840,name:"QADDINT"},{min:12035840,max:12036096,name:"QMULINT"},{min:12582912,max:12648448,name:"EQINT"},{min:12648448,max:12713984,name:"LESSINT"},{min:12713984,max:12779520,name:"GTINT"},{min:12779520,max:12845056,name:"NEQINT"},{min:12042240,max:12042496,name:"QEQINT"},{min:12042496,max:12042752,name:"QLESSINT"},{min:12042752,max:12043008,name:"QGTINT"},{min:12043008,max:12043264,name:"QNEQINT"},{min:8650752,max:8716288,name:"PUSHPOW2DEC"},{min:8716288,max:8781824,name:"PUSHNEGPOW2"},{min:11796480,max:11862016,name:"FITS"},{min:11862016,max:11927552,name:"UFITS"},{min:12039168,max:12039424,name:"QFITS"},{min:12039424,max:12039680,name:"QUFITS"},{min:15590144,max:15590400,name:"SETCONTCTRMANY"},{min:14366208,max:14366464,name:"CALLCCARGS"},{min:15925248,max:15990784,name:"TRYARGS"},{min:14109696,max:14110720,name:"PLDREFIDX"},{min:14116864,max:14117888,name:"CHASHI"},{min:14117888,max:14118912,name:"CDEPTHI"},{min:15810560,max:15826944,name:"JMPDICT"},{min:15826944,max:15843328,name:"PREPAREDICT"},{min:15910912,max:15912960,name:"THROWARG"},{min:15915008,max:15917056,name:"THROWARGIF"},{min:15919104,max:15921152,name:"THROWARGIFNOT"},{min:14356480,max:14360576,name:"JMPXARGS"},{min:14360576,max:14364672,name:"RETARGS"},{min:15532032,max:15536128,name:"RETURNARGS"},{min:6225920,max:6230016,name:"BLKDROP"},{min:7274496,max:7278592,name:"TUPLE"},{min:7278592,max:7282688,name:"INDEX"},{min:7282688,max:7286784,name:"UNTUPLE"},{min:7286784,max:7290880,name:"UNPACKFIRST"},{min:7290880,max:7294976,name:"EXPLODE"},{min:7294976,max:7299072,name:"SETINDEX"},{min:7299072,max:7303168,name:"INDEXQ"},{min:7303168,max:7307264,name:"SETINDEXQ"},{min:5509120,max:5513216,name:"XC2PU"},{min:5517312,max:5521408,name:"XCPU2"},{min:5533696,max:5537792,name:"PUSH3"},{min:5242880,max:5308416,name:"XCHG2"},{min:5308416,max:5373952,name:"XCPU"},{min:5439488,max:5505024,name:"PUSH2"},{min:5373952,max:5439488,name:"PUXC"},{min:5513216,max:5517312,name:"XCPUXC"},{min:5521408,max:5525504,name:"PUXC2"},{min:5525504,max:5529600,name:"PUXCPU"},{min:5529600,max:5533696,name:"PU2XC"},{min:5570560,max:5636096,name:"BLKSWAP"},{min:6160384,max:6225920,name:"REVERSE"},{min:15466496,max:15532032,name:"SETCONTARGS"},{min:15597568,max:15663104,name:"BLESSARGS"},{min:13568512,max:13568768,name:"STIR"},{min:13568768,max:13569024,name:"STUR"},{min:13569024,max:13569280,name:"STIQ"},{min:13569280,max:13569536,name:"STUQ"},{min:13569536,max:13569792,name:"STIRQ"},{min:13569792,max:13570048,name:"STURQ"},{min:14092800,max:14093056,name:"PLDI"},{min:14093056,max:14093312,name:"PLDU"},{min:14093312,max:14093568,name:"LDIQ"},{min:14093568,max:14093824,name:"LDUQ"},{min:14093824,max:14094080,name:"PLDIQ"},{min:14094080,max:14094336,name:"PLDUQ"},{min:14094336,max:14096384,name:"PLDUZ"},{min:14097664,max:14097920,name:"PLDSLICE"},{min:14097920,max:14098176,name:"LDSLICEQ"},{min:14098176,max:14098432,name:"PLDSLICEQ"},{min:14909440,max:14917632,name:"IFBITJMP"},{min:14917632,max:14925824,name:"IFNBITJMP"},{min:7319552,max:7323648,name:"INDEX2"},{min:7323648,max:7340032,name:"INDEX3"},{min:8585216,max:8650496,name:"PUSHPOW2"},{min:6230016,max:6291456,name:"BLKPUSH"},{min:7081984,max:7143424,name:"BLKDROP2"},{min:16269568,max:16277504,name:"GETGLOB"},{min:16277760,max:16285696,name:"SETGLOB"},{min:16261120,max:16261888,name:"GETPARAM"},{min:8912896,max:8978432,name:"PUSHREF"},{min:8978432,max:9043968,name:"PUSHREFSLICE"},{min:9043968,max:9109504,name:"PUSHREFCONT"},{min:14367744,max:14368e3,name:"CALLREF"},{min:14368e3,max:14368256,name:"JMPREF"},{min:14368256,max:14368512,name:"JMPREFDATA"},{min:14876672,max:14876928,name:"IFREF"},{min:14876928,max:14877184,name:"IFNOTREF"},{min:14877184,max:14877440,name:"IFJMPREF"},{min:14877440,max:14877696,name:"IFNOTJMPREF"},{min:1488e4,max:14880256,name:"IFREFELSE"},{min:14880256,max:14880512,name:"IFELSEREF"},{min:14880512,max:14880768,name:"IFREFELSEREF"},{min:14925824,max:14934016,name:"IFBITJMPREF"},{min:14934016,max:14942208,name:"IFNBITJMPREF"},{min:16032768,max:16033792,name:"DICTPUSHCONST"},{min:16034816,max:16035840,name:"PFXDICTSWITCH"},{min:14099968,max:14100224,name:"SDBEGINSX"},{min:14100224,max:14100480,name:"SDBEGINSXQ"},{min:14100480,max:14101504,name:"SDBEGINS"},{min:14101504,max:14102528,name:"SDBEGINSQ"},{min:13574144,max:13574400,name:"STREFCONST"},{min:13574400,max:13574656,name:"STREF2CONST"},{min:15921664,max:15921920,name:"THROWANYIF"},{min:15921920,max:15922176,name:"THROWARGANYIF"},{min:16707584,max:16711680,name:"DEBUGSTR"},{min:15556608,max:15558656,name:"SETCONTCTR"},{min:15560704,max:15562752,name:"SETRETCTR"},{min:15564800,max:15566848,name:"SETALTCTR"},{min:15568896,max:15570944,name:"POPSAVE"},{min:15572992,max:15575040,name:"SAVECTR"},{min:15577088,max:15579136,name:"SAVEALTCTR"},{min:15581184,max:15583232,name:"SAVEBOTHCTR"},{min:14368768,max:14372864,name:"RUNVM"},{min:5898240,max:5963776,name:"SWAP2"},{min:5963776,max:6029312,name:"DROP2"},{min:6029312,max:6094848,name:"DUP2"},{min:6094848,max:6160384,name:"OVER2"},{min:11087872,max:11088128,name:"ADDRSHIFT_MOD"},{min:11088128,max:11088384,name:"ADDRSHIFTR_MOD"},{min:11088384,max:11088640,name:"ADDRSHIFTC_MOD"},{min:11088896,max:11089152,name:"RSHIFT_"},{min:11089152,max:11089408,name:"RSHIFTR_"},{min:11089408,max:11089664,name:"RSHIFTC_"},{min:11089920,max:11090176,name:"MODPOW2_"},{min:11090176,max:11090432,name:"MODPOW2R_"},{min:11090432,max:11090688,name:"MODPOW2C_"},{min:11090944,max:11091200,name:"RSHIFT_MOD"},{min:11091200,max:11091456,name:"RSHIFTR_MOD"},{min:11091456,max:11091712,name:"RSHIFTC_MOD"},{min:11120640,max:11120896,name:"MULADDRSHIFT_MOD"},{min:11120896,max:11121152,name:"MULADDRSHIFTR_MOD"},{min:11121152,max:11121408,name:"MULADDRSHIFTC_MOD"},{min:11121664,max:11121920,name:"MULRSHIFT_"},{min:11121920,max:11122176,name:"MULRSHIFTR_"},{min:11122176,max:11122432,name:"MULRSHIFTC_"},{min:11122688,max:11122944,name:"MULMODPOW2_"},{min:11122944,max:11123200,name:"MULMODPOW2R_"},{min:11123200,max:11123456,name:"MULMODPOW2C_"},{min:11123712,max:11123968,name:"MULRSHIFT_MOD"},{min:11123968,max:11124224,name:"MULRSHIFTR_MOD"},{min:11124224,max:11124480,name:"MULRSHIFTC_MOD"},{min:11128832,max:11129088,name:"LSHIFT_ADDDIVMOD"},{min:11129088,max:11129344,name:"LSHIFT_ADDDIVMODR"},{min:11129344,max:11129600,name:"LSHIFT_ADDDIVMODC"},{min:11129856,max:11130112,name:"LSHIFT_DIV"},{min:11130112,max:11130368,name:"LSHIFT_DIVR"},{min:11130368,max:11130624,name:"LSHIFT_DIVC"},{min:11130880,max:11131136,name:"LSHIFT_MOD"},{min:11131136,max:11131392,name:"LSHIFT_MODR"},{min:11131392,max:11131648,name:"LSHIFT_MODC"},{min:11131904,max:11132160,name:"LSHIFT_DIVMOD"},{min:11132160,max:11132416,name:"LSHIFT_DIVMODR"},{min:11132416,max:11132672,name:"LSHIFT_DIVMODC"},{min:16319488,max:16319744,name:"HASHEXT"},{min:16319744,max:1632e4,name:"HASHEXTR"},{min:1632e4,max:16320256,name:"HASHEXTA"},{min:16320256,max:16320512,name:"HASHEXTAR"},{min:13369344,max:13434880,name:"STREF"},{min:13570048,max:13570304,name:"STREF_ALT"},{min:13500416,max:13565952,name:"STSLICE"},{min:13570560,max:13570816,name:"STSLICE_ALT"},{min:4194304,max:5242880,name:"XCHG3"},{min:5505024,max:5509120,name:"XCHG3_ALT"},{min:13238272,max:13303808,name:"STI"},{min:13568e3,max:13568256,name:"STI_ALT"},{min:13303808,max:13369344,name:"STU"},{min:13568256,max:13568512,name:"STU_ALT"},{min:13762560,max:13828096,name:"LDI"},{min:14092288,max:14092544,name:"LDI_ALT"},{min:13828096,max:13893632,name:"LDU"},{min:14092544,max:14092800,name:"LDU_ALT"},{min:14024704,max:14090240,name:"LDSLICE"},{min:14097408,max:14097664,name:"LDSLICE_ALT"},{min:11272192,max:11337728,name:"LSHIFT_VAR"},{min:11141120,max:11206656,name:"LSHIFT"},{min:12037120,max:12037376,name:"QLSHIFT_VAR"},{min:12036608,max:12036864,name:"QLSHIFT"},{min:13580544,max:13580800,name:"BCHKBITS_VAR"},{min:13580288,max:13580544,name:"BCHKBITS"},{min:13581568,max:13581824,name:"BCHKBITSQ_VAR"},{min:13581312,max:13581568,name:"BCHKBITSQ"},{min:11337728,max:11403264,name:"RSHIFT_VAR"},{min:11206656,max:11272192,name:"RSHIFT"},{min:11084800,max:11085056,name:"RSHIFT_ALT"},{min:12037376,max:12037632,name:"QRSHIFT_VAR"},{min:12036864,max:12037120,name:"QRSHIFT"},{min:12036388,max:12036389,name:"QRSHIFT_ALT"},{min:15728640,max:15794176,name:"CALLDICT"},{min:15794176,max:15810560,name:"CALLDICT_LONG"},{min:15859712,max:15876096,name:"THROW_SHORT"},{min:15908864,max:15910912,name:"THROW"},{min:15876096,max:15892480,name:"THROWIF_SHORT"},{min:15912960,max:15915008,name:"THROWIF"},{min:15892480,max:15908864,name:"THROWIFNOT_SHORT"},{min:15917056,max:15919104,name:"THROWIFNOT"},{min:7340032,max:8388608,name:"PUSHINT_4"},{min:8388608,max:8454144,name:"PUSHINT_8"},{min:8454144,max:8519680,name:"PUSHINT_16"},{min:8519680,max:8583168,name:"PUSHINT_LONG"},{min:1114112,max:1179648,name:"XCHG_01_LONG"},{min:131072,max:1048576,name:"XCHG_0I"},{min:1048576,max:1114112,name:"XCHG_IJ"},{min:1179648,max:2097152,name:"XCHG_1I"},{min:16646144,max:16646400,name:"DUMPSTK"},{min:16646400,max:16651264,name:"DEBUG"},{min:16651264,max:16651520,name:"STRDUMP"},{min:16651520,max:16654336,name:"DEBUG_1"},{min:16654336,max:16658432,name:"DUMP"},{min:16658432,max:16707584,name:"DEBUG_2"},{min:15548416,max:15550464,name:"PUSHCTR"},{min:2228224,max:3145728,name:"PUSH"},{min:5636096,max:5701632,name:"PUSH_LONG"},{min:15552512,max:15554560,name:"POPCTR"},{min:3276800,max:4194304,name:"POP"},{min:5701632,max:5767168,name:"POP_LONG"},{min:14352384,max:14356480,name:"CALLXARGS"},{min:14286848,max:14352384,name:"CALLXARGS_1"},{min:9109504,max:9175040,name:"PUSHSLICE"},{min:9175040,max:9240576,name:"PUSHSLICE_REFS"},{min:9240576,max:9281536,name:"PUSHSLICE_LONG"},{min:9306112,max:9437184,name:"PUSHCONT"},{min:9437184,max:10485760,name:"PUSHCONT_SHORT"},{min:13598720,max:13631488,name:"STSLICECONST"},{min:16711680,max:16773120,name:"SETCP"},{min:16773120,max:16773376,name:"SETCPX"},{min:16773376,max:16777216,name:"SETCP_SHORT"},{min:16340224,max:16340480,name:"DEBUGMARK"}]),wn}var CC;function bn(){return CC||(CC=1,function(r){var G=xe&&xe.__createBinding||(Object.create?function(m,H,$,J){J===void 0&&(J=$);var re=Object.getOwnPropertyDescriptor(H,$);(!re||("get"in re?!H.__esModule:re.writable||re.configurable))&&(re={enumerable:!0,get:function(){return H[$]}}),Object.defineProperty(m,J,re)}:function(m,H,$,J){J===void 0&&(J=$),m[J]=H[$]}),_=xe&&xe.__setModuleDefault||(Object.create?function(m,H){Object.defineProperty(m,"default",{enumerable:!0,value:H})}:function(m,H){m.default=H}),S=xe&&xe.__importStar||function(){var m=function(H){return m=Object.getOwnPropertyNames||function($){var J=[];for(var re in $)Object.prototype.hasOwnProperty.call($,re)&&(J[J.length]=re);return J},m(H)};return function(H){if(H&&H.__esModule)return H;var $={};if(H!=null)for(var J=m(H),re=0;re<J.length;re++)J[re]!=="default"&&G($,H,J[re]);return _($,H),$}}();Object.defineProperty(r,"__esModule",{value:!0}),r.instructionNameForOpcode=r.exotic=r.LibraryCell=r.DefaultExoticCell=r.exoticCellBody=r.boc=r.bin=r.hex=r.PSEUDO_EXOTIC=r.PSEUDO_PUSHREF=r.PSEUDO_PUSHSLICE=r.hash=r.delta=r.setcpArg=r.s1=r.minusOne=r.runvmArg=r.largeInt=r.tinyInt=r.plduzArg=r.control=r.refs=r.debugstr=r.dictpush=r.dictionary=r.dictMap=r.decompiledDict=r.rawDict=r.decompiledMethod=r.slice=r.inlineCodeSlice=r.refCodeSlice=r.codeSlice=r.decompiledCode=r.code=r.rawCode=r.int=r.Loc=r.Hash=void 0,r.uint=K;const t=Ke(),e=S(Sr()),a=vu(),C=xn(),u=dA(),o=Sr(),A=FA();var c;(function(m){m[m.SHA256=0]="SHA256",m[m.SHA512=1]="SHA512",m[m.BLAKE2B=2]="BLAKE2B",m[m.KECCAK256=3]="KECCAK256",m[m.KECCAK512=4]="KECCAK512"})(c||(r.Hash=c={}));const l=(m,H)=>({file:m,line:H});r.Loc=l;function K(m){return{store:(H,$)=>H.storeUint($,m),load:H=>H.loadUint(m)}}const d=m=>({store:(H,$)=>H.storeInt($,m),load:H=>H.loadInt(m)});r.int=d;const f=m=>({$:"Raw",slice:m});r.rawCode=f;const p=m=>({$:"Instructions",instructions:m});r.code=p;const v=m=>({$:"Instructions",instructions:m});r.decompiledCode=v;const B=(m,H)=>m.instructions.map(({instr:$,offset:J,debugSection:re})=>({instr:$,offset:J+H.bits,debugSection:re})),F=(m,H)=>({store:($,J)=>{if(J.$==="Instructions"){const[Re,oe]=(0,a.compileCellWithMapping)(J.instructions),Oe=Re.asSlice();m.store($,Oe.remainingRefs);const ge=Oe.remainingBits,de=Math.ceil(ge/8);H.store($,de);const Rr=B(oe,$);$.pushInstructions(...Rr),$.pushMappings(...oe.subMappings),$.pushDictionaryInfo(...oe.dictionaryInfo),$.storeSlice(Oe);return}const re=J.slice;m.store($,re.remainingRefs);const De=re.remainingBits,Ee=Math.ceil(De/8);H.store($,Ee),$.storeSlice(re)},load:$=>{const J=m.load($),De=H.load($)*8,Ee=$.loadBits(De),Re=new C.CodeBuilder;Re.storeBits(Ee);for(let Oe=0;Oe<J;Oe++)Re.storeRef($.loadRef());const oe=Re.asSlice();try{return(0,r.decompiledCode)((0,a.codeType)().load(oe))}catch{}return(0,r.rawCode)(oe)}});r.codeSlice=F,r.refCodeSlice={store:(m,H)=>{if(H.$==="Instructions"){const[$,J]=(0,a.compileCellWithMapping)(H.instructions);m.storeRef($),m.pushMappings(J);return}m.storeRef(H.slice.asCell())},load:m=>{const H=m.loadRef();try{return(0,r.decompiledCode)(N(H))}catch{}return(0,r.rawCode)(H.beginParse(!0))}};const N=m=>m.isExotic?[e.PSEUDO_EXOTIC(r.exotic.load(m.beginParse(!0)))]:(0,a.codeType)().load(m.asSlice()),P=m=>({store:(H,$)=>{if($.$==="Raw"){const J=$.slice,re=J.remainingBits,De=Math.ceil(re/8);m.store(H,De),H.storeSlice(J)}else{const[J,re]=(0,a.compileCellWithMapping)($.instructions),De=J.asSlice(),Ee=De.remainingBits,Re=Math.ceil(Ee/8);m.store(H,Re);const oe=B(re,H);H.pushInstructions(...oe),H.pushMappings(...re.subMappings),H.pushDictionaryInfo(...re.dictionaryInfo),H.storeSlice(De)}},load:H=>{const J=m.load(H)*8,re=H.loadBits(J),De=new C.CodeBuilder;De.storeBits(re);const Ee=De.asSlice();try{return(0,r.decompiledCode)((0,a.codeType)().load(Ee))}catch{}return(0,r.rawCode)(Ee)}});r.inlineCodeSlice=P;const O=(m,H,$)=>({store:(J,re)=>{typeof m!="number"&&m.store(J,re.remainingRefs);const De=re.remainingBits+1,Ee=Math.ceil((De-$)/8);H.store(J,Ee),J.storeSlice(re),J.storeUint(1,1);const Re=Ee*8+$;J.storeUint(0,Re-De)},load:J=>{const re=typeof m=="number"?m:m.load(J),Ee=H.load(J)*8+$,Re=J.loadBits(Ee);let oe=0;for(let de=Ee-1;de>=0;de--)if(Re.at(de)){oe=de;break}const Oe=Re.substring(0,oe),ge=new C.CodeBuilder;ge.storeBits(Oe);for(let de=0;de<re;de++)ge.storeRef(J.loadRef());return ge.asSlice()}});r.slice=O;const Q=(m,H)=>({$:"DecompiledMethod",id:m,instructions:H});r.decompiledMethod=Q;const V=m=>({$:"RawDict",slice:m});r.rawDict=V;const w=m=>({$:"DecompiledDict",methods:m});r.decompiledDict=w;const b=m=>(0,r.decompiledDict)([...m].map(([H,$])=>({$:"DecompiledMethod",id:H,instructions:$})));r.dictMap=b;const j={serialize:(m,H)=>{H.pushDictionaryInfo({builder:H,childCell:m,offset:H.bits}),H.storeBits(m.bits);for(const $ of m.refs)H.storeRef($)},parse:m=>m.clone(!1).asCell()},ne=m=>({load:H=>{const $=H.asCell(),re=[...u.Dictionary.loadDirect(u.Dictionary.Keys.Int(m),j,$)].map(([De,Ee])=>(0,r.decompiledMethod)(De,(0,a.codeType)().load(Ee.asSlice())));return(0,r.decompiledDict)(re)},store:(H,$)=>{if($.$==="RawDict"&&H.storeRef($.slice.asCell()),$.$==="DecompiledDict"){const J=[],re=u.Dictionary.empty(u.Dictionary.Keys.Int(m),j);for(const Ee of $.methods){const{id:Re,instructions:oe}=Ee,[Oe,ge]=(0,a.compileCellWithMapping)(oe);J.push(ge),re.set(Re,Oe)}H.pushMappings(...J);const De=new C.CodeBuilder;H.storeRef(De.storeDictionaryDirect(re).endCell()),H.pushDictionaryInfo(...De.getDictionaryInfo())}}});r.dictionary=ne,r.dictpush={load(m){const H=m.loadUint(10),$=m.loadRef();if($.bits.length===0)throw new Error("unexpected empty dictionary");try{const J=(0,r.dictionary)(H).load($.asSlice());return[H,J]}catch{}return[H,(0,r.rawDict)($.beginParse(!0))]},store(m,[H,$]){m.storeUint(H,10),(0,r.dictionary)(H).store(m,$)}},r.debugstr={load(m){const $=(K(4).load(m)+1)*8,J=m.loadBits($),re=new C.CodeBuilder;return re.storeBits(J),re.asSlice()},store(m,H){const $=H.remainingBits;if($<8)throw new Error(`DEBUGSTR slice should be larger that 8 bits, but ${$}-bit slice given`);if($%8!==0)throw new Error(`DEBUGSTR slice should be byte aligned, but ${$}-bit slice given`);const J=Math.ceil(($-8)/8);m.storeUint(J,4),m.storeSlice(H)}};const Ie=m=>m;r.refs=Ie;const Pe=K(3),Se=K(4),Ce=K(5),h=K(8),Z=K(12);r.control={store:(m,H)=>{if(H===6)throw new Error("c6 doesn't exist");Se.store(m,H)},load:m=>{const H=Se.load(m);if(H===6)throw new Error("Invalid opcode: c6 doesn't exist");return H}},r.plduzArg={store:(m,H)=>{Pe.store(m,(H>>5)-1&7)},load:m=>(Pe.load(m)&7)+1<<5},r.tinyInt={store:(m,H)=>{if(H<-5||H>10)throw new Error(`Number must be in range [-5, 10]: ${H}`);Se.store(m,H+16&15)},load:m=>(Se.load(m)+5&15)-5},r.largeInt={store:(m,H)=>{const $=H===0n?1:H.toString(2).length+(H<0n?0:1),J=Math.trunc(($+7)/8)-2;if(J<=0||J>=32){m.storeUint(H,24);return}const re=Math.ceil(($-19)/8);Ce.store(m,re);const De=8*re+19;m.storeInt(H,De)},load:m=>m.loadIntBig(3+((Ce.load(m)&31)+2)*8)},r.runvmArg={store:(m,H)=>{Z.store(m,H)},load:m=>Z.load(m)},r.minusOne={store:(m,H)=>{if(H!==-1)throw new Error("This opcode only takes -1")},load:m=>-1},r.s1={store:(m,H)=>{if(H!==1)throw new Error("This opcode only takes s1")},load:m=>1},r.setcpArg={store:(m,H)=>{if(H<-15||H>239)throw new Error(`Number must be in range [-15, 239]: ${H}`);Se.store(m,H+16&255)},load:m=>(Se.load(m)+16&255)-16};const k=(m,H)=>({store:($,J)=>{H.store($,J-m)},load:$=>H.load($)+m});r.delta=k,r.hash={store:(m,H)=>{h.store(m,H)},load:m=>{const H=h.load(m);if(!(H in c))throw new Error("Wrong hash");return H}},r.PSEUDO_PUSHSLICE={load:m=>{throw new Error("unexpected PSEUDO_PUSHSLICE")},store:(m,H)=>{m.storeSlice(H.arg0)}},r.PSEUDO_PUSHREF={load:m=>{throw new Error("unexpected PSEUDO_PUSHREF")},store:(m,H)=>{if(H.arg0.$==="Raw")m.storeRef(H.arg0.slice.asCell());else{const[$,J]=(0,a.compileCellWithMapping)(H.arg0.instructions);J.instructions.splice(0,0,{offset:0,instr:(0,o.JMPREF)(H.arg0,H.loc),debugSection:-1}),m.storeRefWithMapping([$,J])}}},r.PSEUDO_EXOTIC={load:m=>{throw new Error("unexpected PSEUDO_EXOTIC")},store:(m,H)=>{r.exotic.store(m,H.arg0)}};const Y=m=>{const H=new C.CodeBuilder;let $="";for(const J of m){if(J==="_")break;$+=Number.parseInt(J,16).toString(2).padStart(4,"0")}m.endsWith("_")&&($=$.replace(/10*$/,""));for(const J of $)H.storeBit(J==="1");return H.asSlice()};r.hex=Y;const q=m=>{const H=new C.CodeBuilder;for(const $ of m)H.storeBit($==="1");return H.asSlice()};r.bin=q;const ae=m=>t.Cell.fromHex(m).asSlice();r.boc=ae;const te=m=>{const H=(0,r.hex)(m),$=H.loadBits(H.remainingBits);return new t.Cell({exotic:!0,bits:$,refs:[]})};r.exoticCellBody=te;const Ae=m=>({$:"DefaultExoticCell",cell:m});r.DefaultExoticCell=Ae;const Fe=m=>({$:"LibraryCell",data:m});r.LibraryCell=Fe,r.exotic={load:m=>{const H=m.asCell();return m.loadUint(8)===2?(0,r.LibraryCell)(m):(0,r.DefaultExoticCell)(H)},store:(m,H)=>{if(H.$==="DefaultExoticCell"){m.storeSlice(H.cell.asSlice());return}m.storeUint(2,8),m.storeSlice(H.data)}};const Ge=m=>A.rangeToName.find(H=>m>=H.min&&m<H.max)?.name;r.instructionNameForOpcode=Ge}(xe)),xe}var er={},E={},AC;function Ju(){if(AC)return E;AC=1;var r=E&&E.__createBinding||(Object.create?function(e,a,C,u){u===void 0&&(u=C);var o=Object.getOwnPropertyDescriptor(a,C);(!o||("get"in o?!a.__esModule:o.writable||o.configurable))&&(o={enumerable:!0,get:function(){return a[C]}}),Object.defineProperty(e,u,o)}:function(e,a,C,u){u===void 0&&(u=C),e[u]=a[C]}),G=E&&E.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:!0,value:a})}:function(e,a){e.default=a}),_=E&&E.__importStar||function(){var e=function(a){return e=Object.getOwnPropertyNames||function(C){var u=[];for(var o in C)Object.prototype.hasOwnProperty.call(C,o)&&(u[u.length]=o);return u},e(a)};return function(a){if(a&&a.__esModule)return a;var C={};if(a!=null)for(var u=e(a),o=0;o<u.length;o++)u[o]!=="default"&&r(C,a,u[o]);return G(C,a),C}}();Object.defineProperty(E,"__esModule",{value:!0}),E.ISNAN=E.CMP=E.GEQ=E.NEQ=E.GREATER=E.LEQ=E.EQUAL=E.LESS=E.SGN=E.QABS=E.QMINMAX=E.QMAX=E.QMIN=E.QUBITSIZE=E.QBITSIZE=E.QUFITSX=E.QFITSX=E.QNOT=E.QXOR=E.QOR=E.QAND=E.QPOW2=E.QMUL=E.QDEC=E.QINC=E.QNEGATE=E.QSUBR=E.QSUB=E.QADD=E.ABS=E.MINMAX=E.MAX=E.MIN=E.UBITSIZE=E.BITSIZE=E.UFITSX=E.FITSX=E.NOT=E.XOR=E.OR=E.AND=E.POW2=E.MUL=E.DEC=E.INC=E.NEGATE=E.SUBR=E.SUB=E.ADD=E.PUSHNAN=void 0,E.BREMBITS=E.BBITREFS=E.BREFS=E.BBITS=E.BDEPTH=E.ENDXC=E.STBRQ=E.STSLICERQ=E.STBREFRQ=E.STREFRQ=E.STBQ=E.STSLICEQ=E.STBREFQ=E.STREFQ=E.STBR=E.STSLICER=E.STBREFR=E.STREFR=E.STB=E.STBREF=E.ENDCST=E.ENDC=E.NEWC=E.SDCNTTRAIL1=E.SDCNTTRAIL0=E.SDCNTLEAD1=E.SDCNTLEAD0=E.SDPSFXREV=E.SDPSFX=E.SDSFXREV=E.SDSFX=E.SDPPFXREV=E.SDPPFX=E.SDPFXREV=E.SDPFX=E.SDEQ=E.SDLEXCMP=E.SDFIRST=E.SREMPTY=E.SDEMPTY=E.SEMPTY=E.QCMP=E.QGEQ=E.QNEQ=E.QGREATER=E.QLEQ=E.QEQUAL=E.QLESS=E.QSGN=E.CHKNAN=void 0,E.RET=E.JMPX=E.EXECUTE=E.CDEPTHIX=E.CHASHIX=E.CLEVELMASK=E.CLEVEL=E.CDEPTH=E.SDEPTH=E.LDSAME=E.LDONES=E.LDZEROES=E.SBITREFS=E.SREFS=E.SBITS=E.PLDREFVAR=E.SCHKBITREFSQ=E.SCHKREFSQ=E.SCHKBITSQ=E.SCHKBITREFS=E.SCHKREFS=E.SCHKBITS=E.XLOADQ=E.XLOAD=E.XCTOS=E.SPLITQ=E.SPLIT=E.SUBSLICE=E.SSKIPLAST=E.SCUTLAST=E.SSKIPFIRST=E.SCUTFIRST=E.SDSUBSTR=E.SDSKIPLAST=E.SDCUTLAST=E.SDSKIPFIRST=E.SDCUTFIRST=E.LDREFRTOS=E.LDREF=E.ENDS=E.CTOS=E.STSAME=E.STONES=E.STZEROES=E.BCHKBITREFSQ=E.BCHKREFSQ=E.BCHKBITREFS=E.BCHKREFS=E.BREMBITREFS=E.BREMREFS=void 0,E.ATEXIT=E.COMPOSBOTH=E.BOOLOR=E.BOOLAND=E.SETCONTCTRMANYX=E.SETCONTCTRX=E.POPCTRX=E.PUSHCTRX=E.BLESSVARARGS=E.BLESS=E.SETNUMVARARGS=E.SETCONTVARARGS=E.RETURNVARARGS=E.AGAINENDBRK=E.AGAINBRK=E.WHILEENDBRK=E.WHILEBRK=E.UNTILENDBRK=E.UNTILBRK=E.REPEATENDBRK=E.REPEATBRK=E.AGAINEND=E.AGAIN=E.WHILEEND=E.WHILE=E.UNTILEND=E.UNTIL=E.REPEATEND=E.REPEAT=E.IFNOTRETALT=E.IFRETALT=E.CONDSELCHK=E.CONDSEL=E.IFELSE=E.IFNOTJMP=E.IFJMP=E.IFNOT=E.IF=E.IFNOTRET=E.IFRET=E.RUNVMX=E.RETDATA=E.CALLCCVARARGS=E.JMPXVARARGS=E.RETVARARGS=E.CALLXVARARGS=E.JMPXDATA=E.CALLCC=E.RETBOOL=E.RETALT=void 0,E.NOW=E.COMMIT=E.GASCONSUMED=E.SETGASLIMIT=E.ACCEPT=E.ONLYX=E.ONLYTOPX=E.CHKDEPTH=E.DEPTH=E.XCHGX=E.TUCK=E.DROPX=E.REVX=E.BLKSWX=E.ROLLREV=E.ROLL=E.PICK=E.ROTREV=E.ROT=E.NIP=E.DROP=E.OVER=E.DUP=E.SWAP=E.NOP=E.PFXDICTGETEXEC=E.PFXDICTGETJMP=E.PFXDICTGET=E.PFXDICTGETQ=E.PFXDICTDEL=E.PFXDICTADD=E.PFXDICTREPLACE=E.PFXDICTSET=E.PLDDICTQ=E.LDDICTQ=E.PLDDICT=E.LDDICT=E.PLDDICTS=E.LDDICTS=E.SKIPDICT=E.STDICT=E.TRY=E.SAMEALTSAVE=E.SAMEALT=E.BOOLEVAL=E.INVERT=E.THENRETALT=E.THENRET=E.SETEXITALT=E.ATEXITALT=void 0,E.RIST255_QADD=E.RIST255_QVALIDATE=E.RIST255_PUSHL=E.RIST255_MULBASE=E.RIST255_MUL=E.RIST255_SUB=E.RIST255_ADD=E.RIST255_VALIDATE=E.RIST255_FROMHASH=E.P256_CHKSIGNS=E.P256_CHKSIGNU=E.SECP256K1_XONLY_PUBKEY_TWEAK_ADD=E.ECRECOVER=E.CHKSIGNS=E.CHKSIGNU=E.SHA256U=E.HASHSU=E.HASHCU=E.ADDRAND=E.SETRAND=E.RAND=E.RANDU256=E.SETGLOBVAR=E.GETGLOBVAR=E.GETFORWARDFEESIMPLE=E.GETGASFEESIMPLE=E.GETORIGINALFWDFEE=E.GETPRECOMPILEDGAS=E.GETFORWARDFEE=E.GETSTORAGEFEE=E.GETGASFEE=E.GLOBALID=E.PREVMCBLOCKS_100=E.PREVKEYBLOCK=E.PREVMCBLOCKS=E.CONFIGOPTPARAM=E.CONFIGPARAM=E.CONFIGDICT=E.DUEPAYMENT=E.UNPACKEDCONFIGTUPLE=E.PREVBLOCKSINFOTUPLE=E.STORAGEFEES=E.INCOMINGVALUE=E.MYCODE=E.CONFIGROOT=E.MYADDR=E.BALANCE=E.RANDSEED=E.LTIME=E.BLOCKLT=void 0,E.RAWRESERVEX=E.RAWRESERVE=E.SENDRAWMSG=E.REWRITEVARADDRQ=E.REWRITEVARADDR=E.REWRITESTDADDRQ=E.REWRITESTDADDR=E.PARSEMSGADDRQ=E.PARSEMSGADDR=E.LDMSGADDRQ=E.LDMSGADDR=E.STVARINT32=E.STVARUINT32=E.LDVARINT32=E.LDVARUINT32=E.STVARINT16=E.STGRAMS=E.LDVARINT16=E.LDGRAMS=E.SDATASIZE=E.SDATASIZEQ=E.CDATASIZE=E.CDATASIZEQ=E.BLS_PUSHR=E.BLS_PAIRING=E.BLS_G2_ISZERO=E.BLS_G2_INGROUP=E.BLS_MAP_TO_G2=E.BLS_G2_ZERO=E.BLS_G2_MULTIEXP=E.BLS_G2_MUL=E.BLS_G2_NEG=E.BLS_G2_SUB=E.BLS_G2_ADD=E.BLS_G1_ISZERO=E.BLS_G1_INGROUP=E.BLS_MAP_TO_G1=E.BLS_G1_ZERO=E.BLS_G1_MULTIEXP=E.BLS_G1_MUL=E.BLS_G1_NEG=E.BLS_G1_SUB=E.BLS_G1_ADD=E.BLS_AGGREGATEVERIFY=E.BLS_FASTAGGREGATEVERIFY=E.BLS_AGGREGATE=E.BLS_VERIFY=E.RIST255_QMULBASE=E.RIST255_QMUL=E.RIST255_QSUB=void 0,E.QDIVMOD=E.QMODC=E.QMODR=E.QMOD=E.QDIVC=E.QDIVR=E.QDIV=E.QADDDIVMODC=E.QADDDIVMODR=E.QADDDIVMOD=E.DIVMODC=E.DIVMODR=E.DIVMOD=E.MODC=E.MODR=E.MOD=E.DIVC=E.DIVR=E.DIV=E.ADDDIVMODC=E.ADDDIVMODR=E.ADDDIVMOD=E.NULLROTRIFNOT2=E.NULLROTRIF2=E.NULLSWAPIFNOT2=E.NULLSWAPIF2=E.NULLROTRIFNOT=E.NULLROTRIF=E.NULLSWAPIFNOT=E.NULLSWAPIF=E.TPOP=E.TPUSH=E.LAST=E.ISTUPLE=E.QTLEN=E.TLEN=E.SETINDEXVARQ=E.INDEXVARQ=E.SETINDEXVAR=E.EXPLODEVAR=E.UNPACKFIRSTVAR=E.UNTUPLEVAR=E.INDEXVAR=E.TUPLEVAR=E.ISNULL=E.PUSHNULL=E.SENDMSG=E.CHANGELIB=E.SETLIBCODE=E.SETCODE=void 0,E.MULADDRSHIFTRMOD=E.MULADDRSHIFTMOD=E.QMULDIVMODC=E.QMULDIVMODR=E.QMULDIVMOD=E.QMULMODC=E.QMULMODR=E.QMULMOD=E.QMULDIVC=E.QMULDIVR=E.QMULDIV=E.QMULADDDIVMODC=E.QMULADDDIVMODR=E.QMULADDDIVMOD=E.MULDIVMODC=E.MULDIVMODR=E.MULDIVMOD=E.MULMODC=E.MULMODR=E.MULMOD=E.MULDIVC=E.MULDIVR=E.MULDIV=E.MULADDDIVMODC=E.MULADDDIVMODR=E.MULADDDIVMOD=E.QRSHIFTMODC=E.QRSHIFTMODR=E.QRSHIFTMOD=E.QMODPOW2C=E.QMODPOW2R=E.QMODPOW2=E.QRSHIFTC=E.QRSHIFTR=E.QADDRSHIFTMODC=E.QADDRSHIFTMODR=E.QADDRSHIFTMOD=E.RSHIFTMODC=E.RSHIFTMODR=E.RSHIFTMOD=E.MODPOW2C=E.MODPOW2R=E.MODPOW2=E.RSHIFTC=E.RSHIFTR=E.ADDRSHIFTMODC=E.ADDRSHIFTMODR=E.ADDRSHIFTMOD=E.QDIVMODC=E.QDIVMODR=void 0,E.STUXR=E.STIXR=E.STUX=E.STIX=E.QLSHIFTDIVMODC=E.QLSHIFTDIVMODR=E.QLSHIFTDIVMOD=E.QLSHIFTMODC=E.QLSHIFTMODR=E.QLSHIFTMOD=E.QLSHIFTDIVC=E.QLSHIFTDIVR=E.QLSHIFTDIV=E.QLSHIFTADDDIVMODC=E.QLSHIFTADDDIVMODR=E.QLSHIFTADDDIVMOD=E.LSHIFTDIVMODC=E.LSHIFTDIVMODR=E.LSHIFTDIVMOD=E.LSHIFTMODC=E.LSHIFTMODR=E.LSHIFTMOD=E.LSHIFTDIVC=E.LSHIFTDIVR=E.LSHIFTDIV=E.LSHIFTADDDIVMODC=E.LSHIFTADDDIVMODR=E.LSHIFTADDDIVMOD=E.QMULRSHIFTCMOD=E.QMULRSHIFTRMOD=E.QMULRSHIFTMOD=E.QMULMODPOW2C=E.QMULMODPOW2R=E.QMULMODPOW2=E.QMULRSHIFTC=E.QMULRSHIFTR=E.QMULRSHIFT=E.QMULADDRSHIFTCMOD=E.QMULADDRSHIFTRMOD=E.QMULADDRSHIFTMOD=E.MULRSHIFTCMOD=E.MULRSHIFTRMOD=E.MULRSHIFTMOD=E.MULMODPOW2C=E.MULMODPOW2R=E.MULMODPOW2=E.MULRSHIFTC=E.MULRSHIFTR=E.MULRSHIFT=E.MULADDRSHIFTCMOD=void 0,E.DICTUGETREF=E.DICTUGET=E.DICTIGETREF=E.DICTIGET=E.DICTGETREF=E.DICTGET=E.DICTUGETEXECZ=E.DICTIGETEXECZ=E.DICTUGETJMPZ=E.DICTIGETJMPZ=E.DICTUGETEXEC=E.DICTIGETEXEC=E.DICTUGETJMP=E.DICTIGETJMP=E.PLDULE8Q=E.PLDILE8Q=E.PLDULE4Q=E.PLDILE4Q=E.LDULE8Q=E.LDILE8Q=E.LDULE4Q=E.LDILE4Q=E.PLDULE8=E.PLDILE8=E.PLDULE4=E.PLDILE4=E.LDULE8=E.LDILE8=E.LDULE4=E.LDILE4=E.PLDSLICEXQ=E.LDSLICEXQ=E.PLDSLICEX=E.LDSLICEX=E.PLDUXQ=E.PLDIXQ=E.LDUXQ=E.LDIXQ=E.PLDUX=E.PLDIX=E.LDUX=E.LDIX=E.STULE8=E.STILE8=E.STULE4=E.STILE4=E.STUXRQ=E.STIXRQ=E.STUXQ=E.STIXQ=void 0,E.DICTMAXREF=E.DICTMAX=E.DICTUMINREF=E.DICTUMIN=E.DICTIMINREF=E.DICTIMIN=E.DICTMINREF=E.DICTMIN=E.DICTUDELGETREF=E.DICTUDELGET=E.DICTIDELGETREF=E.DICTIDELGET=E.DICTDELGETREF=E.DICTDELGET=E.DICTUADDGETREF=E.DICTUADDGET=E.DICTIADDGETREF=E.DICTIADDGET=E.DICTADDGETREF=E.DICTADDGET=E.DICTUADDREF=E.DICTUADD=E.DICTIADDREF=E.DICTIADD=E.DICTADDREF=E.DICTADD=E.DICTUREPLACEGETREF=E.DICTUREPLACEGET=E.DICTIREPLACEGETREF=E.DICTIREPLACEGET=E.DICTREPLACEGETREF=E.DICTREPLACEGET=E.DICTUREPLACEREF=E.DICTUREPLACE=E.DICTIREPLACEREF=E.DICTIREPLACE=E.DICTREPLACEREF=E.DICTREPLACE=E.DICTUSETGETREF=E.DICTUSETGET=E.DICTISETGETREF=E.DICTISETGET=E.DICTSETGETREF=E.DICTSETGET=E.DICTUSETREF=E.DICTUSET=E.DICTISETREF=E.DICTISET=E.DICTSETREF=E.DICTSET=void 0,E.THROWANY=E.SUBDICTURPGET=E.SUBDICTIRPGET=E.SUBDICTRPGET=E.SUBDICTUGET=E.SUBDICTIGET=E.SUBDICTGET=E.DICTUSETGETOPTREF=E.DICTISETGETOPTREF=E.DICTSETGETOPTREF=E.DICTUGETOPTREF=E.DICTIGETOPTREF=E.DICTGETOPTREF=E.DICTUDEL=E.DICTIDEL=E.DICTDEL=E.DICTUADDGETB=E.DICTIADDGETB=E.DICTADDGETB=E.DICTUADDB=E.DICTIADDB=E.DICTADDB=E.DICTUREPLACEGETB=E.DICTIREPLACEGETB=E.DICTREPLACEGETB=E.DICTUREPLACEB=E.DICTIREPLACEB=E.DICTREPLACEB=E.DICTUSETGETB=E.DICTISETGETB=E.DICTSETGETB=E.DICTUSETB=E.DICTISETB=E.DICTSETB=E.DICTUREMMAXREF=E.DICTUREMMAX=E.DICTIREMMAXREF=E.DICTIREMMAX=E.DICTREMMAXREF=E.DICTREMMAX=E.DICTUREMMINREF=E.DICTUREMMIN=E.DICTIREMMINREF=E.DICTIREMMIN=E.DICTREMMINREF=E.DICTREMMIN=E.DICTUMAXREF=E.DICTUMAX=E.DICTIMAXREF=E.DICTIMAX=void 0,E.INDEX=E.TUPLE=E.BLKDROP=E.RETURNARGS=E.RETARGS=E.JMPXARGS=E.THROWARGIFNOT=E.THROWARGIF=E.THROWARG=E.PREPAREDICT=E.JMPDICT=E.CDEPTHI=E.CHASHI=E.PLDREFIDX=E.TRYARGS=E.CALLCCARGS=E.SETCONTCTRMANY=E.QUFITS=E.QFITS=E.UFITS=E.FITS=E.PUSHNEGPOW2=E.PUSHPOW2DEC=E.QNEQINT=E.QGTINT=E.QLESSINT=E.QEQINT=E.NEQINT=E.GTINT=E.LESSINT=E.EQINT=E.QMULINT=E.QADDINT=E.MULINT=E.ADDINT=E.DICTUGETPREVEQ=E.DICTUGETPREV=E.DICTUGETNEXTEQ=E.DICTUGETNEXT=E.DICTIGETPREVEQ=E.DICTIGETPREV=E.DICTIGETNEXTEQ=E.DICTIGETNEXT=E.DICTGETPREVEQ=E.DICTGETPREV=E.DICTGETNEXTEQ=E.DICTGETNEXT=E.THROWARGANYIFNOT=E.THROWANYIFNOT=E.THROWARGANY=void 0,E.PUSHREFCONT=E.PUSHREFSLICE=E.PUSHREF=E.GETPARAM=E.SETGLOB=E.GETGLOB=E.BLKDROP2=E.BLKPUSH=E.PUSHPOW2=E.INDEX3=E.INDEX2=E.IFNBITJMP=E.IFBITJMP=E.PLDSLICEQ=E.LDSLICEQ=E.PLDSLICE=E.PLDUZ=E.PLDUQ=E.PLDIQ=E.LDUQ=E.LDIQ=E.PLDU=E.PLDI=E.STURQ=E.STIRQ=E.STUQ=E.STIQ=E.STUR=E.STIR=E.BLESSARGS=E.SETCONTARGS=E.REVERSE=E.BLKSWAP=E.PU2XC=E.PUXCPU=E.PUXC2=E.XCPUXC=E.PUXC=E.PUSH2=E.XCPU=E.XCHG2=E.PUSH3=E.XCPU2=E.XC2PU=E.SETINDEXQ=E.INDEXQ=E.SETINDEX=E.EXPLODE=E.UNPACKFIRST=E.UNTUPLE=void 0,E.MULADDRSHIFTC_MOD=E.MULADDRSHIFTR_MOD=E.MULADDRSHIFT_MOD=E.RSHIFTC_MOD=E.RSHIFTR_MOD=E.RSHIFT_MOD=E.MODPOW2C_=E.MODPOW2R_=E.MODPOW2_=E.RSHIFTC_=E.RSHIFTR_=E.RSHIFT_=E.ADDRSHIFTC_MOD=E.ADDRSHIFTR_MOD=E.ADDRSHIFT_MOD=E.OVER2=E.DUP2=E.DROP2=E.SWAP2=E.RUNVM=E.SAVEBOTHCTR=E.SAVEALTCTR=E.SAVECTR=E.POPSAVE=E.SETALTCTR=E.SETRETCTR=E.SETCONTCTR=E.DEBUGSTR=E.THROWARGANYIF=E.THROWANYIF=E.STREF2CONST=E.STREFCONST=E.SDBEGINSQ=E.SDBEGINS=E.SDBEGINSXQ=E.SDBEGINSX=E.PFXDICTSWITCH=E.DICTPUSHCONST=E.IFNBITJMPREF=E.IFBITJMPREF=E.IFREFELSEREF=E.IFELSEREF=E.IFREFELSE=E.IFNOTJMPREF=E.IFJMPREF=E.IFNOTREF=E.IFREF=E.JMPREFDATA=E.JMPREF=E.CALLREF=void 0,E.RSHIFT_VAR=E.BCHKBITSQ=E.BCHKBITSQ_VAR=E.BCHKBITS=E.BCHKBITS_VAR=E.QLSHIFT=E.QLSHIFT_VAR=E.LSHIFT=E.LSHIFT_VAR=E.LDSLICE_ALT=E.LDSLICE=E.LDU_ALT=E.LDU=E.LDI_ALT=E.LDI=E.STU_ALT=E.STU=E.STI_ALT=E.STI=E.XCHG3_ALT=E.XCHG3=E.STSLICE_ALT=E.STSLICE=E.STREF_ALT=E.STREF=E.HASHEXTAR=E.HASHEXTA=E.HASHEXTR=E.HASHEXT=E.LSHIFT_DIVMODC=E.LSHIFT_DIVMODR=E.LSHIFT_DIVMOD=E.LSHIFT_MODC=E.LSHIFT_MODR=E.LSHIFT_MOD=E.LSHIFT_DIVC=E.LSHIFT_DIVR=E.LSHIFT_DIV=E.LSHIFT_ADDDIVMODC=E.LSHIFT_ADDDIVMODR=E.LSHIFT_ADDDIVMOD=E.MULRSHIFTC_MOD=E.MULRSHIFTR_MOD=E.MULRSHIFT_MOD=E.MULMODPOW2C_=E.MULMODPOW2R_=E.MULMODPOW2_=E.MULRSHIFTC_=E.MULRSHIFTR_=E.MULRSHIFT_=void 0,E.DEBUGMARK=E.SETCP_SHORT=E.SETCPX=E.SETCP=E.STSLICECONST=E.PUSHCONT_SHORT=E.PUSHCONT=E.PUSHSLICE_LONG=E.PUSHSLICE_REFS=E.PUSHSLICE=E.CALLXARGS_1=E.CALLXARGS=E.POP_LONG=E.POP=E.POPCTR=E.PUSH_LONG=E.PUSH=E.PUSHCTR=E.DEBUG_2=E.DUMP=E.DEBUG_1=E.STRDUMP=E.DEBUG=E.DUMPSTK=E.XCHG_1I=E.XCHG_IJ=E.XCHG_0I=E.XCHG_01_LONG=E.PUSHINT_LONG=E.PUSHINT_16=E.PUSHINT_8=E.PUSHINT_4=E.THROWIFNOT=E.THROWIFNOT_SHORT=E.THROWIF=E.THROWIF_SHORT=E.THROW=E.THROW_SHORT=E.CALLDICT_LONG=E.CALLDICT=E.QRSHIFT_ALT=E.QRSHIFT=E.QRSHIFT_VAR=E.RSHIFT_ALT=E.RSHIFT=void 0;const S=_(bn()),t=_(Sr());return E.PUSHNAN={load:e=>(e.skip(16),t.PUSHNAN()),store:(e,a)=>{e.storeInstructionPrefix(33791,16,a)}},E.ADD={load:e=>(e.skip(8),t.ADD()),store:(e,a)=>{e.storeInstructionPrefix(160,8,a)}},E.SUB={load:e=>(e.skip(8),t.SUB()),store:(e,a)=>{e.storeInstructionPrefix(161,8,a)}},E.SUBR={load:e=>(e.skip(8),t.SUBR()),store:(e,a)=>{e.storeInstructionPrefix(162,8,a)}},E.NEGATE={load:e=>(e.skip(8),t.NEGATE()),store:(e,a)=>{e.storeInstructionPrefix(163,8,a)}},E.INC={load:e=>(e.skip(8),t.INC()),store:(e,a)=>{e.storeInstructionPrefix(164,8,a)}},E.DEC={load:e=>(e.skip(8),t.DEC()),store:(e,a)=>{e.storeInstructionPrefix(165,8,a)}},E.MUL={load:e=>(e.skip(8),t.MUL()),store:(e,a)=>{e.storeInstructionPrefix(168,8,a)}},E.POW2={load:e=>(e.skip(8),t.POW2()),store:(e,a)=>{e.storeInstructionPrefix(174,8,a)}},E.AND={load:e=>(e.skip(8),t.AND()),store:(e,a)=>{e.storeInstructionPrefix(176,8,a)}},E.OR={load:e=>(e.skip(8),t.OR()),store:(e,a)=>{e.storeInstructionPrefix(177,8,a)}},E.XOR={load:e=>(e.skip(8),t.XOR()),store:(e,a)=>{e.storeInstructionPrefix(178,8,a)}},E.NOT={load:e=>(e.skip(8),t.NOT()),store:(e,a)=>{e.storeInstructionPrefix(179,8,a)}},E.FITSX={load:e=>(e.skip(16),t.FITSX()),store:(e,a)=>{e.storeInstructionPrefix(46592,16,a)}},E.UFITSX={load:e=>(e.skip(16),t.UFITSX()),store:(e,a)=>{e.storeInstructionPrefix(46593,16,a)}},E.BITSIZE={load:e=>(e.skip(16),t.BITSIZE()),store:(e,a)=>{e.storeInstructionPrefix(46594,16,a)}},E.UBITSIZE={load:e=>(e.skip(16),t.UBITSIZE()),store:(e,a)=>{e.storeInstructionPrefix(46595,16,a)}},E.MIN={load:e=>(e.skip(16),t.MIN()),store:(e,a)=>{e.storeInstructionPrefix(46600,16,a)}},E.MAX={load:e=>(e.skip(16),t.MAX()),store:(e,a)=>{e.storeInstructionPrefix(46601,16,a)}},E.MINMAX={load:e=>(e.skip(16),t.MINMAX()),store:(e,a)=>{e.storeInstructionPrefix(46602,16,a)}},E.ABS={load:e=>(e.skip(16),t.ABS()),store:(e,a)=>{e.storeInstructionPrefix(46603,16,a)}},E.QADD={load:e=>(e.skip(16),t.QADD()),store:(e,a)=>{e.storeInstructionPrefix(47008,16,a)}},E.QSUB={load:e=>(e.skip(16),t.QSUB()),store:(e,a)=>{e.storeInstructionPrefix(47009,16,a)}},E.QSUBR={load:e=>(e.skip(16),t.QSUBR()),store:(e,a)=>{e.storeInstructionPrefix(47010,16,a)}},E.QNEGATE={load:e=>(e.skip(16),t.QNEGATE()),store:(e,a)=>{e.storeInstructionPrefix(47011,16,a)}},E.QINC={load:e=>(e.skip(16),t.QINC()),store:(e,a)=>{e.storeInstructionPrefix(47012,16,a)}},E.QDEC={load:e=>(e.skip(16),t.QDEC()),store:(e,a)=>{e.storeInstructionPrefix(47013,16,a)}},E.QMUL={load:e=>(e.skip(16),t.QMUL()),store:(e,a)=>{e.storeInstructionPrefix(47016,16,a)}},E.QPOW2={load:e=>(e.skip(16),t.QPOW2()),store:(e,a)=>{e.storeInstructionPrefix(47022,16,a)}},E.QAND={load:e=>(e.skip(16),t.QAND()),store:(e,a)=>{e.storeInstructionPrefix(47024,16,a)}},E.QOR={load:e=>(e.skip(16),t.QOR()),store:(e,a)=>{e.storeInstructionPrefix(47025,16,a)}},E.QXOR={load:e=>(e.skip(16),t.QXOR()),store:(e,a)=>{e.storeInstructionPrefix(47026,16,a)}},E.QNOT={load:e=>(e.skip(16),t.QNOT()),store:(e,a)=>{e.storeInstructionPrefix(47027,16,a)}},E.QFITSX={load:e=>(e.skip(24),t.QFITSX()),store:(e,a)=>{e.storeInstructionPrefix(12039680,24,a)}},E.QUFITSX={load:e=>(e.skip(24),t.QUFITSX()),store:(e,a)=>{e.storeInstructionPrefix(12039681,24,a)}},E.QBITSIZE={load:e=>(e.skip(24),t.QBITSIZE()),store:(e,a)=>{e.storeInstructionPrefix(12039682,24,a)}},E.QUBITSIZE={load:e=>(e.skip(24),t.QUBITSIZE()),store:(e,a)=>{e.storeInstructionPrefix(12039683,24,a)}},E.QMIN={load:e=>(e.skip(24),t.QMIN()),store:(e,a)=>{e.storeInstructionPrefix(12039688,24,a)}},E.QMAX={load:e=>(e.skip(24),t.QMAX()),store:(e,a)=>{e.storeInstructionPrefix(12039689,24,a)}},E.QMINMAX={load:e=>(e.skip(24),t.QMINMAX()),store:(e,a)=>{e.storeInstructionPrefix(12039690,24,a)}},E.QABS={load:e=>(e.skip(24),t.QABS()),store:(e,a)=>{e.storeInstructionPrefix(12039691,24,a)}},E.SGN={load:e=>(e.skip(8),t.SGN()),store:(e,a)=>{e.storeInstructionPrefix(184,8,a)}},E.LESS={load:e=>(e.skip(8),t.LESS()),store:(e,a)=>{e.storeInstructionPrefix(185,8,a)}},E.EQUAL={load:e=>(e.skip(8),t.EQUAL()),store:(e,a)=>{e.storeInstructionPrefix(186,8,a)}},E.LEQ={load:e=>(e.skip(8),t.LEQ()),store:(e,a)=>{e.storeInstructionPrefix(187,8,a)}},E.GREATER={load:e=>(e.skip(8),t.GREATER()),store:(e,a)=>{e.storeInstructionPrefix(188,8,a)}},E.NEQ={load:e=>(e.skip(8),t.NEQ()),store:(e,a)=>{e.storeInstructionPrefix(189,8,a)}},E.GEQ={load:e=>(e.skip(8),t.GEQ()),store:(e,a)=>{e.storeInstructionPrefix(190,8,a)}},E.CMP={load:e=>(e.skip(8),t.CMP()),store:(e,a)=>{e.storeInstructionPrefix(191,8,a)}},E.ISNAN={load:e=>(e.skip(8),t.ISNAN()),store:(e,a)=>{e.storeInstructionPrefix(196,8,a)}},E.CHKNAN={load:e=>(e.skip(8),t.CHKNAN()),store:(e,a)=>{e.storeInstructionPrefix(197,8,a)}},E.QSGN={load:e=>(e.skip(16),t.QSGN()),store:(e,a)=>{e.storeInstructionPrefix(47032,16,a)}},E.QLESS={load:e=>(e.skip(16),t.QLESS()),store:(e,a)=>{e.storeInstructionPrefix(47033,16,a)}},E.QEQUAL={load:e=>(e.skip(16),t.QEQUAL()),store:(e,a)=>{e.storeInstructionPrefix(47034,16,a)}},E.QLEQ={load:e=>(e.skip(16),t.QLEQ()),store:(e,a)=>{e.storeInstructionPrefix(47035,16,a)}},E.QGREATER={load:e=>(e.skip(16),t.QGREATER()),store:(e,a)=>{e.storeInstructionPrefix(47036,16,a)}},E.QNEQ={load:e=>(e.skip(16),t.QNEQ()),store:(e,a)=>{e.storeInstructionPrefix(47037,16,a)}},E.QGEQ={load:e=>(e.skip(16),t.QGEQ()),store:(e,a)=>{e.storeInstructionPrefix(47038,16,a)}},E.QCMP={load:e=>(e.skip(16),t.QCMP()),store:(e,a)=>{e.storeInstructionPrefix(47039,16,a)}},E.SEMPTY={load:e=>(e.skip(16),t.SEMPTY()),store:(e,a)=>{e.storeInstructionPrefix(50944,16,a)}},E.SDEMPTY={load:e=>(e.skip(16),t.SDEMPTY()),store:(e,a)=>{e.storeInstructionPrefix(50945,16,a)}},E.SREMPTY={load:e=>(e.skip(16),t.SREMPTY()),store:(e,a)=>{e.storeInstructionPrefix(50946,16,a)}},E.SDFIRST={load:e=>(e.skip(16),t.SDFIRST()),store:(e,a)=>{e.storeInstructionPrefix(50947,16,a)}},E.SDLEXCMP={load:e=>(e.skip(16),t.SDLEXCMP()),store:(e,a)=>{e.storeInstructionPrefix(50948,16,a)}},E.SDEQ={load:e=>(e.skip(16),t.SDEQ()),store:(e,a)=>{e.storeInstructionPrefix(50949,16,a)}},E.SDPFX={load:e=>(e.skip(16),t.SDPFX()),store:(e,a)=>{e.storeInstructionPrefix(50952,16,a)}},E.SDPFXREV={load:e=>(e.skip(16),t.SDPFXREV()),store:(e,a)=>{e.storeInstructionPrefix(50953,16,a)}},E.SDPPFX={load:e=>(e.skip(16),t.SDPPFX()),store:(e,a)=>{e.storeInstructionPrefix(50954,16,a)}},E.SDPPFXREV={load:e=>(e.skip(16),t.SDPPFXREV()),store:(e,a)=>{e.storeInstructionPrefix(50955,16,a)}},E.SDSFX={load:e=>(e.skip(16),t.SDSFX()),store:(e,a)=>{e.storeInstructionPrefix(50956,16,a)}},E.SDSFXREV={load:e=>(e.skip(16),t.SDSFXREV()),store:(e,a)=>{e.storeInstructionPrefix(50957,16,a)}},E.SDPSFX={load:e=>(e.skip(16),t.SDPSFX()),store:(e,a)=>{e.storeInstructionPrefix(50958,16,a)}},E.SDPSFXREV={load:e=>(e.skip(16),t.SDPSFXREV()),store:(e,a)=>{e.storeInstructionPrefix(50959,16,a)}},E.SDCNTLEAD0={load:e=>(e.skip(16),t.SDCNTLEAD0()),store:(e,a)=>{e.storeInstructionPrefix(50960,16,a)}},E.SDCNTLEAD1={load:e=>(e.skip(16),t.SDCNTLEAD1()),store:(e,a)=>{e.storeInstructionPrefix(50961,16,a)}},E.SDCNTTRAIL0={load:e=>(e.skip(16),t.SDCNTTRAIL0()),store:(e,a)=>{e.storeInstructionPrefix(50962,16,a)}},E.SDCNTTRAIL1={load:e=>(e.skip(16),t.SDCNTTRAIL1()),store:(e,a)=>{e.storeInstructionPrefix(50963,16,a)}},E.NEWC={load:e=>(e.skip(8),t.NEWC()),store:(e,a)=>{e.storeInstructionPrefix(200,8,a)}},E.ENDC={load:e=>(e.skip(8),t.ENDC()),store:(e,a)=>{e.storeInstructionPrefix(201,8,a)}},E.ENDCST={load:e=>(e.skip(8),t.ENDCST()),store:(e,a)=>{e.storeInstructionPrefix(205,8,a)}},E.STBREF={load:e=>(e.skip(16),t.STBREF()),store:(e,a)=>{e.storeInstructionPrefix(53009,16,a)}},E.STB={load:e=>(e.skip(16),t.STB()),store:(e,a)=>{e.storeInstructionPrefix(53011,16,a)}},E.STREFR={load:e=>(e.skip(16),t.STREFR()),store:(e,a)=>{e.storeInstructionPrefix(53012,16,a)}},E.STBREFR={load:e=>(e.skip(16),t.STBREFR()),store:(e,a)=>{e.storeInstructionPrefix(53013,16,a)}},E.STSLICER={load:e=>(e.skip(16),t.STSLICER()),store:(e,a)=>{e.storeInstructionPrefix(53014,16,a)}},E.STBR={load:e=>(e.skip(16),t.STBR()),store:(e,a)=>{e.storeInstructionPrefix(53015,16,a)}},E.STREFQ={load:e=>(e.skip(16),t.STREFQ()),store:(e,a)=>{e.storeInstructionPrefix(53016,16,a)}},E.STBREFQ={load:e=>(e.skip(16),t.STBREFQ()),store:(e,a)=>{e.storeInstructionPrefix(53017,16,a)}},E.STSLICEQ={load:e=>(e.skip(16),t.STSLICEQ()),store:(e,a)=>{e.storeInstructionPrefix(53018,16,a)}},E.STBQ={load:e=>(e.skip(16),t.STBQ()),store:(e,a)=>{e.storeInstructionPrefix(53019,16,a)}},E.STREFRQ={load:e=>(e.skip(16),t.STREFRQ()),store:(e,a)=>{e.storeInstructionPrefix(53020,16,a)}},E.STBREFRQ={load:e=>(e.skip(16),t.STBREFRQ()),store:(e,a)=>{e.storeInstructionPrefix(53021,16,a)}},E.STSLICERQ={load:e=>(e.skip(16),t.STSLICERQ()),store:(e,a)=>{e.storeInstructionPrefix(53022,16,a)}},E.STBRQ={load:e=>(e.skip(16),t.STBRQ()),store:(e,a)=>{e.storeInstructionPrefix(53023,16,a)}},E.ENDXC={load:e=>(e.skip(16),t.ENDXC()),store:(e,a)=>{e.storeInstructionPrefix(53027,16,a)}},E.BDEPTH={load:e=>(e.skip(16),t.BDEPTH()),store:(e,a)=>{e.storeInstructionPrefix(53040,16,a)}},E.BBITS={load:e=>(e.skip(16),t.BBITS()),store:(e,a)=>{e.storeInstructionPrefix(53041,16,a)}},E.BREFS={load:e=>(e.skip(16),t.BREFS()),store:(e,a)=>{e.storeInstructionPrefix(53042,16,a)}},E.BBITREFS={load:e=>(e.skip(16),t.BBITREFS()),store:(e,a)=>{e.storeInstructionPrefix(53043,16,a)}},E.BREMBITS={load:e=>(e.skip(16),t.BREMBITS()),store:(e,a)=>{e.storeInstructionPrefix(53045,16,a)}},E.BREMREFS={load:e=>(e.skip(16),t.BREMREFS()),store:(e,a)=>{e.storeInstructionPrefix(53046,16,a)}},E.BREMBITREFS={load:e=>(e.skip(16),t.BREMBITREFS()),store:(e,a)=>{e.storeInstructionPrefix(53047,16,a)}},E.BCHKREFS={load:e=>(e.skip(16),t.BCHKREFS()),store:(e,a)=>{e.storeInstructionPrefix(53050,16,a)}},E.BCHKBITREFS={load:e=>(e.skip(16),t.BCHKBITREFS()),store:(e,a)=>{e.storeInstructionPrefix(53051,16,a)}},E.BCHKREFSQ={load:e=>(e.skip(16),t.BCHKREFSQ()),store:(e,a)=>{e.storeInstructionPrefix(53054,16,a)}},E.BCHKBITREFSQ={load:e=>(e.skip(16),t.BCHKBITREFSQ()),store:(e,a)=>{e.storeInstructionPrefix(53055,16,a)}},E.STZEROES={load:e=>(e.skip(16),t.STZEROES()),store:(e,a)=>{e.storeInstructionPrefix(53056,16,a)}},E.STONES={load:e=>(e.skip(16),t.STONES()),store:(e,a)=>{e.storeInstructionPrefix(53057,16,a)}},E.STSAME={load:e=>(e.skip(16),t.STSAME()),store:(e,a)=>{e.storeInstructionPrefix(53058,16,a)}},E.CTOS={load:e=>(e.skip(8),t.CTOS()),store:(e,a)=>{e.storeInstructionPrefix(208,8,a)}},E.ENDS={load:e=>(e.skip(8),t.ENDS()),store:(e,a)=>{e.storeInstructionPrefix(209,8,a)}},E.LDREF={load:e=>(e.skip(8),t.LDREF()),store:(e,a)=>{e.storeInstructionPrefix(212,8,a)}},E.LDREFRTOS={load:e=>(e.skip(8),t.LDREFRTOS()),store:(e,a)=>{e.storeInstructionPrefix(213,8,a)}},E.SDCUTFIRST={load:e=>(e.skip(16),t.SDCUTFIRST()),store:(e,a)=>{e.storeInstructionPrefix(55072,16,a)}},E.SDSKIPFIRST={load:e=>(e.skip(16),t.SDSKIPFIRST()),store:(e,a)=>{e.storeInstructionPrefix(55073,16,a)}},E.SDCUTLAST={load:e=>(e.skip(16),t.SDCUTLAST()),store:(e,a)=>{e.storeInstructionPrefix(55074,16,a)}},E.SDSKIPLAST={load:e=>(e.skip(16),t.SDSKIPLAST()),store:(e,a)=>{e.storeInstructionPrefix(55075,16,a)}},E.SDSUBSTR={load:e=>(e.skip(16),t.SDSUBSTR()),store:(e,a)=>{e.storeInstructionPrefix(55076,16,a)}},E.SCUTFIRST={load:e=>(e.skip(16),t.SCUTFIRST()),store:(e,a)=>{e.storeInstructionPrefix(55088,16,a)}},E.SSKIPFIRST={load:e=>(e.skip(16),t.SSKIPFIRST()),store:(e,a)=>{e.storeInstructionPrefix(55089,16,a)}},E.SCUTLAST={load:e=>(e.skip(16),t.SCUTLAST()),store:(e,a)=>{e.storeInstructionPrefix(55090,16,a)}},E.SSKIPLAST={load:e=>(e.skip(16),t.SSKIPLAST()),store:(e,a)=>{e.storeInstructionPrefix(55091,16,a)}},E.SUBSLICE={load:e=>(e.skip(16),t.SUBSLICE()),store:(e,a)=>{e.storeInstructionPrefix(55092,16,a)}},E.SPLIT={load:e=>(e.skip(16),t.SPLIT()),store:(e,a)=>{e.storeInstructionPrefix(55094,16,a)}},E.SPLITQ={load:e=>(e.skip(16),t.SPLITQ()),store:(e,a)=>{e.storeInstructionPrefix(55095,16,a)}},E.XCTOS={load:e=>(e.skip(16),t.XCTOS()),store:(e,a)=>{e.storeInstructionPrefix(55097,16,a)}},E.XLOAD={load:e=>(e.skip(16),t.XLOAD()),store:(e,a)=>{e.storeInstructionPrefix(55098,16,a)}},E.XLOADQ={load:e=>(e.skip(16),t.XLOADQ()),store:(e,a)=>{e.storeInstructionPrefix(55099,16,a)}},E.SCHKBITS={load:e=>(e.skip(16),t.SCHKBITS()),store:(e,a)=>{e.storeInstructionPrefix(55105,16,a)}},E.SCHKREFS={load:e=>(e.skip(16),t.SCHKREFS()),store:(e,a)=>{e.storeInstructionPrefix(55106,16,a)}},E.SCHKBITREFS={load:e=>(e.skip(16),t.SCHKBITREFS()),store:(e,a)=>{e.storeInstructionPrefix(55107,16,a)}},E.SCHKBITSQ={load:e=>(e.skip(16),t.SCHKBITSQ()),store:(e,a)=>{e.storeInstructionPrefix(55109,16,a)}},E.SCHKREFSQ={load:e=>(e.skip(16),t.SCHKREFSQ()),store:(e,a)=>{e.storeInstructionPrefix(55110,16,a)}},E.SCHKBITREFSQ={load:e=>(e.skip(16),t.SCHKBITREFSQ()),store:(e,a)=>{e.storeInstructionPrefix(55111,16,a)}},E.PLDREFVAR={load:e=>(e.skip(16),t.PLDREFVAR()),store:(e,a)=>{e.storeInstructionPrefix(55112,16,a)}},E.SBITS={load:e=>(e.skip(16),t.SBITS()),store:(e,a)=>{e.storeInstructionPrefix(55113,16,a)}},E.SREFS={load:e=>(e.skip(16),t.SREFS()),store:(e,a)=>{e.storeInstructionPrefix(55114,16,a)}},E.SBITREFS={load:e=>(e.skip(16),t.SBITREFS()),store:(e,a)=>{e.storeInstructionPrefix(55115,16,a)}},E.LDZEROES={load:e=>(e.skip(16),t.LDZEROES()),store:(e,a)=>{e.storeInstructionPrefix(55136,16,a)}},E.LDONES={load:e=>(e.skip(16),t.LDONES()),store:(e,a)=>{e.storeInstructionPrefix(55137,16,a)}},E.LDSAME={load:e=>(e.skip(16),t.LDSAME()),store:(e,a)=>{e.storeInstructionPrefix(55138,16,a)}},E.SDEPTH={load:e=>(e.skip(16),t.SDEPTH()),store:(e,a)=>{e.storeInstructionPrefix(55140,16,a)}},E.CDEPTH={load:e=>(e.skip(16),t.CDEPTH()),store:(e,a)=>{e.storeInstructionPrefix(55141,16,a)}},E.CLEVEL={load:e=>(e.skip(16),t.CLEVEL()),store:(e,a)=>{e.storeInstructionPrefix(55142,16,a)}},E.CLEVELMASK={load:e=>(e.skip(16),t.CLEVELMASK()),store:(e,a)=>{e.storeInstructionPrefix(55143,16,a)}},E.CHASHIX={load:e=>(e.skip(16),t.CHASHIX()),store:(e,a)=>{e.storeInstructionPrefix(55152,16,a)}},E.CDEPTHIX={load:e=>(e.skip(16),t.CDEPTHIX()),store:(e,a)=>{e.storeInstructionPrefix(55153,16,a)}},E.EXECUTE={load:e=>(e.skip(8),t.EXECUTE()),store:(e,a)=>{e.storeInstructionPrefix(216,8,a)}},E.JMPX={load:e=>(e.skip(8),t.JMPX()),store:(e,a)=>{e.storeInstructionPrefix(217,8,a)}},E.RET={load:e=>(e.skip(16),t.RET()),store:(e,a)=>{e.storeInstructionPrefix(56112,16,a)}},E.RETALT={load:e=>(e.skip(16),t.RETALT()),store:(e,a)=>{e.storeInstructionPrefix(56113,16,a)}},E.RETBOOL={load:e=>(e.skip(16),t.RETBOOL()),store:(e,a)=>{e.storeInstructionPrefix(56114,16,a)}},E.CALLCC={load:e=>(e.skip(16),t.CALLCC()),store:(e,a)=>{e.storeInstructionPrefix(56116,16,a)}},E.JMPXDATA={load:e=>(e.skip(16),t.JMPXDATA()),store:(e,a)=>{e.storeInstructionPrefix(56117,16,a)}},E.CALLXVARARGS={load:e=>(e.skip(16),t.CALLXVARARGS()),store:(e,a)=>{e.storeInstructionPrefix(56120,16,a)}},E.RETVARARGS={load:e=>(e.skip(16),t.RETVARARGS()),store:(e,a)=>{e.storeInstructionPrefix(56121,16,a)}},E.JMPXVARARGS={load:e=>(e.skip(16),t.JMPXVARARGS()),store:(e,a)=>{e.storeInstructionPrefix(56122,16,a)}},E.CALLCCVARARGS={load:e=>(e.skip(16),t.CALLCCVARARGS()),store:(e,a)=>{e.storeInstructionPrefix(56123,16,a)}},E.RETDATA={load:e=>(e.skip(16),t.RETDATA()),store:(e,a)=>{e.storeInstructionPrefix(56127,16,a)}},E.RUNVMX={load:e=>(e.skip(16),t.RUNVMX()),store:(e,a)=>{e.storeInstructionPrefix(56144,16,a)}},E.IFRET={load:e=>(e.skip(8),t.IFRET()),store:(e,a)=>{e.storeInstructionPrefix(220,8,a)}},E.IFNOTRET={load:e=>(e.skip(8),t.IFNOTRET()),store:(e,a)=>{e.storeInstructionPrefix(221,8,a)}},E.IF={load:e=>(e.skip(8),t.IF()),store:(e,a)=>{e.storeInstructionPrefix(222,8,a)}},E.IFNOT={load:e=>(e.skip(8),t.IFNOT()),store:(e,a)=>{e.storeInstructionPrefix(223,8,a)}},E.IFJMP={load:e=>(e.skip(8),t.IFJMP()),store:(e,a)=>{e.storeInstructionPrefix(224,8,a)}},E.IFNOTJMP={load:e=>(e.skip(8),t.IFNOTJMP()),store:(e,a)=>{e.storeInstructionPrefix(225,8,a)}},E.IFELSE={load:e=>(e.skip(8),t.IFELSE()),store:(e,a)=>{e.storeInstructionPrefix(226,8,a)}},E.CONDSEL={load:e=>(e.skip(16),t.CONDSEL()),store:(e,a)=>{e.storeInstructionPrefix(58116,16,a)}},E.CONDSELCHK={load:e=>(e.skip(16),t.CONDSELCHK()),store:(e,a)=>{e.storeInstructionPrefix(58117,16,a)}},E.IFRETALT={load:e=>(e.skip(16),t.IFRETALT()),store:(e,a)=>{e.storeInstructionPrefix(58120,16,a)}},E.IFNOTRETALT={load:e=>(e.skip(16),t.IFNOTRETALT()),store:(e,a)=>{e.storeInstructionPrefix(58121,16,a)}},E.REPEAT={load:e=>(e.skip(8),t.REPEAT()),store:(e,a)=>{e.storeInstructionPrefix(228,8,a)}},E.REPEATEND={load:e=>(e.skip(8),t.REPEATEND()),store:(e,a)=>{e.storeInstructionPrefix(229,8,a)}},E.UNTIL={load:e=>(e.skip(8),t.UNTIL()),store:(e,a)=>{e.storeInstructionPrefix(230,8,a)}},E.UNTILEND={load:e=>(e.skip(8),t.UNTILEND()),store:(e,a)=>{e.storeInstructionPrefix(231,8,a)}},E.WHILE={load:e=>(e.skip(8),t.WHILE()),store:(e,a)=>{e.storeInstructionPrefix(232,8,a)}},E.WHILEEND={load:e=>(e.skip(8),t.WHILEEND()),store:(e,a)=>{e.storeInstructionPrefix(233,8,a)}},E.AGAIN={load:e=>(e.skip(8),t.AGAIN()),store:(e,a)=>{e.storeInstructionPrefix(234,8,a)}},E.AGAINEND={load:e=>(e.skip(8),t.AGAINEND()),store:(e,a)=>{e.storeInstructionPrefix(235,8,a)}},E.REPEATBRK={load:e=>(e.skip(16),t.REPEATBRK()),store:(e,a)=>{e.storeInstructionPrefix(58132,16,a)}},E.REPEATENDBRK={load:e=>(e.skip(16),t.REPEATENDBRK()),store:(e,a)=>{e.storeInstructionPrefix(58133,16,a)}},E.UNTILBRK={load:e=>(e.skip(16),t.UNTILBRK()),store:(e,a)=>{e.storeInstructionPrefix(58134,16,a)}},E.UNTILENDBRK={load:e=>(e.skip(16),t.UNTILENDBRK()),store:(e,a)=>{e.storeInstructionPrefix(58135,16,a)}},E.WHILEBRK={load:e=>(e.skip(16),t.WHILEBRK()),store:(e,a)=>{e.storeInstructionPrefix(58136,16,a)}},E.WHILEENDBRK={load:e=>(e.skip(16),t.WHILEENDBRK()),store:(e,a)=>{e.storeInstructionPrefix(58137,16,a)}},E.AGAINBRK={load:e=>(e.skip(16),t.AGAINBRK()),store:(e,a)=>{e.storeInstructionPrefix(58138,16,a)}},E.AGAINENDBRK={load:e=>(e.skip(16),t.AGAINENDBRK()),store:(e,a)=>{e.storeInstructionPrefix(58139,16,a)}},E.RETURNVARARGS={load:e=>(e.skip(16),t.RETURNVARARGS()),store:(e,a)=>{e.storeInstructionPrefix(60688,16,a)}},E.SETCONTVARARGS={load:e=>(e.skip(16),t.SETCONTVARARGS()),store:(e,a)=>{e.storeInstructionPrefix(60689,16,a)}},E.SETNUMVARARGS={load:e=>(e.skip(16),t.SETNUMVARARGS()),store:(e,a)=>{e.storeInstructionPrefix(60690,16,a)}},E.BLESS={load:e=>(e.skip(16),t.BLESS()),store:(e,a)=>{e.storeInstructionPrefix(60702,16,a)}},E.BLESSVARARGS={load:e=>(e.skip(16),t.BLESSVARARGS()),store:(e,a)=>{e.storeInstructionPrefix(60703,16,a)}},E.PUSHCTRX={load:e=>(e.skip(16),t.PUSHCTRX()),store:(e,a)=>{e.storeInstructionPrefix(60896,16,a)}},E.POPCTRX={load:e=>(e.skip(16),t.POPCTRX()),store:(e,a)=>{e.storeInstructionPrefix(60897,16,a)}},E.SETCONTCTRX={load:e=>(e.skip(16),t.SETCONTCTRX()),store:(e,a)=>{e.storeInstructionPrefix(60898,16,a)}},E.SETCONTCTRMANYX={load:e=>(e.skip(16),t.SETCONTCTRMANYX()),store:(e,a)=>{e.storeInstructionPrefix(60900,16,a)}},E.BOOLAND={load:e=>(e.skip(16),t.BOOLAND()),store:(e,a)=>{e.storeInstructionPrefix(60912,16,a)}},E.BOOLOR={load:e=>(e.skip(16),t.BOOLOR()),store:(e,a)=>{e.storeInstructionPrefix(60913,16,a)}},E.COMPOSBOTH={load:e=>(e.skip(16),t.COMPOSBOTH()),store:(e,a)=>{e.storeInstructionPrefix(60914,16,a)}},E.ATEXIT={load:e=>(e.skip(16),t.ATEXIT()),store:(e,a)=>{e.storeInstructionPrefix(60915,16,a)}},E.ATEXITALT={load:e=>(e.skip(16),t.ATEXITALT()),store:(e,a)=>{e.storeInstructionPrefix(60916,16,a)}},E.SETEXITALT={load:e=>(e.skip(16),t.SETEXITALT()),store:(e,a)=>{e.storeInstructionPrefix(60917,16,a)}},E.THENRET={load:e=>(e.skip(16),t.THENRET()),store:(e,a)=>{e.storeInstructionPrefix(60918,16,a)}},E.THENRETALT={load:e=>(e.skip(16),t.THENRETALT()),store:(e,a)=>{e.storeInstructionPrefix(60919,16,a)}},E.INVERT={load:e=>(e.skip(16),t.INVERT()),store:(e,a)=>{e.storeInstructionPrefix(60920,16,a)}},E.BOOLEVAL={load:e=>(e.skip(16),t.BOOLEVAL()),store:(e,a)=>{e.storeInstructionPrefix(60921,16,a)}},E.SAMEALT={load:e=>(e.skip(16),t.SAMEALT()),store:(e,a)=>{e.storeInstructionPrefix(60922,16,a)}},E.SAMEALTSAVE={load:e=>(e.skip(16),t.SAMEALTSAVE()),store:(e,a)=>{e.storeInstructionPrefix(60923,16,a)}},E.TRY={load:e=>(e.skip(16),t.TRY()),store:(e,a)=>{e.storeInstructionPrefix(62207,16,a)}},E.STDICT={load:e=>(e.skip(16),t.STDICT()),store:(e,a)=>{e.storeInstructionPrefix(62464,16,a)}},E.SKIPDICT={load:e=>(e.skip(16),t.SKIPDICT()),store:(e,a)=>{e.storeInstructionPrefix(62465,16,a)}},E.LDDICTS={load:e=>(e.skip(16),t.LDDICTS()),store:(e,a)=>{e.storeInstructionPrefix(62466,16,a)}},E.PLDDICTS={load:e=>(e.skip(16),t.PLDDICTS()),store:(e,a)=>{e.storeInstructionPrefix(62467,16,a)}},E.LDDICT={load:e=>(e.skip(16),t.LDDICT()),store:(e,a)=>{e.storeInstructionPrefix(62468,16,a)}},E.PLDDICT={load:e=>(e.skip(16),t.PLDDICT()),store:(e,a)=>{e.storeInstructionPrefix(62469,16,a)}},E.LDDICTQ={load:e=>(e.skip(16),t.LDDICTQ()),store:(e,a)=>{e.storeInstructionPrefix(62470,16,a)}},E.PLDDICTQ={load:e=>(e.skip(16),t.PLDDICTQ()),store:(e,a)=>{e.storeInstructionPrefix(62471,16,a)}},E.PFXDICTSET={load:e=>(e.skip(16),t.PFXDICTSET()),store:(e,a)=>{e.storeInstructionPrefix(62576,16,a)}},E.PFXDICTREPLACE={load:e=>(e.skip(16),t.PFXDICTREPLACE()),store:(e,a)=>{e.storeInstructionPrefix(62577,16,a)}},E.PFXDICTADD={load:e=>(e.skip(16),t.PFXDICTADD()),store:(e,a)=>{e.storeInstructionPrefix(62578,16,a)}},E.PFXDICTDEL={load:e=>(e.skip(16),t.PFXDICTDEL()),store:(e,a)=>{e.storeInstructionPrefix(62579,16,a)}},E.PFXDICTGETQ={load:e=>(e.skip(16),t.PFXDICTGETQ()),store:(e,a)=>{e.storeInstructionPrefix(62632,16,a)}},E.PFXDICTGET={load:e=>(e.skip(16),t.PFXDICTGET()),store:(e,a)=>{e.storeInstructionPrefix(62633,16,a)}},E.PFXDICTGETJMP={load:e=>(e.skip(16),t.PFXDICTGETJMP()),store:(e,a)=>{e.storeInstructionPrefix(62634,16,a)}},E.PFXDICTGETEXEC={load:e=>(e.skip(16),t.PFXDICTGETEXEC()),store:(e,a)=>{e.storeInstructionPrefix(62635,16,a)}},E.NOP={load:e=>(e.skip(8),t.NOP()),store:(e,a)=>{e.storeInstructionPrefix(0,8,a)}},E.SWAP={load:e=>(e.skip(8),t.SWAP()),store:(e,a)=>{e.storeInstructionPrefix(1,8,a)}},E.DUP={load:e=>(e.skip(8),t.DUP()),store:(e,a)=>{e.storeInstructionPrefix(32,8,a)}},E.OVER={load:e=>(e.skip(8),t.OVER()),store:(e,a)=>{e.storeInstructionPrefix(33,8,a)}},E.DROP={load:e=>(e.skip(8),t.DROP()),store:(e,a)=>{e.storeInstructionPrefix(48,8,a)}},E.NIP={load:e=>(e.skip(8),t.NIP()),store:(e,a)=>{e.storeInstructionPrefix(49,8,a)}},E.ROT={load:e=>(e.skip(8),t.ROT()),store:(e,a)=>{e.storeInstructionPrefix(88,8,a)}},E.ROTREV={load:e=>(e.skip(8),t.ROTREV()),store:(e,a)=>{e.storeInstructionPrefix(89,8,a)}},E.PICK={load:e=>(e.skip(8),t.PICK()),store:(e,a)=>{e.storeInstructionPrefix(96,8,a)}},E.ROLL={load:e=>(e.skip(8),t.ROLL()),store:(e,a)=>{e.storeInstructionPrefix(97,8,a)}},E.ROLLREV={load:e=>(e.skip(8),t.ROLLREV()),store:(e,a)=>{e.storeInstructionPrefix(98,8,a)}},E.BLKSWX={load:e=>(e.skip(8),t.BLKSWX()),store:(e,a)=>{e.storeInstructionPrefix(99,8,a)}},E.REVX={load:e=>(e.skip(8),t.REVX()),store:(e,a)=>{e.storeInstructionPrefix(100,8,a)}},E.DROPX={load:e=>(e.skip(8),t.DROPX()),store:(e,a)=>{e.storeInstructionPrefix(101,8,a)}},E.TUCK={load:e=>(e.skip(8),t.TUCK()),store:(e,a)=>{e.storeInstructionPrefix(102,8,a)}},E.XCHGX={load:e=>(e.skip(8),t.XCHGX()),store:(e,a)=>{e.storeInstructionPrefix(103,8,a)}},E.DEPTH={load:e=>(e.skip(8),t.DEPTH()),store:(e,a)=>{e.storeInstructionPrefix(104,8,a)}},E.CHKDEPTH={load:e=>(e.skip(8),t.CHKDEPTH()),store:(e,a)=>{e.storeInstructionPrefix(105,8,a)}},E.ONLYTOPX={load:e=>(e.skip(8),t.ONLYTOPX()),store:(e,a)=>{e.storeInstructionPrefix(106,8,a)}},E.ONLYX={load:e=>(e.skip(8),t.ONLYX()),store:(e,a)=>{e.storeInstructionPrefix(107,8,a)}},E.ACCEPT={load:e=>(e.skip(16),t.ACCEPT()),store:(e,a)=>{e.storeInstructionPrefix(63488,16,a)}},E.SETGASLIMIT={load:e=>(e.skip(16),t.SETGASLIMIT()),store:(e,a)=>{e.storeInstructionPrefix(63489,16,a)}},E.GASCONSUMED={load:e=>(e.skip(16),t.GASCONSUMED()),store:(e,a)=>{e.storeInstructionPrefix(63495,16,a)}},E.COMMIT={load:e=>(e.skip(16),t.COMMIT()),store:(e,a)=>{e.storeInstructionPrefix(63503,16,a)}},E.NOW={load:e=>(e.skip(16),t.NOW()),store:(e,a)=>{e.storeInstructionPrefix(63523,16,a)}},E.BLOCKLT={load:e=>(e.skip(16),t.BLOCKLT()),store:(e,a)=>{e.storeInstructionPrefix(63524,16,a)}},E.LTIME={load:e=>(e.skip(16),t.LTIME()),store:(e,a)=>{e.storeInstructionPrefix(63525,16,a)}},E.RANDSEED={load:e=>(e.skip(16),t.RANDSEED()),store:(e,a)=>{e.storeInstructionPrefix(63526,16,a)}},E.BALANCE={load:e=>(e.skip(16),t.BALANCE()),store:(e,a)=>{e.storeInstructionPrefix(63527,16,a)}},E.MYADDR={load:e=>(e.skip(16),t.MYADDR()),store:(e,a)=>{e.storeInstructionPrefix(63528,16,a)}},E.CONFIGROOT={load:e=>(e.skip(16),t.CONFIGROOT()),store:(e,a)=>{e.storeInstructionPrefix(63529,16,a)}},E.MYCODE={load:e=>(e.skip(16),t.MYCODE()),store:(e,a)=>{e.storeInstructionPrefix(63530,16,a)}},E.INCOMINGVALUE={load:e=>(e.skip(16),t.INCOMINGVALUE()),store:(e,a)=>{e.storeInstructionPrefix(63531,16,a)}},E.STORAGEFEES={load:e=>(e.skip(16),t.STORAGEFEES()),store:(e,a)=>{e.storeInstructionPrefix(63532,16,a)}},E.PREVBLOCKSINFOTUPLE={load:e=>(e.skip(16),t.PREVBLOCKSINFOTUPLE()),store:(e,a)=>{e.storeInstructionPrefix(63533,16,a)}},E.UNPACKEDCONFIGTUPLE={load:e=>(e.skip(16),t.UNPACKEDCONFIGTUPLE()),store:(e,a)=>{e.storeInstructionPrefix(63534,16,a)}},E.DUEPAYMENT={load:e=>(e.skip(16),t.DUEPAYMENT()),store:(e,a)=>{e.storeInstructionPrefix(63535,16,a)}},E.CONFIGDICT={load:e=>(e.skip(16),t.CONFIGDICT()),store:(e,a)=>{e.storeInstructionPrefix(63536,16,a)}},E.CONFIGPARAM={load:e=>(e.skip(16),t.CONFIGPARAM()),store:(e,a)=>{e.storeInstructionPrefix(63538,16,a)}},E.CONFIGOPTPARAM={load:e=>(e.skip(16),t.CONFIGOPTPARAM()),store:(e,a)=>{e.storeInstructionPrefix(63539,16,a)}},E.PREVMCBLOCKS={load:e=>(e.skip(24),t.PREVMCBLOCKS()),store:(e,a)=>{e.storeInstructionPrefix(16266240,24,a)}},E.PREVKEYBLOCK={load:e=>(e.skip(24),t.PREVKEYBLOCK()),store:(e,a)=>{e.storeInstructionPrefix(16266241,24,a)}},E.PREVMCBLOCKS_100={load:e=>(e.skip(24),t.PREVMCBLOCKS_100()),store:(e,a)=>{e.storeInstructionPrefix(16266242,24,a)}},E.GLOBALID={load:e=>(e.skip(16),t.GLOBALID()),store:(e,a)=>{e.storeInstructionPrefix(63541,16,a)}},E.GETGASFEE={load:e=>(e.skip(16),t.GETGASFEE()),store:(e,a)=>{e.storeInstructionPrefix(63542,16,a)}},E.GETSTORAGEFEE={load:e=>(e.skip(16),t.GETSTORAGEFEE()),store:(e,a)=>{e.storeInstructionPrefix(63543,16,a)}},E.GETFORWARDFEE={load:e=>(e.skip(16),t.GETFORWARDFEE()),store:(e,a)=>{e.storeInstructionPrefix(63544,16,a)}},E.GETPRECOMPILEDGAS={load:e=>(e.skip(16),t.GETPRECOMPILEDGAS()),store:(e,a)=>{e.storeInstructionPrefix(63545,16,a)}},E.GETORIGINALFWDFEE={load:e=>(e.skip(16),t.GETORIGINALFWDFEE()),store:(e,a)=>{e.storeInstructionPrefix(63546,16,a)}},E.GETGASFEESIMPLE={load:e=>(e.skip(16),t.GETGASFEESIMPLE()),store:(e,a)=>{e.storeInstructionPrefix(63547,16,a)}},E.GETFORWARDFEESIMPLE={load:e=>(e.skip(16),t.GETFORWARDFEESIMPLE()),store:(e,a)=>{e.storeInstructionPrefix(63548,16,a)}},E.GETGLOBVAR={load:e=>(e.skip(16),t.GETGLOBVAR()),store:(e,a)=>{e.storeInstructionPrefix(63552,16,a)}},E.SETGLOBVAR={load:e=>(e.skip(16),t.SETGLOBVAR()),store:(e,a)=>{e.storeInstructionPrefix(63584,16,a)}},E.RANDU256={load:e=>(e.skip(16),t.RANDU256()),store:(e,a)=>{e.storeInstructionPrefix(63504,16,a)}},E.RAND={load:e=>(e.skip(16),t.RAND()),store:(e,a)=>{e.storeInstructionPrefix(63505,16,a)}},E.SETRAND={load:e=>(e.skip(16),t.SETRAND()),store:(e,a)=>{e.storeInstructionPrefix(63508,16,a)}},E.ADDRAND={load:e=>(e.skip(16),t.ADDRAND()),store:(e,a)=>{e.storeInstructionPrefix(63509,16,a)}},E.HASHCU={load:e=>(e.skip(16),t.HASHCU()),store:(e,a)=>{e.storeInstructionPrefix(63744,16,a)}},E.HASHSU={load:e=>(e.skip(16),t.HASHSU()),store:(e,a)=>{e.storeInstructionPrefix(63745,16,a)}},E.SHA256U={load:e=>(e.skip(16),t.SHA256U()),store:(e,a)=>{e.storeInstructionPrefix(63746,16,a)}},E.CHKSIGNU={load:e=>(e.skip(16),t.CHKSIGNU()),store:(e,a)=>{e.storeInstructionPrefix(63760,16,a)}},E.CHKSIGNS={load:e=>(e.skip(16),t.CHKSIGNS()),store:(e,a)=>{e.storeInstructionPrefix(63761,16,a)}},E.ECRECOVER={load:e=>(e.skip(16),t.ECRECOVER()),store:(e,a)=>{e.storeInstructionPrefix(63762,16,a)}},E.SECP256K1_XONLY_PUBKEY_TWEAK_ADD={load:e=>(e.skip(16),t.SECP256K1_XONLY_PUBKEY_TWEAK_ADD()),store:(e,a)=>{e.storeInstructionPrefix(63763,16,a)}},E.P256_CHKSIGNU={load:e=>(e.skip(16),t.P256_CHKSIGNU()),store:(e,a)=>{e.storeInstructionPrefix(63764,16,a)}},E.P256_CHKSIGNS={load:e=>(e.skip(16),t.P256_CHKSIGNS()),store:(e,a)=>{e.storeInstructionPrefix(63765,16,a)}},E.RIST255_FROMHASH={load:e=>(e.skip(16),t.RIST255_FROMHASH()),store:(e,a)=>{e.storeInstructionPrefix(63776,16,a)}},E.RIST255_VALIDATE={load:e=>(e.skip(16),t.RIST255_VALIDATE()),store:(e,a)=>{e.storeInstructionPrefix(63777,16,a)}},E.RIST255_ADD={load:e=>(e.skip(16),t.RIST255_ADD()),store:(e,a)=>{e.storeInstructionPrefix(63778,16,a)}},E.RIST255_SUB={load:e=>(e.skip(16),t.RIST255_SUB()),store:(e,a)=>{e.storeInstructionPrefix(63779,16,a)}},E.RIST255_MUL={load:e=>(e.skip(16),t.RIST255_MUL()),store:(e,a)=>{e.storeInstructionPrefix(63780,16,a)}},E.RIST255_MULBASE={load:e=>(e.skip(16),t.RIST255_MULBASE()),store:(e,a)=>{e.storeInstructionPrefix(63781,16,a)}},E.RIST255_PUSHL={load:e=>(e.skip(16),t.RIST255_PUSHL()),store:(e,a)=>{e.storeInstructionPrefix(63782,16,a)}},E.RIST255_QVALIDATE={load:e=>(e.skip(24),t.RIST255_QVALIDATE()),store:(e,a)=>{e.storeInstructionPrefix(12056865,24,a)}},E.RIST255_QADD={load:e=>(e.skip(24),t.RIST255_QADD()),store:(e,a)=>{e.storeInstructionPrefix(12056866,24,a)}},E.RIST255_QSUB={load:e=>(e.skip(24),t.RIST255_QSUB()),store:(e,a)=>{e.storeInstructionPrefix(12056867,24,a)}},E.RIST255_QMUL={load:e=>(e.skip(24),t.RIST255_QMUL()),store:(e,a)=>{e.storeInstructionPrefix(12056868,24,a)}},E.RIST255_QMULBASE={load:e=>(e.skip(24),t.RIST255_QMULBASE()),store:(e,a)=>{e.storeInstructionPrefix(12056869,24,a)}},E.BLS_VERIFY={load:e=>(e.skip(24),t.BLS_VERIFY()),store:(e,a)=>{e.storeInstructionPrefix(16330752,24,a)}},E.BLS_AGGREGATE={load:e=>(e.skip(24),t.BLS_AGGREGATE()),store:(e,a)=>{e.storeInstructionPrefix(16330753,24,a)}},E.BLS_FASTAGGREGATEVERIFY={load:e=>(e.skip(24),t.BLS_FASTAGGREGATEVERIFY()),store:(e,a)=>{e.storeInstructionPrefix(16330754,24,a)}},E.BLS_AGGREGATEVERIFY={load:e=>(e.skip(24),t.BLS_AGGREGATEVERIFY()),store:(e,a)=>{e.storeInstructionPrefix(16330755,24,a)}},E.BLS_G1_ADD={load:e=>(e.skip(24),t.BLS_G1_ADD()),store:(e,a)=>{e.storeInstructionPrefix(16330768,24,a)}},E.BLS_G1_SUB={load:e=>(e.skip(24),t.BLS_G1_SUB()),store:(e,a)=>{e.storeInstructionPrefix(16330769,24,a)}},E.BLS_G1_NEG={load:e=>(e.skip(24),t.BLS_G1_NEG()),store:(e,a)=>{e.storeInstructionPrefix(16330770,24,a)}},E.BLS_G1_MUL={load:e=>(e.skip(24),t.BLS_G1_MUL()),store:(e,a)=>{e.storeInstructionPrefix(16330771,24,a)}},E.BLS_G1_MULTIEXP={load:e=>(e.skip(24),t.BLS_G1_MULTIEXP()),store:(e,a)=>{e.storeInstructionPrefix(16330772,24,a)}},E.BLS_G1_ZERO={load:e=>(e.skip(24),t.BLS_G1_ZERO()),store:(e,a)=>{e.storeInstructionPrefix(16330773,24,a)}},E.BLS_MAP_TO_G1={load:e=>(e.skip(24),t.BLS_MAP_TO_G1()),store:(e,a)=>{e.storeInstructionPrefix(16330774,24,a)}},E.BLS_G1_INGROUP={load:e=>(e.skip(24),t.BLS_G1_INGROUP()),store:(e,a)=>{e.storeInstructionPrefix(16330775,24,a)}},E.BLS_G1_ISZERO={load:e=>(e.skip(24),t.BLS_G1_ISZERO()),store:(e,a)=>{e.storeInstructionPrefix(16330776,24,a)}},E.BLS_G2_ADD={load:e=>(e.skip(24),t.BLS_G2_ADD()),store:(e,a)=>{e.storeInstructionPrefix(16330784,24,a)}},E.BLS_G2_SUB={load:e=>(e.skip(24),t.BLS_G2_SUB()),store:(e,a)=>{e.storeInstructionPrefix(16330785,24,a)}},E.BLS_G2_NEG={load:e=>(e.skip(24),t.BLS_G2_NEG()),store:(e,a)=>{e.storeInstructionPrefix(16330786,24,a)}},E.BLS_G2_MUL={load:e=>(e.skip(24),t.BLS_G2_MUL()),store:(e,a)=>{e.storeInstructionPrefix(16330787,24,a)}},E.BLS_G2_MULTIEXP={load:e=>(e.skip(24),t.BLS_G2_MULTIEXP()),store:(e,a)=>{e.storeInstructionPrefix(16330788,24,a)}},E.BLS_G2_ZERO={load:e=>(e.skip(24),t.BLS_G2_ZERO()),store:(e,a)=>{e.storeInstructionPrefix(16330789,24,a)}},E.BLS_MAP_TO_G2={load:e=>(e.skip(24),t.BLS_MAP_TO_G2()),store:(e,a)=>{e.storeInstructionPrefix(16330790,24,a)}},E.BLS_G2_INGROUP={load:e=>(e.skip(24),t.BLS_G2_INGROUP()),store:(e,a)=>{e.storeInstructionPrefix(16330791,24,a)}},E.BLS_G2_ISZERO={load:e=>(e.skip(24),t.BLS_G2_ISZERO()),store:(e,a)=>{e.storeInstructionPrefix(16330792,24,a)}},E.BLS_PAIRING={load:e=>(e.skip(24),t.BLS_PAIRING()),store:(e,a)=>{e.storeInstructionPrefix(16330800,24,a)}},E.BLS_PUSHR={load:e=>(e.skip(24),t.BLS_PUSHR()),store:(e,a)=>{e.storeInstructionPrefix(16330801,24,a)}},E.CDATASIZEQ={load:e=>(e.skip(16),t.CDATASIZEQ()),store:(e,a)=>{e.storeInstructionPrefix(63808,16,a)}},E.CDATASIZE={load:e=>(e.skip(16),t.CDATASIZE()),store:(e,a)=>{e.storeInstructionPrefix(63809,16,a)}},E.SDATASIZEQ={load:e=>(e.skip(16),t.SDATASIZEQ()),store:(e,a)=>{e.storeInstructionPrefix(63810,16,a)}},E.SDATASIZE={load:e=>(e.skip(16),t.SDATASIZE()),store:(e,a)=>{e.storeInstructionPrefix(63811,16,a)}},E.LDGRAMS={load:e=>(e.skip(16),t.LDGRAMS()),store:(e,a)=>{e.storeInstructionPrefix(64e3,16,a)}},E.LDVARINT16={load:e=>(e.skip(16),t.LDVARINT16()),store:(e,a)=>{e.storeInstructionPrefix(64001,16,a)}},E.STGRAMS={load:e=>(e.skip(16),t.STGRAMS()),store:(e,a)=>{e.storeInstructionPrefix(64002,16,a)}},E.STVARINT16={load:e=>(e.skip(16),t.STVARINT16()),store:(e,a)=>{e.storeInstructionPrefix(64003,16,a)}},E.LDVARUINT32={load:e=>(e.skip(16),t.LDVARUINT32()),store:(e,a)=>{e.storeInstructionPrefix(64004,16,a)}},E.LDVARINT32={load:e=>(e.skip(16),t.LDVARINT32()),store:(e,a)=>{e.storeInstructionPrefix(64005,16,a)}},E.STVARUINT32={load:e=>(e.skip(16),t.STVARUINT32()),store:(e,a)=>{e.storeInstructionPrefix(64006,16,a)}},E.STVARINT32={load:e=>(e.skip(16),t.STVARINT32()),store:(e,a)=>{e.storeInstructionPrefix(64007,16,a)}},E.LDMSGADDR={load:e=>(e.skip(16),t.LDMSGADDR()),store:(e,a)=>{e.storeInstructionPrefix(64064,16,a)}},E.LDMSGADDRQ={load:e=>(e.skip(16),t.LDMSGADDRQ()),store:(e,a)=>{e.storeInstructionPrefix(64065,16,a)}},E.PARSEMSGADDR={load:e=>(e.skip(16),t.PARSEMSGADDR()),store:(e,a)=>{e.storeInstructionPrefix(64066,16,a)}},E.PARSEMSGADDRQ={load:e=>(e.skip(16),t.PARSEMSGADDRQ()),store:(e,a)=>{e.storeInstructionPrefix(64067,16,a)}},E.REWRITESTDADDR={load:e=>(e.skip(16),t.REWRITESTDADDR()),store:(e,a)=>{e.storeInstructionPrefix(64068,16,a)}},E.REWRITESTDADDRQ={load:e=>(e.skip(16),t.REWRITESTDADDRQ()),store:(e,a)=>{e.storeInstructionPrefix(64069,16,a)}},E.REWRITEVARADDR={load:e=>(e.skip(16),t.REWRITEVARADDR()),store:(e,a)=>{e.storeInstructionPrefix(64070,16,a)}},E.REWRITEVARADDRQ={load:e=>(e.skip(16),t.REWRITEVARADDRQ()),store:(e,a)=>{e.storeInstructionPrefix(64071,16,a)}},E.SENDRAWMSG={load:e=>(e.skip(16),t.SENDRAWMSG()),store:(e,a)=>{e.storeInstructionPrefix(64256,16,a)}},E.RAWRESERVE={load:e=>(e.skip(16),t.RAWRESERVE()),store:(e,a)=>{e.storeInstructionPrefix(64258,16,a)}},E.RAWRESERVEX={load:e=>(e.skip(16),t.RAWRESERVEX()),store:(e,a)=>{e.storeInstructionPrefix(64259,16,a)}},E.SETCODE={load:e=>(e.skip(16),t.SETCODE()),store:(e,a)=>{e.storeInstructionPrefix(64260,16,a)}},E.SETLIBCODE={load:e=>(e.skip(16),t.SETLIBCODE()),store:(e,a)=>{e.storeInstructionPrefix(64262,16,a)}},E.CHANGELIB={load:e=>(e.skip(16),t.CHANGELIB()),store:(e,a)=>{e.storeInstructionPrefix(64263,16,a)}},E.SENDMSG={load:e=>(e.skip(16),t.SENDMSG()),store:(e,a)=>{e.storeInstructionPrefix(64264,16,a)}},E.PUSHNULL={load:e=>(e.skip(8),t.PUSHNULL()),store:(e,a)=>{e.storeInstructionPrefix(109,8,a)}},E.ISNULL={load:e=>(e.skip(8),t.ISNULL()),store:(e,a)=>{e.storeInstructionPrefix(110,8,a)}},E.TUPLEVAR={load:e=>(e.skip(16),t.TUPLEVAR()),store:(e,a)=>{e.storeInstructionPrefix(28544,16,a)}},E.INDEXVAR={load:e=>(e.skip(16),t.INDEXVAR()),store:(e,a)=>{e.storeInstructionPrefix(28545,16,a)}},E.UNTUPLEVAR={load:e=>(e.skip(16),t.UNTUPLEVAR()),store:(e,a)=>{e.storeInstructionPrefix(28546,16,a)}},E.UNPACKFIRSTVAR={load:e=>(e.skip(16),t.UNPACKFIRSTVAR()),store:(e,a)=>{e.storeInstructionPrefix(28547,16,a)}},E.EXPLODEVAR={load:e=>(e.skip(16),t.EXPLODEVAR()),store:(e,a)=>{e.storeInstructionPrefix(28548,16,a)}},E.SETINDEXVAR={load:e=>(e.skip(16),t.SETINDEXVAR()),store:(e,a)=>{e.storeInstructionPrefix(28549,16,a)}},E.INDEXVARQ={load:e=>(e.skip(16),t.INDEXVARQ()),store:(e,a)=>{e.storeInstructionPrefix(28550,16,a)}},E.SETINDEXVARQ={load:e=>(e.skip(16),t.SETINDEXVARQ()),store:(e,a)=>{e.storeInstructionPrefix(28551,16,a)}},E.TLEN={load:e=>(e.skip(16),t.TLEN()),store:(e,a)=>{e.storeInstructionPrefix(28552,16,a)}},E.QTLEN={load:e=>(e.skip(16),t.QTLEN()),store:(e,a)=>{e.storeInstructionPrefix(28553,16,a)}},E.ISTUPLE={load:e=>(e.skip(16),t.ISTUPLE()),store:(e,a)=>{e.storeInstructionPrefix(28554,16,a)}},E.LAST={load:e=>(e.skip(16),t.LAST()),store:(e,a)=>{e.storeInstructionPrefix(28555,16,a)}},E.TPUSH={load:e=>(e.skip(16),t.TPUSH()),store:(e,a)=>{e.storeInstructionPrefix(28556,16,a)}},E.TPOP={load:e=>(e.skip(16),t.TPOP()),store:(e,a)=>{e.storeInstructionPrefix(28557,16,a)}},E.NULLSWAPIF={load:e=>(e.skip(16),t.NULLSWAPIF()),store:(e,a)=>{e.storeInstructionPrefix(28576,16,a)}},E.NULLSWAPIFNOT={load:e=>(e.skip(16),t.NULLSWAPIFNOT()),store:(e,a)=>{e.storeInstructionPrefix(28577,16,a)}},E.NULLROTRIF={load:e=>(e.skip(16),t.NULLROTRIF()),store:(e,a)=>{e.storeInstructionPrefix(28578,16,a)}},E.NULLROTRIFNOT={load:e=>(e.skip(16),t.NULLROTRIFNOT()),store:(e,a)=>{e.storeInstructionPrefix(28579,16,a)}},E.NULLSWAPIF2={load:e=>(e.skip(16),t.NULLSWAPIF2()),store:(e,a)=>{e.storeInstructionPrefix(28580,16,a)}},E.NULLSWAPIFNOT2={load:e=>(e.skip(16),t.NULLSWAPIFNOT2()),store:(e,a)=>{e.storeInstructionPrefix(28581,16,a)}},E.NULLROTRIF2={load:e=>(e.skip(16),t.NULLROTRIF2()),store:(e,a)=>{e.storeInstructionPrefix(28582,16,a)}},E.NULLROTRIFNOT2={load:e=>(e.skip(16),t.NULLROTRIFNOT2()),store:(e,a)=>{e.storeInstructionPrefix(28583,16,a)}},E.ADDDIVMOD={load:e=>(e.skip(16),t.ADDDIVMOD()),store:(e,a)=>{e.storeInstructionPrefix(43264,16,a)}},E.ADDDIVMODR={load:e=>(e.skip(16),t.ADDDIVMODR()),store:(e,a)=>{e.storeInstructionPrefix(43265,16,a)}},E.ADDDIVMODC={load:e=>(e.skip(16),t.ADDDIVMODC()),store:(e,a)=>{e.storeInstructionPrefix(43266,16,a)}},E.DIV={load:e=>(e.skip(16),t.DIV()),store:(e,a)=>{e.storeInstructionPrefix(43268,16,a)}},E.DIVR={load:e=>(e.skip(16),t.DIVR()),store:(e,a)=>{e.storeInstructionPrefix(43269,16,a)}},E.DIVC={load:e=>(e.skip(16),t.DIVC()),store:(e,a)=>{e.storeInstructionPrefix(43270,16,a)}},E.MOD={load:e=>(e.skip(16),t.MOD()),store:(e,a)=>{e.storeInstructionPrefix(43272,16,a)}},E.MODR={load:e=>(e.skip(16),t.MODR()),store:(e,a)=>{e.storeInstructionPrefix(43273,16,a)}},E.MODC={load:e=>(e.skip(16),t.MODC()),store:(e,a)=>{e.storeInstructionPrefix(43274,16,a)}},E.DIVMOD={load:e=>(e.skip(16),t.DIVMOD()),store:(e,a)=>{e.storeInstructionPrefix(43276,16,a)}},E.DIVMODR={load:e=>(e.skip(16),t.DIVMODR()),store:(e,a)=>{e.storeInstructionPrefix(43277,16,a)}},E.DIVMODC={load:e=>(e.skip(16),t.DIVMODC()),store:(e,a)=>{e.storeInstructionPrefix(43278,16,a)}},E.QADDDIVMOD={load:e=>(e.skip(24),t.QADDDIVMOD()),store:(e,a)=>{e.storeInstructionPrefix(12036352,24,a)}},E.QADDDIVMODR={load:e=>(e.skip(24),t.QADDDIVMODR()),store:(e,a)=>{e.storeInstructionPrefix(12036353,24,a)}},E.QADDDIVMODC={load:e=>(e.skip(24),t.QADDDIVMODC()),store:(e,a)=>{e.storeInstructionPrefix(12036354,24,a)}},E.QDIV={load:e=>(e.skip(24),t.QDIV()),store:(e,a)=>{e.storeInstructionPrefix(12036356,24,a)}},E.QDIVR={load:e=>(e.skip(24),t.QDIVR()),store:(e,a)=>{e.storeInstructionPrefix(12036357,24,a)}},E.QDIVC={load:e=>(e.skip(24),t.QDIVC()),store:(e,a)=>{e.storeInstructionPrefix(12036358,24,a)}},E.QMOD={load:e=>(e.skip(24),t.QMOD()),store:(e,a)=>{e.storeInstructionPrefix(12036360,24,a)}},E.QMODR={load:e=>(e.skip(24),t.QMODR()),store:(e,a)=>{e.storeInstructionPrefix(12036361,24,a)}},E.QMODC={load:e=>(e.skip(24),t.QMODC()),store:(e,a)=>{e.storeInstructionPrefix(12036362,24,a)}},E.QDIVMOD={load:e=>(e.skip(24),t.QDIVMOD()),store:(e,a)=>{e.storeInstructionPrefix(12036364,24,a)}},E.QDIVMODR={load:e=>(e.skip(24),t.QDIVMODR()),store:(e,a)=>{e.storeInstructionPrefix(12036365,24,a)}},E.QDIVMODC={load:e=>(e.skip(24),t.QDIVMODC()),store:(e,a)=>{e.storeInstructionPrefix(12036366,24,a)}},E.ADDRSHIFTMOD={load:e=>(e.skip(16),t.ADDRSHIFTMOD()),store:(e,a)=>{e.storeInstructionPrefix(43296,16,a)}},E.ADDRSHIFTMODR={load:e=>(e.skip(16),t.ADDRSHIFTMODR()),store:(e,a)=>{e.storeInstructionPrefix(43297,16,a)}},E.ADDRSHIFTMODC={load:e=>(e.skip(16),t.ADDRSHIFTMODC()),store:(e,a)=>{e.storeInstructionPrefix(43298,16,a)}},E.RSHIFTR={load:e=>(e.skip(16),t.RSHIFTR()),store:(e,a)=>{e.storeInstructionPrefix(43301,16,a)}},E.RSHIFTC={load:e=>(e.skip(16),t.RSHIFTC()),store:(e,a)=>{e.storeInstructionPrefix(43302,16,a)}},E.MODPOW2={load:e=>(e.skip(16),t.MODPOW2()),store:(e,a)=>{e.storeInstructionPrefix(43304,16,a)}},E.MODPOW2R={load:e=>(e.skip(16),t.MODPOW2R()),store:(e,a)=>{e.storeInstructionPrefix(43305,16,a)}},E.MODPOW2C={load:e=>(e.skip(16),t.MODPOW2C()),store:(e,a)=>{e.storeInstructionPrefix(43306,16,a)}},E.RSHIFTMOD={load:e=>(e.skip(16),t.RSHIFTMOD()),store:(e,a)=>{e.storeInstructionPrefix(43308,16,a)}},E.RSHIFTMODR={load:e=>(e.skip(16),t.RSHIFTMODR()),store:(e,a)=>{e.storeInstructionPrefix(43309,16,a)}},E.RSHIFTMODC={load:e=>(e.skip(16),t.RSHIFTMODC()),store:(e,a)=>{e.storeInstructionPrefix(43310,16,a)}},E.QADDRSHIFTMOD={load:e=>(e.skip(24),t.QADDRSHIFTMOD()),store:(e,a)=>{e.storeInstructionPrefix(12036384,24,a)}},E.QADDRSHIFTMODR={load:e=>(e.skip(24),t.QADDRSHIFTMODR()),store:(e,a)=>{e.storeInstructionPrefix(12036385,24,a)}},E.QADDRSHIFTMODC={load:e=>(e.skip(24),t.QADDRSHIFTMODC()),store:(e,a)=>{e.storeInstructionPrefix(12036386,24,a)}},E.QRSHIFTR={load:e=>(e.skip(24),t.QRSHIFTR()),store:(e,a)=>{e.storeInstructionPrefix(12036389,24,a)}},E.QRSHIFTC={load:e=>(e.skip(24),t.QRSHIFTC()),store:(e,a)=>{e.storeInstructionPrefix(12036390,24,a)}},E.QMODPOW2={load:e=>(e.skip(24),t.QMODPOW2()),store:(e,a)=>{e.storeInstructionPrefix(12036392,24,a)}},E.QMODPOW2R={load:e=>(e.skip(24),t.QMODPOW2R()),store:(e,a)=>{e.storeInstructionPrefix(12036393,24,a)}},E.QMODPOW2C={load:e=>(e.skip(24),t.QMODPOW2C()),store:(e,a)=>{e.storeInstructionPrefix(12036394,24,a)}},E.QRSHIFTMOD={load:e=>(e.skip(24),t.QRSHIFTMOD()),store:(e,a)=>{e.storeInstructionPrefix(12036396,24,a)}},E.QRSHIFTMODR={load:e=>(e.skip(24),t.QRSHIFTMODR()),store:(e,a)=>{e.storeInstructionPrefix(12036397,24,a)}},E.QRSHIFTMODC={load:e=>(e.skip(24),t.QRSHIFTMODC()),store:(e,a)=>{e.storeInstructionPrefix(12036398,24,a)}},E.MULADDDIVMOD={load:e=>(e.skip(16),t.MULADDDIVMOD()),store:(e,a)=>{e.storeInstructionPrefix(43392,16,a)}},E.MULADDDIVMODR={load:e=>(e.skip(16),t.MULADDDIVMODR()),store:(e,a)=>{e.storeInstructionPrefix(43393,16,a)}},E.MULADDDIVMODC={load:e=>(e.skip(16),t.MULADDDIVMODC()),store:(e,a)=>{e.storeInstructionPrefix(43394,16,a)}},E.MULDIV={load:e=>(e.skip(16),t.MULDIV()),store:(e,a)=>{e.storeInstructionPrefix(43396,16,a)}},E.MULDIVR={load:e=>(e.skip(16),t.MULDIVR()),store:(e,a)=>{e.storeInstructionPrefix(43397,16,a)}},E.MULDIVC={load:e=>(e.skip(16),t.MULDIVC()),store:(e,a)=>{e.storeInstructionPrefix(43398,16,a)}},E.MULMOD={load:e=>(e.skip(16),t.MULMOD()),store:(e,a)=>{e.storeInstructionPrefix(43400,16,a)}},E.MULMODR={load:e=>(e.skip(16),t.MULMODR()),store:(e,a)=>{e.storeInstructionPrefix(43401,16,a)}},E.MULMODC={load:e=>(e.skip(16),t.MULMODC()),store:(e,a)=>{e.storeInstructionPrefix(43402,16,a)}},E.MULDIVMOD={load:e=>(e.skip(16),t.MULDIVMOD()),store:(e,a)=>{e.storeInstructionPrefix(43404,16,a)}},E.MULDIVMODR={load:e=>(e.skip(16),t.MULDIVMODR()),store:(e,a)=>{e.storeInstructionPrefix(43405,16,a)}},E.MULDIVMODC={load:e=>(e.skip(16),t.MULDIVMODC()),store:(e,a)=>{e.storeInstructionPrefix(43406,16,a)}},E.QMULADDDIVMOD={load:e=>(e.skip(24),t.QMULADDDIVMOD()),store:(e,a)=>{e.storeInstructionPrefix(12036480,24,a)}},E.QMULADDDIVMODR={load:e=>(e.skip(24),t.QMULADDDIVMODR()),store:(e,a)=>{e.storeInstructionPrefix(12036481,24,a)}},E.QMULADDDIVMODC={load:e=>(e.skip(24),t.QMULADDDIVMODC()),store:(e,a)=>{e.storeInstructionPrefix(12036482,24,a)}},E.QMULDIV={load:e=>(e.skip(24),t.QMULDIV()),store:(e,a)=>{e.storeInstructionPrefix(12036484,24,a)}},E.QMULDIVR={load:e=>(e.skip(24),t.QMULDIVR()),store:(e,a)=>{e.storeInstructionPrefix(12036485,24,a)}},E.QMULDIVC={load:e=>(e.skip(24),t.QMULDIVC()),store:(e,a)=>{e.storeInstructionPrefix(12036486,24,a)}},E.QMULMOD={load:e=>(e.skip(24),t.QMULMOD()),store:(e,a)=>{e.storeInstructionPrefix(12036488,24,a)}},E.QMULMODR={load:e=>(e.skip(24),t.QMULMODR()),store:(e,a)=>{e.storeInstructionPrefix(12036489,24,a)}},E.QMULMODC={load:e=>(e.skip(24),t.QMULMODC()),store:(e,a)=>{e.storeInstructionPrefix(12036490,24,a)}},E.QMULDIVMOD={load:e=>(e.skip(24),t.QMULDIVMOD()),store:(e,a)=>{e.storeInstructionPrefix(12036492,24,a)}},E.QMULDIVMODR={load:e=>(e.skip(24),t.QMULDIVMODR()),store:(e,a)=>{e.storeInstructionPrefix(12036493,24,a)}},E.QMULDIVMODC={load:e=>(e.skip(24),t.QMULDIVMODC()),store:(e,a)=>{e.storeInstructionPrefix(12036494,24,a)}},E.MULADDRSHIFTMOD={load:e=>(e.skip(16),t.MULADDRSHIFTMOD()),store:(e,a)=>{e.storeInstructionPrefix(43424,16,a)}},E.MULADDRSHIFTRMOD={load:e=>(e.skip(16),t.MULADDRSHIFTRMOD()),store:(e,a)=>{e.storeInstructionPrefix(43425,16,a)}},E.MULADDRSHIFTCMOD={load:e=>(e.skip(16),t.MULADDRSHIFTCMOD()),store:(e,a)=>{e.storeInstructionPrefix(43426,16,a)}},E.MULRSHIFT={load:e=>(e.skip(16),t.MULRSHIFT()),store:(e,a)=>{e.storeInstructionPrefix(43428,16,a)}},E.MULRSHIFTR={load:e=>(e.skip(16),t.MULRSHIFTR()),store:(e,a)=>{e.storeInstructionPrefix(43429,16,a)}},E.MULRSHIFTC={load:e=>(e.skip(16),t.MULRSHIFTC()),store:(e,a)=>{e.storeInstructionPrefix(43430,16,a)}},E.MULMODPOW2={load:e=>(e.skip(16),t.MULMODPOW2()),store:(e,a)=>{e.storeInstructionPrefix(43432,16,a)}},E.MULMODPOW2R={load:e=>(e.skip(16),t.MULMODPOW2R()),store:(e,a)=>{e.storeInstructionPrefix(43433,16,a)}},E.MULMODPOW2C={load:e=>(e.skip(16),t.MULMODPOW2C()),store:(e,a)=>{e.storeInstructionPrefix(43434,16,a)}},E.MULRSHIFTMOD={load:e=>(e.skip(16),t.MULRSHIFTMOD()),store:(e,a)=>{e.storeInstructionPrefix(43436,16,a)}},E.MULRSHIFTRMOD={load:e=>(e.skip(16),t.MULRSHIFTRMOD()),store:(e,a)=>{e.storeInstructionPrefix(43437,16,a)}},E.MULRSHIFTCMOD={load:e=>(e.skip(16),t.MULRSHIFTCMOD()),store:(e,a)=>{e.storeInstructionPrefix(43438,16,a)}},E.QMULADDRSHIFTMOD={load:e=>(e.skip(24),t.QMULADDRSHIFTMOD()),store:(e,a)=>{e.storeInstructionPrefix(12036512,24,a)}},E.QMULADDRSHIFTRMOD={load:e=>(e.skip(24),t.QMULADDRSHIFTRMOD()),store:(e,a)=>{e.storeInstructionPrefix(12036513,24,a)}},E.QMULADDRSHIFTCMOD={load:e=>(e.skip(24),t.QMULADDRSHIFTCMOD()),store:(e,a)=>{e.storeInstructionPrefix(12036514,24,a)}},E.QMULRSHIFT={load:e=>(e.skip(24),t.QMULRSHIFT()),store:(e,a)=>{e.storeInstructionPrefix(12036516,24,a)}},E.QMULRSHIFTR={load:e=>(e.skip(24),t.QMULRSHIFTR()),store:(e,a)=>{e.storeInstructionPrefix(12036517,24,a)}},E.QMULRSHIFTC={load:e=>(e.skip(24),t.QMULRSHIFTC()),store:(e,a)=>{e.storeInstructionPrefix(12036518,24,a)}},E.QMULMODPOW2={load:e=>(e.skip(24),t.QMULMODPOW2()),store:(e,a)=>{e.storeInstructionPrefix(12036520,24,a)}},E.QMULMODPOW2R={load:e=>(e.skip(24),t.QMULMODPOW2R()),store:(e,a)=>{e.storeInstructionPrefix(12036521,24,a)}},E.QMULMODPOW2C={load:e=>(e.skip(24),t.QMULMODPOW2C()),store:(e,a)=>{e.storeInstructionPrefix(12036522,24,a)}},E.QMULRSHIFTMOD={load:e=>(e.skip(24),t.QMULRSHIFTMOD()),store:(e,a)=>{e.storeInstructionPrefix(12036524,24,a)}},E.QMULRSHIFTRMOD={load:e=>(e.skip(24),t.QMULRSHIFTRMOD()),store:(e,a)=>{e.storeInstructionPrefix(12036525,24,a)}},E.QMULRSHIFTCMOD={load:e=>(e.skip(24),t.QMULRSHIFTCMOD()),store:(e,a)=>{e.storeInstructionPrefix(12036526,24,a)}},E.LSHIFTADDDIVMOD={load:e=>(e.skip(16),t.LSHIFTADDDIVMOD()),store:(e,a)=>{e.storeInstructionPrefix(43456,16,a)}},E.LSHIFTADDDIVMODR={load:e=>(e.skip(16),t.LSHIFTADDDIVMODR()),store:(e,a)=>{e.storeInstructionPrefix(43457,16,a)}},E.LSHIFTADDDIVMODC={load:e=>(e.skip(16),t.LSHIFTADDDIVMODC()),store:(e,a)=>{e.storeInstructionPrefix(43458,16,a)}},E.LSHIFTDIV={load:e=>(e.skip(16),t.LSHIFTDIV()),store:(e,a)=>{e.storeInstructionPrefix(43460,16,a)}},E.LSHIFTDIVR={load:e=>(e.skip(16),t.LSHIFTDIVR()),store:(e,a)=>{e.storeInstructionPrefix(43461,16,a)}},E.LSHIFTDIVC={load:e=>(e.skip(16),t.LSHIFTDIVC()),store:(e,a)=>{e.storeInstructionPrefix(43462,16,a)}},E.LSHIFTMOD={load:e=>(e.skip(16),t.LSHIFTMOD()),store:(e,a)=>{e.storeInstructionPrefix(43464,16,a)}},E.LSHIFTMODR={load:e=>(e.skip(16),t.LSHIFTMODR()),store:(e,a)=>{e.storeInstructionPrefix(43465,16,a)}},E.LSHIFTMODC={load:e=>(e.skip(16),t.LSHIFTMODC()),store:(e,a)=>{e.storeInstructionPrefix(43466,16,a)}},E.LSHIFTDIVMOD={load:e=>(e.skip(16),t.LSHIFTDIVMOD()),store:(e,a)=>{e.storeInstructionPrefix(43468,16,a)}},E.LSHIFTDIVMODR={load:e=>(e.skip(16),t.LSHIFTDIVMODR()),store:(e,a)=>{e.storeInstructionPrefix(43469,16,a)}},E.LSHIFTDIVMODC={load:e=>(e.skip(16),t.LSHIFTDIVMODC()),store:(e,a)=>{e.storeInstructionPrefix(43470,16,a)}},E.QLSHIFTADDDIVMOD={load:e=>(e.skip(24),t.QLSHIFTADDDIVMOD()),store:(e,a)=>{e.storeInstructionPrefix(12036544,24,a)}},E.QLSHIFTADDDIVMODR={load:e=>(e.skip(24),t.QLSHIFTADDDIVMODR()),store:(e,a)=>{e.storeInstructionPrefix(12036545,24,a)}},E.QLSHIFTADDDIVMODC={load:e=>(e.skip(24),t.QLSHIFTADDDIVMODC()),store:(e,a)=>{e.storeInstructionPrefix(12036546,24,a)}},E.QLSHIFTDIV={load:e=>(e.skip(24),t.QLSHIFTDIV()),store:(e,a)=>{e.storeInstructionPrefix(12036548,24,a)}},E.QLSHIFTDIVR={load:e=>(e.skip(24),t.QLSHIFTDIVR()),store:(e,a)=>{e.storeInstructionPrefix(12036549,24,a)}},E.QLSHIFTDIVC={load:e=>(e.skip(24),t.QLSHIFTDIVC()),store:(e,a)=>{e.storeInstructionPrefix(12036550,24,a)}},E.QLSHIFTMOD={load:e=>(e.skip(24),t.QLSHIFTMOD()),store:(e,a)=>{e.storeInstructionPrefix(12036552,24,a)}},E.QLSHIFTMODR={load:e=>(e.skip(24),t.QLSHIFTMODR()),store:(e,a)=>{e.storeInstructionPrefix(12036553,24,a)}},E.QLSHIFTMODC={load:e=>(e.skip(24),t.QLSHIFTMODC()),store:(e,a)=>{e.storeInstructionPrefix(12036554,24,a)}},E.QLSHIFTDIVMOD={load:e=>(e.skip(24),t.QLSHIFTDIVMOD()),store:(e,a)=>{e.storeInstructionPrefix(12036556,24,a)}},E.QLSHIFTDIVMODR={load:e=>(e.skip(24),t.QLSHIFTDIVMODR()),store:(e,a)=>{e.storeInstructionPrefix(12036557,24,a)}},E.QLSHIFTDIVMODC={load:e=>(e.skip(24),t.QLSHIFTDIVMODC()),store:(e,a)=>{e.storeInstructionPrefix(12036558,24,a)}},E.STIX={load:e=>(e.skip(16),t.STIX()),store:(e,a)=>{e.storeInstructionPrefix(52992,16,a)}},E.STUX={load:e=>(e.skip(16),t.STUX()),store:(e,a)=>{e.storeInstructionPrefix(52993,16,a)}},E.STIXR={load:e=>(e.skip(16),t.STIXR()),store:(e,a)=>{e.storeInstructionPrefix(52994,16,a)}},E.STUXR={load:e=>(e.skip(16),t.STUXR()),store:(e,a)=>{e.storeInstructionPrefix(52995,16,a)}},E.STIXQ={load:e=>(e.skip(16),t.STIXQ()),store:(e,a)=>{e.storeInstructionPrefix(52996,16,a)}},E.STUXQ={load:e=>(e.skip(16),t.STUXQ()),store:(e,a)=>{e.storeInstructionPrefix(52997,16,a)}},E.STIXRQ={load:e=>(e.skip(16),t.STIXRQ()),store:(e,a)=>{e.storeInstructionPrefix(52998,16,a)}},E.STUXRQ={load:e=>(e.skip(16),t.STUXRQ()),store:(e,a)=>{e.storeInstructionPrefix(52999,16,a)}},E.STILE4={load:e=>(e.skip(16),t.STILE4()),store:(e,a)=>{e.storeInstructionPrefix(53032,16,a)}},E.STULE4={load:e=>(e.skip(16),t.STULE4()),store:(e,a)=>{e.storeInstructionPrefix(53033,16,a)}},E.STILE8={load:e=>(e.skip(16),t.STILE8()),store:(e,a)=>{e.storeInstructionPrefix(53034,16,a)}},E.STULE8={load:e=>(e.skip(16),t.STULE8()),store:(e,a)=>{e.storeInstructionPrefix(53035,16,a)}},E.LDIX={load:e=>(e.skip(16),t.LDIX()),store:(e,a)=>{e.storeInstructionPrefix(55040,16,a)}},E.LDUX={load:e=>(e.skip(16),t.LDUX()),store:(e,a)=>{e.storeInstructionPrefix(55041,16,a)}},E.PLDIX={load:e=>(e.skip(16),t.PLDIX()),store:(e,a)=>{e.storeInstructionPrefix(55042,16,a)}},E.PLDUX={load:e=>(e.skip(16),t.PLDUX()),store:(e,a)=>{e.storeInstructionPrefix(55043,16,a)}},E.LDIXQ={load:e=>(e.skip(16),t.LDIXQ()),store:(e,a)=>{e.storeInstructionPrefix(55044,16,a)}},E.LDUXQ={load:e=>(e.skip(16),t.LDUXQ()),store:(e,a)=>{e.storeInstructionPrefix(55045,16,a)}},E.PLDIXQ={load:e=>(e.skip(16),t.PLDIXQ()),store:(e,a)=>{e.storeInstructionPrefix(55046,16,a)}},E.PLDUXQ={load:e=>(e.skip(16),t.PLDUXQ()),store:(e,a)=>{e.storeInstructionPrefix(55047,16,a)}},E.LDSLICEX={load:e=>(e.skip(16),t.LDSLICEX()),store:(e,a)=>{e.storeInstructionPrefix(55064,16,a)}},E.PLDSLICEX={load:e=>(e.skip(16),t.PLDSLICEX()),store:(e,a)=>{e.storeInstructionPrefix(55065,16,a)}},E.LDSLICEXQ={load:e=>(e.skip(16),t.LDSLICEXQ()),store:(e,a)=>{e.storeInstructionPrefix(55066,16,a)}},E.PLDSLICEXQ={load:e=>(e.skip(16),t.PLDSLICEXQ()),store:(e,a)=>{e.storeInstructionPrefix(55067,16,a)}},E.LDILE4={load:e=>(e.skip(16),t.LDILE4()),store:(e,a)=>{e.storeInstructionPrefix(55120,16,a)}},E.LDULE4={load:e=>(e.skip(16),t.LDULE4()),store:(e,a)=>{e.storeInstructionPrefix(55121,16,a)}},E.LDILE8={load:e=>(e.skip(16),t.LDILE8()),store:(e,a)=>{e.storeInstructionPrefix(55122,16,a)}},E.LDULE8={load:e=>(e.skip(16),t.LDULE8()),store:(e,a)=>{e.storeInstructionPrefix(55123,16,a)}},E.PLDILE4={load:e=>(e.skip(16),t.PLDILE4()),store:(e,a)=>{e.storeInstructionPrefix(55124,16,a)}},E.PLDULE4={load:e=>(e.skip(16),t.PLDULE4()),store:(e,a)=>{e.storeInstructionPrefix(55125,16,a)}},E.PLDILE8={load:e=>(e.skip(16),t.PLDILE8()),store:(e,a)=>{e.storeInstructionPrefix(55126,16,a)}},E.PLDULE8={load:e=>(e.skip(16),t.PLDULE8()),store:(e,a)=>{e.storeInstructionPrefix(55127,16,a)}},E.LDILE4Q={load:e=>(e.skip(16),t.LDILE4Q()),store:(e,a)=>{e.storeInstructionPrefix(55128,16,a)}},E.LDULE4Q={load:e=>(e.skip(16),t.LDULE4Q()),store:(e,a)=>{e.storeInstructionPrefix(55129,16,a)}},E.LDILE8Q={load:e=>(e.skip(16),t.LDILE8Q()),store:(e,a)=>{e.storeInstructionPrefix(55130,16,a)}},E.LDULE8Q={load:e=>(e.skip(16),t.LDULE8Q()),store:(e,a)=>{e.storeInstructionPrefix(55131,16,a)}},E.PLDILE4Q={load:e=>(e.skip(16),t.PLDILE4Q()),store:(e,a)=>{e.storeInstructionPrefix(55132,16,a)}},E.PLDULE4Q={load:e=>(e.skip(16),t.PLDULE4Q()),store:(e,a)=>{e.storeInstructionPrefix(55133,16,a)}},E.PLDILE8Q={load:e=>(e.skip(16),t.PLDILE8Q()),store:(e,a)=>{e.storeInstructionPrefix(55134,16,a)}},E.PLDULE8Q={load:e=>(e.skip(16),t.PLDULE8Q()),store:(e,a)=>{e.storeInstructionPrefix(55135,16,a)}},E.DICTIGETJMP={load:e=>(e.skip(16),t.DICTIGETJMP()),store:(e,a)=>{e.storeInstructionPrefix(62624,16,a)}},E.DICTUGETJMP={load:e=>(e.skip(16),t.DICTUGETJMP()),store:(e,a)=>{e.storeInstructionPrefix(62625,16,a)}},E.DICTIGETEXEC={load:e=>(e.skip(16),t.DICTIGETEXEC()),store:(e,a)=>{e.storeInstructionPrefix(62626,16,a)}},E.DICTUGETEXEC={load:e=>(e.skip(16),t.DICTUGETEXEC()),store:(e,a)=>{e.storeInstructionPrefix(62627,16,a)}},E.DICTIGETJMPZ={load:e=>(e.skip(16),t.DICTIGETJMPZ()),store:(e,a)=>{e.storeInstructionPrefix(62652,16,a)}},E.DICTUGETJMPZ={load:e=>(e.skip(16),t.DICTUGETJMPZ()),store:(e,a)=>{e.storeInstructionPrefix(62653,16,a)}},E.DICTIGETEXECZ={load:e=>(e.skip(16),t.DICTIGETEXECZ()),store:(e,a)=>{e.storeInstructionPrefix(62654,16,a)}},E.DICTUGETEXECZ={load:e=>(e.skip(16),t.DICTUGETEXECZ()),store:(e,a)=>{e.storeInstructionPrefix(62655,16,a)}},E.DICTGET={load:e=>(e.skip(16),t.DICTGET()),store:(e,a)=>{e.storeInstructionPrefix(62474,16,a)}},E.DICTGETREF={load:e=>(e.skip(16),t.DICTGETREF()),store:(e,a)=>{e.storeInstructionPrefix(62475,16,a)}},E.DICTIGET={load:e=>(e.skip(16),t.DICTIGET()),store:(e,a)=>{e.storeInstructionPrefix(62476,16,a)}},E.DICTIGETREF={load:e=>(e.skip(16),t.DICTIGETREF()),store:(e,a)=>{e.storeInstructionPrefix(62477,16,a)}},E.DICTUGET={load:e=>(e.skip(16),t.DICTUGET()),store:(e,a)=>{e.storeInstructionPrefix(62478,16,a)}},E.DICTUGETREF={load:e=>(e.skip(16),t.DICTUGETREF()),store:(e,a)=>{e.storeInstructionPrefix(62479,16,a)}},E.DICTSET={load:e=>(e.skip(16),t.DICTSET()),store:(e,a)=>{e.storeInstructionPrefix(62482,16,a)}},E.DICTSETREF={load:e=>(e.skip(16),t.DICTSETREF()),store:(e,a)=>{e.storeInstructionPrefix(62483,16,a)}},E.DICTISET={load:e=>(e.skip(16),t.DICTISET()),store:(e,a)=>{e.storeInstructionPrefix(62484,16,a)}},E.DICTISETREF={load:e=>(e.skip(16),t.DICTISETREF()),store:(e,a)=>{e.storeInstructionPrefix(62485,16,a)}},E.DICTUSET={load:e=>(e.skip(16),t.DICTUSET()),store:(e,a)=>{e.storeInstructionPrefix(62486,16,a)}},E.DICTUSETREF={load:e=>(e.skip(16),t.DICTUSETREF()),store:(e,a)=>{e.storeInstructionPrefix(62487,16,a)}},E.DICTSETGET={load:e=>(e.skip(16),t.DICTSETGET()),store:(e,a)=>{e.storeInstructionPrefix(62490,16,a)}},E.DICTSETGETREF={load:e=>(e.skip(16),t.DICTSETGETREF()),store:(e,a)=>{e.storeInstructionPrefix(62491,16,a)}},E.DICTISETGET={load:e=>(e.skip(16),t.DICTISETGET()),store:(e,a)=>{e.storeInstructionPrefix(62492,16,a)}},E.DICTISETGETREF={load:e=>(e.skip(16),t.DICTISETGETREF()),store:(e,a)=>{e.storeInstructionPrefix(62493,16,a)}},E.DICTUSETGET={load:e=>(e.skip(16),t.DICTUSETGET()),store:(e,a)=>{e.storeInstructionPrefix(62494,16,a)}},E.DICTUSETGETREF={load:e=>(e.skip(16),t.DICTUSETGETREF()),store:(e,a)=>{e.storeInstructionPrefix(62495,16,a)}},E.DICTREPLACE={load:e=>(e.skip(16),t.DICTREPLACE()),store:(e,a)=>{e.storeInstructionPrefix(62498,16,a)}},E.DICTREPLACEREF={load:e=>(e.skip(16),t.DICTREPLACEREF()),store:(e,a)=>{e.storeInstructionPrefix(62499,16,a)}},E.DICTIREPLACE={load:e=>(e.skip(16),t.DICTIREPLACE()),store:(e,a)=>{e.storeInstructionPrefix(62500,16,a)}},E.DICTIREPLACEREF={load:e=>(e.skip(16),t.DICTIREPLACEREF()),store:(e,a)=>{e.storeInstructionPrefix(62501,16,a)}},E.DICTUREPLACE={load:e=>(e.skip(16),t.DICTUREPLACE()),store:(e,a)=>{e.storeInstructionPrefix(62502,16,a)}},E.DICTUREPLACEREF={load:e=>(e.skip(16),t.DICTUREPLACEREF()),store:(e,a)=>{e.storeInstructionPrefix(62503,16,a)}},E.DICTREPLACEGET={load:e=>(e.skip(16),t.DICTREPLACEGET()),store:(e,a)=>{e.storeInstructionPrefix(62506,16,a)}},E.DICTREPLACEGETREF={load:e=>(e.skip(16),t.DICTREPLACEGETREF()),store:(e,a)=>{e.storeInstructionPrefix(62507,16,a)}},E.DICTIREPLACEGET={load:e=>(e.skip(16),t.DICTIREPLACEGET()),store:(e,a)=>{e.storeInstructionPrefix(62508,16,a)}},E.DICTIREPLACEGETREF={load:e=>(e.skip(16),t.DICTIREPLACEGETREF()),store:(e,a)=>{e.storeInstructionPrefix(62509,16,a)}},E.DICTUREPLACEGET={load:e=>(e.skip(16),t.DICTUREPLACEGET()),store:(e,a)=>{e.storeInstructionPrefix(62510,16,a)}},E.DICTUREPLACEGETREF={load:e=>(e.skip(16),t.DICTUREPLACEGETREF()),store:(e,a)=>{e.storeInstructionPrefix(62511,16,a)}},E.DICTADD={load:e=>(e.skip(16),t.DICTADD()),store:(e,a)=>{e.storeInstructionPrefix(62514,16,a)}},E.DICTADDREF={load:e=>(e.skip(16),t.DICTADDREF()),store:(e,a)=>{e.storeInstructionPrefix(62515,16,a)}},E.DICTIADD={load:e=>(e.skip(16),t.DICTIADD()),store:(e,a)=>{e.storeInstructionPrefix(62516,16,a)}},E.DICTIADDREF={load:e=>(e.skip(16),t.DICTIADDREF()),store:(e,a)=>{e.storeInstructionPrefix(62517,16,a)}},E.DICTUADD={load:e=>(e.skip(16),t.DICTUADD()),store:(e,a)=>{e.storeInstructionPrefix(62518,16,a)}},E.DICTUADDREF={load:e=>(e.skip(16),t.DICTUADDREF()),store:(e,a)=>{e.storeInstructionPrefix(62519,16,a)}},E.DICTADDGET={load:e=>(e.skip(16),t.DICTADDGET()),store:(e,a)=>{e.storeInstructionPrefix(62522,16,a)}},E.DICTADDGETREF={load:e=>(e.skip(16),t.DICTADDGETREF()),store:(e,a)=>{e.storeInstructionPrefix(62523,16,a)}},E.DICTIADDGET={load:e=>(e.skip(16),t.DICTIADDGET()),store:(e,a)=>{e.storeInstructionPrefix(62524,16,a)}},E.DICTIADDGETREF={load:e=>(e.skip(16),t.DICTIADDGETREF()),store:(e,a)=>{e.storeInstructionPrefix(62525,16,a)}},E.DICTUADDGET={load:e=>(e.skip(16),t.DICTUADDGET()),store:(e,a)=>{e.storeInstructionPrefix(62526,16,a)}},E.DICTUADDGETREF={load:e=>(e.skip(16),t.DICTUADDGETREF()),store:(e,a)=>{e.storeInstructionPrefix(62527,16,a)}},E.DICTDELGET={load:e=>(e.skip(16),t.DICTDELGET()),store:(e,a)=>{e.storeInstructionPrefix(62562,16,a)}},E.DICTDELGETREF={load:e=>(e.skip(16),t.DICTDELGETREF()),store:(e,a)=>{e.storeInstructionPrefix(62563,16,a)}},E.DICTIDELGET={load:e=>(e.skip(16),t.DICTIDELGET()),store:(e,a)=>{e.storeInstructionPrefix(62564,16,a)}},E.DICTIDELGETREF={load:e=>(e.skip(16),t.DICTIDELGETREF()),store:(e,a)=>{e.storeInstructionPrefix(62565,16,a)}},E.DICTUDELGET={load:e=>(e.skip(16),t.DICTUDELGET()),store:(e,a)=>{e.storeInstructionPrefix(62566,16,a)}},E.DICTUDELGETREF={load:e=>(e.skip(16),t.DICTUDELGETREF()),store:(e,a)=>{e.storeInstructionPrefix(62567,16,a)}},E.DICTMIN={load:e=>(e.skip(16),t.DICTMIN()),store:(e,a)=>{e.storeInstructionPrefix(62594,16,a)}},E.DICTMINREF={load:e=>(e.skip(16),t.DICTMINREF()),store:(e,a)=>{e.storeInstructionPrefix(62595,16,a)}},E.DICTIMIN={load:e=>(e.skip(16),t.DICTIMIN()),store:(e,a)=>{e.storeInstructionPrefix(62596,16,a)}},E.DICTIMINREF={load:e=>(e.skip(16),t.DICTIMINREF()),store:(e,a)=>{e.storeInstructionPrefix(62597,16,a)}},E.DICTUMIN={load:e=>(e.skip(16),t.DICTUMIN()),store:(e,a)=>{e.storeInstructionPrefix(62598,16,a)}},E.DICTUMINREF={load:e=>(e.skip(16),t.DICTUMINREF()),store:(e,a)=>{e.storeInstructionPrefix(62599,16,a)}},E.DICTMAX={load:e=>(e.skip(16),t.DICTMAX()),store:(e,a)=>{e.storeInstructionPrefix(62602,16,a)}},E.DICTMAXREF={load:e=>(e.skip(16),t.DICTMAXREF()),store:(e,a)=>{e.storeInstructionPrefix(62603,16,a)}},E.DICTIMAX={load:e=>(e.skip(16),t.DICTIMAX()),store:(e,a)=>{e.storeInstructionPrefix(62604,16,a)}},E.DICTIMAXREF={load:e=>(e.skip(16),t.DICTIMAXREF()),store:(e,a)=>{e.storeInstructionPrefix(62605,16,a)}},E.DICTUMAX={load:e=>(e.skip(16),t.DICTUMAX()),store:(e,a)=>{e.storeInstructionPrefix(62606,16,a)}},E.DICTUMAXREF={load:e=>(e.skip(16),t.DICTUMAXREF()),store:(e,a)=>{e.storeInstructionPrefix(62607,16,a)}},E.DICTREMMIN={load:e=>(e.skip(16),t.DICTREMMIN()),store:(e,a)=>{e.storeInstructionPrefix(62610,16,a)}},E.DICTREMMINREF={load:e=>(e.skip(16),t.DICTREMMINREF()),store:(e,a)=>{e.storeInstructionPrefix(62611,16,a)}},E.DICTIREMMIN={load:e=>(e.skip(16),t.DICTIREMMIN()),store:(e,a)=>{e.storeInstructionPrefix(62612,16,a)}},E.DICTIREMMINREF={load:e=>(e.skip(16),t.DICTIREMMINREF()),store:(e,a)=>{e.storeInstructionPrefix(62613,16,a)}},E.DICTUREMMIN={load:e=>(e.skip(16),t.DICTUREMMIN()),store:(e,a)=>{e.storeInstructionPrefix(62614,16,a)}},E.DICTUREMMINREF={load:e=>(e.skip(16),t.DICTUREMMINREF()),store:(e,a)=>{e.storeInstructionPrefix(62615,16,a)}},E.DICTREMMAX={load:e=>(e.skip(16),t.DICTREMMAX()),store:(e,a)=>{e.storeInstructionPrefix(62618,16,a)}},E.DICTREMMAXREF={load:e=>(e.skip(16),t.DICTREMMAXREF()),store:(e,a)=>{e.storeInstructionPrefix(62619,16,a)}},E.DICTIREMMAX={load:e=>(e.skip(16),t.DICTIREMMAX()),store:(e,a)=>{e.storeInstructionPrefix(62620,16,a)}},E.DICTIREMMAXREF={load:e=>(e.skip(16),t.DICTIREMMAXREF()),store:(e,a)=>{e.storeInstructionPrefix(62621,16,a)}},E.DICTUREMMAX={load:e=>(e.skip(16),t.DICTUREMMAX()),store:(e,a)=>{e.storeInstructionPrefix(62622,16,a)}},E.DICTUREMMAXREF={load:e=>(e.skip(16),t.DICTUREMMAXREF()),store:(e,a)=>{e.storeInstructionPrefix(62623,16,a)}},E.DICTSETB={load:e=>(e.skip(16),t.DICTSETB()),store:(e,a)=>{e.storeInstructionPrefix(62529,16,a)}},E.DICTISETB={load:e=>(e.skip(16),t.DICTISETB()),store:(e,a)=>{e.storeInstructionPrefix(62530,16,a)}},E.DICTUSETB={load:e=>(e.skip(16),t.DICTUSETB()),store:(e,a)=>{e.storeInstructionPrefix(62531,16,a)}},E.DICTSETGETB={load:e=>(e.skip(16),t.DICTSETGETB()),store:(e,a)=>{e.storeInstructionPrefix(62533,16,a)}},E.DICTISETGETB={load:e=>(e.skip(16),t.DICTISETGETB()),store:(e,a)=>{e.storeInstructionPrefix(62534,16,a)}},E.DICTUSETGETB={load:e=>(e.skip(16),t.DICTUSETGETB()),store:(e,a)=>{e.storeInstructionPrefix(62535,16,a)}},E.DICTREPLACEB={load:e=>(e.skip(16),t.DICTREPLACEB()),store:(e,a)=>{e.storeInstructionPrefix(62537,16,a)}},E.DICTIREPLACEB={load:e=>(e.skip(16),t.DICTIREPLACEB()),store:(e,a)=>{e.storeInstructionPrefix(62538,16,a)}},E.DICTUREPLACEB={load:e=>(e.skip(16),t.DICTUREPLACEB()),store:(e,a)=>{e.storeInstructionPrefix(62539,16,a)}},E.DICTREPLACEGETB={load:e=>(e.skip(16),t.DICTREPLACEGETB()),store:(e,a)=>{e.storeInstructionPrefix(62541,16,a)}},E.DICTIREPLACEGETB={load:e=>(e.skip(16),t.DICTIREPLACEGETB()),store:(e,a)=>{e.storeInstructionPrefix(62542,16,a)}},E.DICTUREPLACEGETB={load:e=>(e.skip(16),t.DICTUREPLACEGETB()),store:(e,a)=>{e.storeInstructionPrefix(62543,16,a)}},E.DICTADDB={load:e=>(e.skip(16),t.DICTADDB()),store:(e,a)=>{e.storeInstructionPrefix(62545,16,a)}},E.DICTIADDB={load:e=>(e.skip(16),t.DICTIADDB()),store:(e,a)=>{e.storeInstructionPrefix(62546,16,a)}},E.DICTUADDB={load:e=>(e.skip(16),t.DICTUADDB()),store:(e,a)=>{e.storeInstructionPrefix(62547,16,a)}},E.DICTADDGETB={load:e=>(e.skip(16),t.DICTADDGETB()),store:(e,a)=>{e.storeInstructionPrefix(62549,16,a)}},E.DICTIADDGETB={load:e=>(e.skip(16),t.DICTIADDGETB()),store:(e,a)=>{e.storeInstructionPrefix(62550,16,a)}},E.DICTUADDGETB={load:e=>(e.skip(16),t.DICTUADDGETB()),store:(e,a)=>{e.storeInstructionPrefix(62551,16,a)}},E.DICTDEL={load:e=>(e.skip(16),t.DICTDEL()),store:(e,a)=>{e.storeInstructionPrefix(62553,16,a)}},E.DICTIDEL={load:e=>(e.skip(16),t.DICTIDEL()),store:(e,a)=>{e.storeInstructionPrefix(62554,16,a)}},E.DICTUDEL={load:e=>(e.skip(16),t.DICTUDEL()),store:(e,a)=>{e.storeInstructionPrefix(62555,16,a)}},E.DICTGETOPTREF={load:e=>(e.skip(16),t.DICTGETOPTREF()),store:(e,a)=>{e.storeInstructionPrefix(62569,16,a)}},E.DICTIGETOPTREF={load:e=>(e.skip(16),t.DICTIGETOPTREF()),store:(e,a)=>{e.storeInstructionPrefix(62570,16,a)}},E.DICTUGETOPTREF={load:e=>(e.skip(16),t.DICTUGETOPTREF()),store:(e,a)=>{e.storeInstructionPrefix(62571,16,a)}},E.DICTSETGETOPTREF={load:e=>(e.skip(16),t.DICTSETGETOPTREF()),store:(e,a)=>{e.storeInstructionPrefix(62573,16,a)}},E.DICTISETGETOPTREF={load:e=>(e.skip(16),t.DICTISETGETOPTREF()),store:(e,a)=>{e.storeInstructionPrefix(62574,16,a)}},E.DICTUSETGETOPTREF={load:e=>(e.skip(16),t.DICTUSETGETOPTREF()),store:(e,a)=>{e.storeInstructionPrefix(62575,16,a)}},E.SUBDICTGET={load:e=>(e.skip(16),t.SUBDICTGET()),store:(e,a)=>{e.storeInstructionPrefix(62641,16,a)}},E.SUBDICTIGET={load:e=>(e.skip(16),t.SUBDICTIGET()),store:(e,a)=>{e.storeInstructionPrefix(62642,16,a)}},E.SUBDICTUGET={load:e=>(e.skip(16),t.SUBDICTUGET()),store:(e,a)=>{e.storeInstructionPrefix(62643,16,a)}},E.SUBDICTRPGET={load:e=>(e.skip(16),t.SUBDICTRPGET()),store:(e,a)=>{e.storeInstructionPrefix(62645,16,a)}},E.SUBDICTIRPGET={load:e=>(e.skip(16),t.SUBDICTIRPGET()),store:(e,a)=>{e.storeInstructionPrefix(62646,16,a)}},E.SUBDICTURPGET={load:e=>(e.skip(16),t.SUBDICTURPGET()),store:(e,a)=>{e.storeInstructionPrefix(62647,16,a)}},E.THROWANY={load:e=>(e.skip(16),t.THROWANY()),store:(e,a)=>{e.storeInstructionPrefix(62192,16,a)}},E.THROWARGANY={load:e=>(e.skip(16),t.THROWARGANY()),store:(e,a)=>{e.storeInstructionPrefix(62193,16,a)}},E.THROWANYIFNOT={load:e=>(e.skip(16),t.THROWANYIFNOT()),store:(e,a)=>{e.storeInstructionPrefix(62196,16,a)}},E.THROWARGANYIFNOT={load:e=>(e.skip(16),t.THROWARGANYIFNOT()),store:(e,a)=>{e.storeInstructionPrefix(62197,16,a)}},E.DICTGETNEXT={load:e=>(e.skip(16),t.DICTGETNEXT()),store:(e,a)=>{e.storeInstructionPrefix(62580,16,a)}},E.DICTGETNEXTEQ={load:e=>(e.skip(16),t.DICTGETNEXTEQ()),store:(e,a)=>{e.storeInstructionPrefix(62581,16,a)}},E.DICTGETPREV={load:e=>(e.skip(16),t.DICTGETPREV()),store:(e,a)=>{e.storeInstructionPrefix(62582,16,a)}},E.DICTGETPREVEQ={load:e=>(e.skip(16),t.DICTGETPREVEQ()),store:(e,a)=>{e.storeInstructionPrefix(62583,16,a)}},E.DICTIGETNEXT={load:e=>(e.skip(16),t.DICTIGETNEXT()),store:(e,a)=>{e.storeInstructionPrefix(62584,16,a)}},E.DICTIGETNEXTEQ={load:e=>(e.skip(16),t.DICTIGETNEXTEQ()),store:(e,a)=>{e.storeInstructionPrefix(62585,16,a)}},E.DICTIGETPREV={load:e=>(e.skip(16),t.DICTIGETPREV()),store:(e,a)=>{e.storeInstructionPrefix(62586,16,a)}},E.DICTIGETPREVEQ={load:e=>(e.skip(16),t.DICTIGETPREVEQ()),store:(e,a)=>{e.storeInstructionPrefix(62587,16,a)}},E.DICTUGETNEXT={load:e=>(e.skip(16),t.DICTUGETNEXT()),store:(e,a)=>{e.storeInstructionPrefix(62588,16,a)}},E.DICTUGETNEXTEQ={load:e=>(e.skip(16),t.DICTUGETNEXTEQ()),store:(e,a)=>{e.storeInstructionPrefix(62589,16,a)}},E.DICTUGETPREV={load:e=>(e.skip(16),t.DICTUGETPREV()),store:(e,a)=>{e.storeInstructionPrefix(62590,16,a)}},E.DICTUGETPREVEQ={load:e=>(e.skip(16),t.DICTUGETPREVEQ()),store:(e,a)=>{e.storeInstructionPrefix(62591,16,a)}},E.ADDINT={load:e=>(e.skip(8),t.ADDINT(S.int(8).load(e))),store:(e,a)=>{e.storeInstructionPrefix(166,8,a),S.int(8).store(e,a.arg0)}},E.MULINT={load:e=>(e.skip(8),t.MULINT(S.int(8).load(e))),store:(e,a)=>{e.storeInstructionPrefix(167,8,a),S.int(8).store(e,a.arg0)}},E.QADDINT={load:e=>(e.skip(16),t.QADDINT(S.int(8).load(e))),store:(e,a)=>{e.storeInstructionPrefix(47014,16,a),S.int(8).store(e,a.arg0)}},E.QMULINT={load:e=>(e.skip(16),t.QMULINT(S.int(8).load(e))),store:(e,a)=>{e.storeInstructionPrefix(47015,16,a),S.int(8).store(e,a.arg0)}},E.EQINT={load:e=>(e.skip(8),t.EQINT(S.int(8).load(e))),store:(e,a)=>{e.storeInstructionPrefix(192,8,a),S.int(8).store(e,a.arg0)}},E.LESSINT={load:e=>(e.skip(8),t.LESSINT(S.int(8).load(e))),store:(e,a)=>{e.storeInstructionPrefix(193,8,a),S.int(8).store(e,a.arg0)}},E.GTINT={load:e=>(e.skip(8),t.GTINT(S.int(8).load(e))),store:(e,a)=>{e.storeInstructionPrefix(194,8,a),S.int(8).store(e,a.arg0)}},E.NEQINT={load:e=>(e.skip(8),t.NEQINT(S.int(8).load(e))),store:(e,a)=>{e.storeInstructionPrefix(195,8,a),S.int(8).store(e,a.arg0)}},E.QEQINT={load:e=>(e.skip(16),t.QEQINT(S.int(8).load(e))),store:(e,a)=>{e.storeInstructionPrefix(47040,16,a),S.int(8).store(e,a.arg0)}},E.QLESSINT={load:e=>(e.skip(16),t.QLESSINT(S.int(8).load(e))),store:(e,a)=>{e.storeInstructionPrefix(47041,16,a),S.int(8).store(e,a.arg0)}},E.QGTINT={load:e=>(e.skip(16),t.QGTINT(S.int(8).load(e))),store:(e,a)=>{e.storeInstructionPrefix(47042,16,a),S.int(8).store(e,a.arg0)}},E.QNEQINT={load:e=>(e.skip(16),t.QNEQINT(S.int(8).load(e))),store:(e,a)=>{e.storeInstructionPrefix(47043,16,a),S.int(8).store(e,a.arg0)}},E.PUSHPOW2DEC={load:e=>(e.skip(8),t.PUSHPOW2DEC(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(132,8,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.PUSHNEGPOW2={load:e=>(e.skip(8),t.PUSHNEGPOW2(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(133,8,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.FITS={load:e=>(e.skip(8),t.FITS(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(180,8,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.UFITS={load:e=>(e.skip(8),t.UFITS(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(181,8,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.QFITS={load:e=>(e.skip(16),t.QFITS(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(47028,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.QUFITS={load:e=>(e.skip(16),t.QUFITS(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(47029,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.SETCONTCTRMANY={load:e=>(e.skip(16),t.SETCONTCTRMANY(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(60899,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.CALLCCARGS={load:e=>(e.skip(16),t.CALLCCARGS(S.uint(4).load(e),S.uint(4).load(e))),store:(e,a)=>{e.storeInstructionPrefix(56118,16,a),S.uint(4).store(e,a.arg0),S.uint(4).store(e,a.arg1)}},E.TRYARGS={load:e=>(e.skip(8),t.TRYARGS(S.uint(4).load(e),S.uint(4).load(e))),store:(e,a)=>{e.storeInstructionPrefix(243,8,a),S.uint(4).store(e,a.arg0),S.uint(4).store(e,a.arg1)}},E.PLDREFIDX={load:e=>(e.skip(14),t.PLDREFIDX(S.uint(2).load(e))),store:(e,a)=>{e.storeInstructionPrefix(13779,14,a),S.uint(2).store(e,a.arg0)}},E.CHASHI={load:e=>(e.skip(14),t.CHASHI(S.uint(2).load(e))),store:(e,a)=>{e.storeInstructionPrefix(13786,14,a),S.uint(2).store(e,a.arg0)}},E.CDEPTHI={load:e=>(e.skip(14),t.CDEPTHI(S.uint(2).load(e))),store:(e,a)=>{e.storeInstructionPrefix(13787,14,a),S.uint(2).store(e,a.arg0)}},E.JMPDICT={load:e=>(e.skip(10),t.JMPDICT(S.uint(14).load(e))),store:(e,a)=>{e.storeInstructionPrefix(965,10,a),S.uint(14).store(e,a.arg0)}},E.PREPAREDICT={load:e=>(e.skip(10),t.PREPAREDICT(S.uint(14).load(e))),store:(e,a)=>{e.storeInstructionPrefix(966,10,a),S.uint(14).store(e,a.arg0)}},E.THROWARG={load:e=>(e.skip(13),t.THROWARG(S.uint(11).load(e))),store:(e,a)=>{e.storeInstructionPrefix(7769,13,a),S.uint(11).store(e,a.arg0)}},E.THROWARGIF={load:e=>(e.skip(13),t.THROWARGIF(S.uint(11).load(e))),store:(e,a)=>{e.storeInstructionPrefix(7771,13,a),S.uint(11).store(e,a.arg0)}},E.THROWARGIFNOT={load:e=>(e.skip(13),t.THROWARGIFNOT(S.uint(11).load(e))),store:(e,a)=>{e.storeInstructionPrefix(7773,13,a),S.uint(11).store(e,a.arg0)}},E.JMPXARGS={load:e=>(e.skip(12),t.JMPXARGS(S.uint(4).load(e))),store:(e,a)=>{e.storeInstructionPrefix(3505,12,a),S.uint(4).store(e,a.arg0)}},E.RETARGS={load:e=>(e.skip(12),t.RETARGS(S.uint(4).load(e))),store:(e,a)=>{e.storeInstructionPrefix(3506,12,a),S.uint(4).store(e,a.arg0)}},E.RETURNARGS={load:e=>(e.skip(12),t.RETURNARGS(S.uint(4).load(e))),store:(e,a)=>{e.storeInstructionPrefix(3792,12,a),S.uint(4).store(e,a.arg0)}},E.BLKDROP={load:e=>(e.skip(12),t.BLKDROP(S.uint(4).load(e))),store:(e,a)=>{e.storeInstructionPrefix(1520,12,a),S.uint(4).store(e,a.arg0)}},E.TUPLE={load:e=>(e.skip(12),t.TUPLE(S.uint(4).load(e))),store:(e,a)=>{e.storeInstructionPrefix(1776,12,a),S.uint(4).store(e,a.arg0)}},E.INDEX={load:e=>(e.skip(12),t.INDEX(S.uint(4).load(e))),store:(e,a)=>{e.storeInstructionPrefix(1777,12,a),S.uint(4).store(e,a.arg0)}},E.UNTUPLE={load:e=>(e.skip(12),t.UNTUPLE(S.uint(4).load(e))),store:(e,a)=>{e.storeInstructionPrefix(1778,12,a),S.uint(4).store(e,a.arg0)}},E.UNPACKFIRST={load:e=>(e.skip(12),t.UNPACKFIRST(S.uint(4).load(e))),store:(e,a)=>{e.storeInstructionPrefix(1779,12,a),S.uint(4).store(e,a.arg0)}},E.EXPLODE={load:e=>(e.skip(12),t.EXPLODE(S.uint(4).load(e))),store:(e,a)=>{e.storeInstructionPrefix(1780,12,a),S.uint(4).store(e,a.arg0)}},E.SETINDEX={load:e=>(e.skip(12),t.SETINDEX(S.uint(4).load(e))),store:(e,a)=>{e.storeInstructionPrefix(1781,12,a),S.uint(4).store(e,a.arg0)}},E.INDEXQ={load:e=>(e.skip(12),t.INDEXQ(S.uint(4).load(e))),store:(e,a)=>{e.storeInstructionPrefix(1782,12,a),S.uint(4).store(e,a.arg0)}},E.SETINDEXQ={load:e=>(e.skip(12),t.SETINDEXQ(S.uint(4).load(e))),store:(e,a)=>{e.storeInstructionPrefix(1783,12,a),S.uint(4).store(e,a.arg0)}},E.XC2PU={load:e=>(e.skip(12),t.XC2PU(S.uint(4).load(e),S.uint(4).load(e),S.uint(4).load(e))),store:(e,a)=>{e.storeInstructionPrefix(1345,12,a),S.uint(4).store(e,a.arg0),S.uint(4).store(e,a.arg1),S.uint(4).store(e,a.arg2)}},E.XCPU2={load:e=>(e.skip(12),t.XCPU2(S.uint(4).load(e),S.uint(4).load(e),S.uint(4).load(e))),store:(e,a)=>{e.storeInstructionPrefix(1347,12,a),S.uint(4).store(e,a.arg0),S.uint(4).store(e,a.arg1),S.uint(4).store(e,a.arg2)}},E.PUSH3={load:e=>(e.skip(12),t.PUSH3(S.uint(4).load(e),S.uint(4).load(e),S.uint(4).load(e))),store:(e,a)=>{e.storeInstructionPrefix(1351,12,a),S.uint(4).store(e,a.arg0),S.uint(4).store(e,a.arg1),S.uint(4).store(e,a.arg2)}},E.XCHG2={load:e=>(e.skip(8),t.XCHG2(S.uint(4).load(e),S.uint(4).load(e))),store:(e,a)=>{e.storeInstructionPrefix(80,8,a),S.uint(4).store(e,a.arg0),S.uint(4).store(e,a.arg1)}},E.XCPU={load:e=>(e.skip(8),t.XCPU(S.uint(4).load(e),S.uint(4).load(e))),store:(e,a)=>{e.storeInstructionPrefix(81,8,a),S.uint(4).store(e,a.arg0),S.uint(4).store(e,a.arg1)}},E.PUSH2={load:e=>(e.skip(8),t.PUSH2(S.uint(4).load(e),S.uint(4).load(e))),store:(e,a)=>{e.storeInstructionPrefix(83,8,a),S.uint(4).store(e,a.arg0),S.uint(4).store(e,a.arg1)}},E.PUXC={load:e=>(e.skip(8),t.PUXC(S.uint(4).load(e),S.delta(-1,S.uint(4)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(82,8,a),S.uint(4).store(e,a.arg0),S.delta(-1,S.uint(4)).store(e,a.arg1)}},E.XCPUXC={load:e=>(e.skip(12),t.XCPUXC(S.uint(4).load(e),S.uint(4).load(e),S.delta(-1,S.uint(4)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(1346,12,a),S.uint(4).store(e,a.arg0),S.uint(4).store(e,a.arg1),S.delta(-1,S.uint(4)).store(e,a.arg2)}},E.PUXC2={load:e=>(e.skip(12),t.PUXC2(S.uint(4).load(e),S.delta(-1,S.uint(4)).load(e),S.delta(-1,S.uint(4)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(1348,12,a),S.uint(4).store(e,a.arg0),S.delta(-1,S.uint(4)).store(e,a.arg1),S.delta(-1,S.uint(4)).store(e,a.arg2)}},E.PUXCPU={load:e=>(e.skip(12),t.PUXCPU(S.uint(4).load(e),S.delta(-1,S.uint(4)).load(e),S.delta(-1,S.uint(4)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(1349,12,a),S.uint(4).store(e,a.arg0),S.delta(-1,S.uint(4)).store(e,a.arg1),S.delta(-1,S.uint(4)).store(e,a.arg2)}},E.PU2XC={load:e=>(e.skip(12),t.PU2XC(S.uint(4).load(e),S.delta(-1,S.uint(4)).load(e),S.delta(-2,S.uint(4)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(1350,12,a),S.uint(4).store(e,a.arg0),S.delta(-1,S.uint(4)).store(e,a.arg1),S.delta(-2,S.uint(4)).store(e,a.arg2)}},E.BLKSWAP={load:e=>(e.skip(8),t.BLKSWAP(S.delta(1,S.uint(4)).load(e),S.delta(1,S.uint(4)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(85,8,a),S.delta(1,S.uint(4)).store(e,a.arg0),S.delta(1,S.uint(4)).store(e,a.arg1)}},E.REVERSE={load:e=>(e.skip(8),t.REVERSE(S.delta(2,S.uint(4)).load(e),S.uint(4).load(e))),store:(e,a)=>{e.storeInstructionPrefix(94,8,a),S.delta(2,S.uint(4)).store(e,a.arg0),S.uint(4).store(e,a.arg1)}},E.SETCONTARGS={load:e=>(e.skip(8),t.SETCONTARGS(S.uint(4).load(e),S.delta(-1,S.uint(4)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(236,8,a),S.uint(4).store(e,a.arg0),S.delta(-1,S.uint(4)).store(e,a.arg1)}},E.BLESSARGS={load:e=>(e.skip(8),t.BLESSARGS(S.uint(4).load(e),S.delta(-1,S.uint(4)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(238,8,a),S.uint(4).store(e,a.arg0),S.delta(-1,S.uint(4)).store(e,a.arg1)}},E.STIR={load:e=>(e.skip(16),t.STIR(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(53002,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.STUR={load:e=>(e.skip(16),t.STUR(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(53003,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.STIQ={load:e=>(e.skip(16),t.STIQ(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(53004,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.STUQ={load:e=>(e.skip(16),t.STUQ(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(53005,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.STIRQ={load:e=>(e.skip(16),t.STIRQ(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(53006,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.STURQ={load:e=>(e.skip(16),t.STURQ(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(53007,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.PLDI={load:e=>(e.skip(16),t.PLDI(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(55050,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.PLDU={load:e=>(e.skip(16),t.PLDU(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(55051,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.LDIQ={load:e=>(e.skip(16),t.LDIQ(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(55052,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.LDUQ={load:e=>(e.skip(16),t.LDUQ(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(55053,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.PLDIQ={load:e=>(e.skip(16),t.PLDIQ(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(55054,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.PLDUQ={load:e=>(e.skip(16),t.PLDUQ(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(55055,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.PLDUZ={load:e=>(e.skip(13),t.PLDUZ(S.plduzArg.load(e))),store:(e,a)=>{e.storeInstructionPrefix(6882,13,a),S.plduzArg.store(e,a.arg0)}},E.PLDSLICE={load:e=>(e.skip(16),t.PLDSLICE(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(55069,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.LDSLICEQ={load:e=>(e.skip(16),t.LDSLICEQ(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(55070,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.PLDSLICEQ={load:e=>(e.skip(16),t.PLDSLICEQ(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(55071,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.IFBITJMP={load:e=>(e.skip(11),t.IFBITJMP(S.uint(5).load(e))),store:(e,a)=>{e.storeInstructionPrefix(1820,11,a),S.uint(5).store(e,a.arg0)}},E.IFNBITJMP={load:e=>(e.skip(11),t.IFNBITJMP(S.uint(5).load(e))),store:(e,a)=>{e.storeInstructionPrefix(1821,11,a),S.uint(5).store(e,a.arg0)}},E.INDEX2={load:e=>(e.skip(12),t.INDEX2(S.uint(2).load(e),S.uint(2).load(e))),store:(e,a)=>{e.storeInstructionPrefix(1787,12,a),S.uint(2).store(e,a.arg0),S.uint(2).store(e,a.arg1)}},E.INDEX3={load:e=>(e.skip(10),t.INDEX3(S.uint(2).load(e),S.uint(2).load(e),S.uint(2).load(e))),store:(e,a)=>{e.storeInstructionPrefix(447,10,a),S.uint(2).store(e,a.arg0),S.uint(2).store(e,a.arg1),S.uint(2).store(e,a.arg2)}},E.PUSHPOW2={load:e=>(e.skip(8),t.PUSHPOW2(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(131,8,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.BLKPUSH={load:e=>(e.skip(8),t.BLKPUSH(S.uint(4).load(e),S.uint(4).load(e))),store:(e,a)=>{e.storeInstructionPrefix(95,8,a),S.uint(4).store(e,a.arg0),S.uint(4).store(e,a.arg1)}},E.BLKDROP2={load:e=>(e.skip(8),t.BLKDROP2(S.uint(4).load(e),S.uint(4).load(e))),store:(e,a)=>{e.storeInstructionPrefix(108,8,a),S.uint(4).store(e,a.arg0),S.uint(4).store(e,a.arg1)}},E.GETGLOB={load:e=>(e.skip(11),t.GETGLOB(S.uint(5).load(e))),store:(e,a)=>{e.storeInstructionPrefix(1986,11,a),S.uint(5).store(e,a.arg0)}},E.SETGLOB={load:e=>(e.skip(11),t.SETGLOB(S.uint(5).load(e))),store:(e,a)=>{e.storeInstructionPrefix(1987,11,a),S.uint(5).store(e,a.arg0)}},E.GETPARAM={load:e=>(e.skip(12),t.GETPARAM(S.uint(4).load(e))),store:(e,a)=>{e.storeInstructionPrefix(3970,12,a),S.uint(4).store(e,a.arg0)}},E.PUSHREF={load:e=>(e.skip(8),t.PUSHREF(S.refCodeSlice.load(e))),store:(e,a)=>{e.storeInstructionPrefix(136,8,a),S.refCodeSlice.store(e,a.arg0)}},E.PUSHREFSLICE={load:e=>(e.skip(8),t.PUSHREFSLICE(S.refCodeSlice.load(e))),store:(e,a)=>{e.storeInstructionPrefix(137,8,a),S.refCodeSlice.store(e,a.arg0)}},E.PUSHREFCONT={load:e=>(e.skip(8),t.PUSHREFCONT(S.refCodeSlice.load(e))),store:(e,a)=>{e.storeInstructionPrefix(138,8,a),S.refCodeSlice.store(e,a.arg0)}},E.CALLREF={load:e=>(e.skip(16),t.CALLREF(S.refCodeSlice.load(e))),store:(e,a)=>{e.storeInstructionPrefix(56124,16,a),S.refCodeSlice.store(e,a.arg0)}},E.JMPREF={load:e=>(e.skip(16),t.JMPREF(S.refCodeSlice.load(e))),store:(e,a)=>{e.storeInstructionPrefix(56125,16,a),S.refCodeSlice.store(e,a.arg0)}},E.JMPREFDATA={load:e=>(e.skip(16),t.JMPREFDATA(S.refCodeSlice.load(e))),store:(e,a)=>{e.storeInstructionPrefix(56126,16,a),S.refCodeSlice.store(e,a.arg0)}},E.IFREF={load:e=>(e.skip(16),t.IFREF(S.refCodeSlice.load(e))),store:(e,a)=>{e.storeInstructionPrefix(58112,16,a),S.refCodeSlice.store(e,a.arg0)}},E.IFNOTREF={load:e=>(e.skip(16),t.IFNOTREF(S.refCodeSlice.load(e))),store:(e,a)=>{e.storeInstructionPrefix(58113,16,a),S.refCodeSlice.store(e,a.arg0)}},E.IFJMPREF={load:e=>(e.skip(16),t.IFJMPREF(S.refCodeSlice.load(e))),store:(e,a)=>{e.storeInstructionPrefix(58114,16,a),S.refCodeSlice.store(e,a.arg0)}},E.IFNOTJMPREF={load:e=>(e.skip(16),t.IFNOTJMPREF(S.refCodeSlice.load(e))),store:(e,a)=>{e.storeInstructionPrefix(58115,16,a),S.refCodeSlice.store(e,a.arg0)}},E.IFREFELSE={load:e=>(e.skip(16),t.IFREFELSE(S.refCodeSlice.load(e))),store:(e,a)=>{e.storeInstructionPrefix(58125,16,a),S.refCodeSlice.store(e,a.arg0)}},E.IFELSEREF={load:e=>(e.skip(16),t.IFELSEREF(S.refCodeSlice.load(e))),store:(e,a)=>{e.storeInstructionPrefix(58126,16,a),S.refCodeSlice.store(e,a.arg0)}},E.IFREFELSEREF={load:e=>(e.skip(16),t.IFREFELSEREF(S.refCodeSlice.load(e),S.refCodeSlice.load(e))),store:(e,a)=>{e.storeInstructionPrefix(58127,16,a),S.refCodeSlice.store(e,a.arg0),S.refCodeSlice.store(e,a.arg1)}},E.IFBITJMPREF={load:e=>(e.skip(11),t.IFBITJMPREF(S.uint(5).load(e),S.refCodeSlice.load(e))),store:(e,a)=>{e.storeInstructionPrefix(1822,11,a),S.uint(5).store(e,a.arg0),S.refCodeSlice.store(e,a.arg1)}},E.IFNBITJMPREF={load:e=>(e.skip(11),t.IFNBITJMPREF(S.uint(5).load(e),S.refCodeSlice.load(e))),store:(e,a)=>{e.storeInstructionPrefix(1823,11,a),S.uint(5).store(e,a.arg0),S.refCodeSlice.store(e,a.arg1)}},E.DICTPUSHCONST={load:e=>(e.skip(14),t.DICTPUSHCONST(...S.dictpush.load(e))),store:(e,a)=>{e.storeInstructionPrefix(15657,14,a),S.dictpush.store(e,[a.arg0,a.arg1])}},E.PFXDICTSWITCH={load:e=>(e.skip(14),t.PFXDICTSWITCH(...S.dictpush.load(e))),store:(e,a)=>{e.storeInstructionPrefix(15659,14,a),S.dictpush.store(e,[a.arg0,a.arg1])}},E.SDBEGINSX={load:e=>(e.skip(16),t.SDBEGINSX()),store:(e,a)=>{e.storeInstructionPrefix(55078,16,a)}},E.SDBEGINSXQ={load:e=>(e.skip(16),t.SDBEGINSXQ()),store:(e,a)=>{e.storeInstructionPrefix(55079,16,a)}},E.SDBEGINS={load:e=>(e.skip(14),t.SDBEGINS(S.slice(S.refs(0),S.uint(7),3).load(e))),store:(e,a)=>{e.storeInstructionPrefix(13770,14,a),S.slice(S.refs(0),S.uint(7),3).store(e,a.arg0)}},E.SDBEGINSQ={load:e=>(e.skip(14),t.SDBEGINSQ(S.slice(S.refs(0),S.uint(7),3).load(e))),store:(e,a)=>{e.storeInstructionPrefix(13771,14,a),S.slice(S.refs(0),S.uint(7),3).store(e,a.arg0)}},E.STREFCONST={load:e=>(e.skip(16),t.STREFCONST(S.refCodeSlice.load(e))),store:(e,a)=>{e.storeInstructionPrefix(53024,16,a),S.refCodeSlice.store(e,a.arg0)}},E.STREF2CONST={load:e=>(e.skip(16),t.STREF2CONST(S.refCodeSlice.load(e),S.refCodeSlice.load(e))),store:(e,a)=>{e.storeInstructionPrefix(53025,16,a),S.refCodeSlice.store(e,a.arg0),S.refCodeSlice.store(e,a.arg1)}},E.THROWANYIF={load:e=>(e.skip(16),t.THROWANYIF()),store:(e,a)=>{e.storeInstructionPrefix(62194,16,a)}},E.THROWARGANYIF={load:e=>(e.skip(16),t.THROWARGANYIF()),store:(e,a)=>{e.storeInstructionPrefix(62195,16,a)}},E.DEBUGSTR={load:e=>(e.skip(12),t.DEBUGSTR(S.debugstr.load(e))),store:(e,a)=>{e.storeInstructionPrefix(4079,12,a),S.debugstr.store(e,a.arg0)}},E.SETCONTCTR={load:e=>(e.skip(12),t.SETCONTCTR(S.control.load(e))),store:(e,a)=>{e.storeInstructionPrefix(3798,12,a),S.control.store(e,a.arg0)}},E.SETRETCTR={load:e=>(e.skip(12),t.SETRETCTR(S.control.load(e))),store:(e,a)=>{e.storeInstructionPrefix(3799,12,a),S.control.store(e,a.arg0)}},E.SETALTCTR={load:e=>(e.skip(12),t.SETALTCTR(S.control.load(e))),store:(e,a)=>{e.storeInstructionPrefix(3800,12,a),S.control.store(e,a.arg0)}},E.POPSAVE={load:e=>(e.skip(12),t.POPSAVE(S.control.load(e))),store:(e,a)=>{e.storeInstructionPrefix(3801,12,a),S.control.store(e,a.arg0)}},E.SAVECTR={load:e=>(e.skip(12),t.SAVECTR(S.control.load(e))),store:(e,a)=>{e.storeInstructionPrefix(3802,12,a),S.control.store(e,a.arg0)}},E.SAVEALTCTR={load:e=>(e.skip(12),t.SAVEALTCTR(S.control.load(e))),store:(e,a)=>{e.storeInstructionPrefix(3803,12,a),S.control.store(e,a.arg0)}},E.SAVEBOTHCTR={load:e=>(e.skip(12),t.SAVEBOTHCTR(S.control.load(e))),store:(e,a)=>{e.storeInstructionPrefix(3804,12,a),S.control.store(e,a.arg0)}},E.RUNVM={load:e=>(e.skip(12),t.RUNVM(S.runvmArg.load(e))),store:(e,a)=>{e.storeInstructionPrefix(3508,12,a),S.runvmArg.store(e,a.arg0)}},E.SWAP2={load:e=>(e.skip(8),t.SWAP2()),store:(e,a)=>{e.storeInstructionPrefix(90,8,a)}},E.DROP2={load:e=>(e.skip(8),t.DROP2()),store:(e,a)=>{e.storeInstructionPrefix(91,8,a)}},E.DUP2={load:e=>(e.skip(8),t.DUP2()),store:(e,a)=>{e.storeInstructionPrefix(92,8,a)}},E.OVER2={load:e=>(e.skip(8),t.OVER2()),store:(e,a)=>{e.storeInstructionPrefix(93,8,a)}},E.ADDRSHIFT_MOD={load:e=>(e.skip(16),t.ADDRSHIFT_MOD(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(43312,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.ADDRSHIFTR_MOD={load:e=>(e.skip(16),t.ADDRSHIFTR_MOD(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(43313,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.ADDRSHIFTC_MOD={load:e=>(e.skip(16),t.ADDRSHIFTC_MOD(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(43314,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.RSHIFT_={load:e=>(e.skip(16),t.RSHIFT_(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(43316,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.RSHIFTR_={load:e=>(e.skip(16),t.RSHIFTR_(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(43317,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.RSHIFTC_={load:e=>(e.skip(16),t.RSHIFTC_(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(43318,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.MODPOW2_={load:e=>(e.skip(16),t.MODPOW2_(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(43320,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.MODPOW2R_={load:e=>(e.skip(16),t.MODPOW2R_(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(43321,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.MODPOW2C_={load:e=>(e.skip(16),t.MODPOW2C_(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(43322,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.RSHIFT_MOD={load:e=>(e.skip(16),t.RSHIFT_MOD(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(43324,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.RSHIFTR_MOD={load:e=>(e.skip(16),t.RSHIFTR_MOD(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(43325,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.RSHIFTC_MOD={load:e=>(e.skip(16),t.RSHIFTC_MOD(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(43326,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.MULADDRSHIFT_MOD={load:e=>(e.skip(16),t.MULADDRSHIFT_MOD(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(43440,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.MULADDRSHIFTR_MOD={load:e=>(e.skip(16),t.MULADDRSHIFTR_MOD(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(43441,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.MULADDRSHIFTC_MOD={load:e=>(e.skip(16),t.MULADDRSHIFTC_MOD(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(43442,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.MULRSHIFT_={load:e=>(e.skip(16),t.MULRSHIFT_(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(43444,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.MULRSHIFTR_={load:e=>(e.skip(16),t.MULRSHIFTR_(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(43445,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.MULRSHIFTC_={load:e=>(e.skip(16),t.MULRSHIFTC_(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(43446,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.MULMODPOW2_={load:e=>(e.skip(16),t.MULMODPOW2_(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(43448,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.MULMODPOW2R_={load:e=>(e.skip(16),t.MULMODPOW2R_(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(43449,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.MULMODPOW2C_={load:e=>(e.skip(16),t.MULMODPOW2C_(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(43450,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.MULRSHIFT_MOD={load:e=>(e.skip(16),t.MULRSHIFT_MOD(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(43452,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.MULRSHIFTR_MOD={load:e=>(e.skip(16),t.MULRSHIFTR_MOD(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(43453,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.MULRSHIFTC_MOD={load:e=>(e.skip(16),t.MULRSHIFTC_MOD(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(43454,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.LSHIFT_ADDDIVMOD={load:e=>(e.skip(16),t.LSHIFT_ADDDIVMOD(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(43472,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.LSHIFT_ADDDIVMODR={load:e=>(e.skip(16),t.LSHIFT_ADDDIVMODR(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(43473,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.LSHIFT_ADDDIVMODC={load:e=>(e.skip(16),t.LSHIFT_ADDDIVMODC(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(43474,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.LSHIFT_DIV={load:e=>(e.skip(16),t.LSHIFT_DIV(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(43476,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.LSHIFT_DIVR={load:e=>(e.skip(16),t.LSHIFT_DIVR(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(43477,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.LSHIFT_DIVC={load:e=>(e.skip(16),t.LSHIFT_DIVC(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(43478,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.LSHIFT_MOD={load:e=>(e.skip(16),t.LSHIFT_MOD(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(43480,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.LSHIFT_MODR={load:e=>(e.skip(16),t.LSHIFT_MODR(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(43481,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.LSHIFT_MODC={load:e=>(e.skip(16),t.LSHIFT_MODC(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(43482,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.LSHIFT_DIVMOD={load:e=>(e.skip(16),t.LSHIFT_DIVMOD(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(43484,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.LSHIFT_DIVMODR={load:e=>(e.skip(16),t.LSHIFT_DIVMODR(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(43485,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.LSHIFT_DIVMODC={load:e=>(e.skip(16),t.LSHIFT_DIVMODC(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(43486,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.HASHEXT={load:e=>(e.skip(16),t.HASHEXT(S.hash.load(e))),store:(e,a)=>{e.storeInstructionPrefix(63748,16,a),S.hash.store(e,a.arg0)}},E.HASHEXTR={load:e=>(e.skip(16),t.HASHEXTR(S.hash.load(e))),store:(e,a)=>{e.storeInstructionPrefix(63749,16,a),S.hash.store(e,a.arg0)}},E.HASHEXTA={load:e=>(e.skip(16),t.HASHEXTA(S.hash.load(e))),store:(e,a)=>{e.storeInstructionPrefix(63750,16,a),S.hash.store(e,a.arg0)}},E.HASHEXTAR={load:e=>(e.skip(16),t.HASHEXTAR(S.hash.load(e))),store:(e,a)=>{e.storeInstructionPrefix(63751,16,a),S.hash.store(e,a.arg0)}},E.STREF={load:e=>(e.skip(8),t.STREF()),store:(e,a)=>{e.storeInstructionPrefix(204,8,a)}},E.STREF_ALT={load:e=>(e.skip(16),t.STREF_ALT()),store:(e,a)=>{e.storeInstructionPrefix(53008,16,a)}},E.STSLICE={load:e=>(e.skip(8),t.STSLICE()),store:(e,a)=>{e.storeInstructionPrefix(206,8,a)}},E.STSLICE_ALT={load:e=>(e.skip(16),t.STSLICE_ALT()),store:(e,a)=>{e.storeInstructionPrefix(53010,16,a)}},E.XCHG3={load:e=>(e.skip(4),t.XCHG3(S.uint(4).load(e),S.uint(4).load(e),S.uint(4).load(e))),store:(e,a)=>{e.storeInstructionPrefix(4,4,a),S.uint(4).store(e,a.arg0),S.uint(4).store(e,a.arg1),S.uint(4).store(e,a.arg2)}},E.XCHG3_ALT={load:e=>(e.skip(12),t.XCHG3_ALT(S.uint(4).load(e),S.uint(4).load(e),S.uint(4).load(e))),store:(e,a)=>{e.storeInstructionPrefix(1344,12,a),S.uint(4).store(e,a.arg0),S.uint(4).store(e,a.arg1),S.uint(4).store(e,a.arg2)}},E.STI={load:e=>(e.skip(8),t.STI(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(202,8,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.STI_ALT={load:e=>(e.skip(16),t.STI_ALT(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(53e3,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.STU={load:e=>(e.skip(8),t.STU(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(203,8,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.STU_ALT={load:e=>(e.skip(16),t.STU_ALT(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(53001,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.LDI={load:e=>(e.skip(8),t.LDI(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(210,8,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.LDI_ALT={load:e=>(e.skip(16),t.LDI_ALT(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(55048,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.LDU={load:e=>(e.skip(8),t.LDU(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(211,8,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.LDU_ALT={load:e=>(e.skip(16),t.LDU_ALT(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(55049,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.LDSLICE={load:e=>(e.skip(8),t.LDSLICE(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(214,8,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.LDSLICE_ALT={load:e=>(e.skip(16),t.LDSLICE_ALT(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(55068,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.LSHIFT_VAR={load:e=>(e.skip(8),t.LSHIFT_VAR()),store:(e,a)=>{e.storeInstructionPrefix(172,8,a)}},E.LSHIFT={load:e=>(e.skip(8),t.LSHIFT(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(170,8,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.QLSHIFT_VAR={load:e=>(e.skip(16),t.QLSHIFT_VAR()),store:(e,a)=>{e.storeInstructionPrefix(47020,16,a)}},E.QLSHIFT={load:e=>(e.skip(16),t.QLSHIFT(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(47018,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.BCHKBITS_VAR={load:e=>(e.skip(16),t.BCHKBITS_VAR()),store:(e,a)=>{e.storeInstructionPrefix(53049,16,a)}},E.BCHKBITS={load:e=>(e.skip(16),t.BCHKBITS(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(53048,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.BCHKBITSQ_VAR={load:e=>(e.skip(16),t.BCHKBITSQ_VAR()),store:(e,a)=>{e.storeInstructionPrefix(53053,16,a)}},E.BCHKBITSQ={load:e=>(e.skip(16),t.BCHKBITSQ(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(53052,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.RSHIFT_VAR={load:e=>(e.skip(8),t.RSHIFT_VAR()),store:(e,a)=>{e.storeInstructionPrefix(173,8,a)}},E.RSHIFT={load:e=>(e.skip(8),t.RSHIFT(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(171,8,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.RSHIFT_ALT={load:e=>(e.skip(16),t.RSHIFT_ALT()),store:(e,a)=>{e.storeInstructionPrefix(43300,16,a)}},E.QRSHIFT_VAR={load:e=>(e.skip(16),t.QRSHIFT_VAR()),store:(e,a)=>{e.storeInstructionPrefix(47021,16,a)}},E.QRSHIFT={load:e=>(e.skip(16),t.QRSHIFT(S.delta(1,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(47019,16,a),S.delta(1,S.uint(8)).store(e,a.arg0)}},E.QRSHIFT_ALT={load:e=>(e.skip(24),t.QRSHIFT_ALT()),store:(e,a)=>{e.storeInstructionPrefix(12036388,24,a)}},E.CALLDICT={load:e=>(e.skip(8),t.CALLDICT(S.uint(8).load(e))),store:(e,a)=>{e.storeInstructionPrefix(240,8,a),S.uint(8).store(e,a.arg0)}},E.CALLDICT_LONG={load:e=>(e.skip(10),t.CALLDICT_LONG(S.uint(14).load(e))),store:(e,a)=>{e.storeInstructionPrefix(964,10,a),S.uint(14).store(e,a.arg0)}},E.THROW_SHORT={load:e=>(e.skip(10),t.THROW_SHORT(S.uint(6).load(e))),store:(e,a)=>{e.storeInstructionPrefix(968,10,a),S.uint(6).store(e,a.arg0)}},E.THROW={load:e=>(e.skip(13),t.THROW(S.uint(11).load(e))),store:(e,a)=>{e.storeInstructionPrefix(7768,13,a),S.uint(11).store(e,a.arg0)}},E.THROWIF_SHORT={load:e=>(e.skip(10),t.THROWIF_SHORT(S.uint(6).load(e))),store:(e,a)=>{e.storeInstructionPrefix(969,10,a),S.uint(6).store(e,a.arg0)}},E.THROWIF={load:e=>(e.skip(13),t.THROWIF(S.uint(11).load(e))),store:(e,a)=>{e.storeInstructionPrefix(7770,13,a),S.uint(11).store(e,a.arg0)}},E.THROWIFNOT_SHORT={load:e=>(e.skip(10),t.THROWIFNOT_SHORT(S.uint(6).load(e))),store:(e,a)=>{e.storeInstructionPrefix(970,10,a),S.uint(6).store(e,a.arg0)}},E.THROWIFNOT={load:e=>(e.skip(13),t.THROWIFNOT(S.uint(11).load(e))),store:(e,a)=>{e.storeInstructionPrefix(7772,13,a),S.uint(11).store(e,a.arg0)}},E.PUSHINT_4={load:e=>(e.skip(4),t.PUSHINT_4(S.tinyInt.load(e))),store:(e,a)=>{e.storeInstructionPrefix(7,4,a),S.tinyInt.store(e,a.arg0)}},E.PUSHINT_8={load:e=>(e.skip(8),t.PUSHINT_8(S.int(8).load(e))),store:(e,a)=>{e.storeInstructionPrefix(128,8,a),S.int(8).store(e,a.arg0)}},E.PUSHINT_16={load:e=>(e.skip(8),t.PUSHINT_16(S.int(16).load(e))),store:(e,a)=>{e.storeInstructionPrefix(129,8,a),S.int(16).store(e,a.arg0)}},E.PUSHINT_LONG={load:e=>(e.skip(8),t.PUSHINT_LONG(S.largeInt.load(e))),store:(e,a)=>{e.storeInstructionPrefix(130,8,a),S.largeInt.store(e,a.arg0)}},E.XCHG_01_LONG={load:e=>(e.skip(8),t.XCHG_01_LONG(S.uint(8).load(e))),store:(e,a)=>{e.storeInstructionPrefix(17,8,a),S.uint(8).store(e,a.arg0)}},E.XCHG_0I={load:e=>(e.skip(4),t.XCHG_0I(S.uint(4).load(e))),store:(e,a)=>{e.storeInstructionPrefix(0,4,a),S.uint(4).store(e,a.arg0)}},E.XCHG_IJ={load:e=>(e.skip(8),t.XCHG_IJ(S.uint(4).load(e),S.uint(4).load(e))),store:(e,a)=>{e.storeInstructionPrefix(16,8,a),S.uint(4).store(e,a.arg0),S.uint(4).store(e,a.arg1)}},E.XCHG_1I={load:e=>(e.skip(4),t.XCHG_1I(S.s1.load(e),S.uint(4).load(e))),store:(e,a)=>{e.storeInstructionPrefix(1,4,a),S.s1.store(e,a.arg0),S.uint(4).store(e,a.arg1)}},E.DUMPSTK={load:e=>(e.skip(16),t.DUMPSTK()),store:(e,a)=>{e.storeInstructionPrefix(65024,16,a)}},E.DEBUG={load:e=>(e.skip(8),t.DEBUG(S.uint(8).load(e))),store:(e,a)=>{e.storeInstructionPrefix(254,8,a),S.uint(8).store(e,a.arg0)}},E.STRDUMP={load:e=>(e.skip(16),t.STRDUMP()),store:(e,a)=>{e.storeInstructionPrefix(65044,16,a)}},E.DEBUG_1={load:e=>(e.skip(8),t.DEBUG_1(S.uint(8).load(e))),store:(e,a)=>{e.storeInstructionPrefix(254,8,a),S.uint(8).store(e,a.arg0)}},E.DUMP={load:e=>(e.skip(12),t.DUMP(S.uint(4).load(e))),store:(e,a)=>{e.storeInstructionPrefix(4066,12,a),S.uint(4).store(e,a.arg0)}},E.DEBUG_2={load:e=>(e.skip(8),t.DEBUG_2(S.uint(8).load(e))),store:(e,a)=>{e.storeInstructionPrefix(254,8,a),S.uint(8).store(e,a.arg0)}},E.PUSHCTR={load:e=>(e.skip(12),t.PUSHCTR(S.control.load(e))),store:(e,a)=>{e.storeInstructionPrefix(3796,12,a),S.control.store(e,a.arg0)}},E.PUSH={load:e=>(e.skip(4),t.PUSH(S.uint(4).load(e))),store:(e,a)=>{e.storeInstructionPrefix(2,4,a),S.uint(4).store(e,a.arg0)}},E.PUSH_LONG={load:e=>(e.skip(8),t.PUSH_LONG(S.uint(8).load(e))),store:(e,a)=>{e.storeInstructionPrefix(86,8,a),S.uint(8).store(e,a.arg0)}},E.POPCTR={load:e=>(e.skip(12),t.POPCTR(S.control.load(e))),store:(e,a)=>{e.storeInstructionPrefix(3797,12,a),S.control.store(e,a.arg0)}},E.POP={load:e=>(e.skip(4),t.POP(S.uint(4).load(e))),store:(e,a)=>{e.storeInstructionPrefix(3,4,a),S.uint(4).store(e,a.arg0)}},E.POP_LONG={load:e=>(e.skip(8),t.POP_LONG(S.uint(8).load(e))),store:(e,a)=>{e.storeInstructionPrefix(87,8,a),S.uint(8).store(e,a.arg0)}},E.CALLXARGS={load:e=>(e.skip(12),t.CALLXARGS(S.uint(4).load(e),S.minusOne.load(e))),store:(e,a)=>{e.storeInstructionPrefix(3504,12,a),S.uint(4).store(e,a.arg0),S.minusOne.store(e,a.arg1)}},E.CALLXARGS_1={load:e=>(e.skip(8),t.CALLXARGS_1(S.uint(4).load(e),S.uint(4).load(e))),store:(e,a)=>{e.storeInstructionPrefix(218,8,a),S.uint(4).store(e,a.arg0),S.uint(4).store(e,a.arg1)}},E.PUSHSLICE={load:e=>(e.skip(8),t.PUSHSLICE(S.slice(S.refs(0),S.uint(4),4).load(e))),store:(e,a)=>{e.storeInstructionPrefix(139,8,a),S.slice(S.refs(0),S.uint(4),4).store(e,a.arg0)}},E.PUSHSLICE_REFS={load:e=>(e.skip(8),t.PUSHSLICE_REFS(S.slice(S.delta(1,S.uint(2)),S.uint(5),1).load(e))),store:(e,a)=>{e.storeInstructionPrefix(140,8,a),S.slice(S.delta(1,S.uint(2)),S.uint(5),1).store(e,a.arg0)}},E.PUSHSLICE_LONG={load:e=>(e.skip(8),t.PUSHSLICE_LONG(S.slice(S.uint(3),S.uint(7),6).load(e))),store:(e,a)=>{e.storeInstructionPrefix(141,8,a),S.slice(S.uint(3),S.uint(7),6).store(e,a.arg0)}},E.PUSHCONT={load:e=>(e.skip(7),t.PUSHCONT(S.codeSlice(S.uint(2),S.uint(7)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(71,7,a),S.codeSlice(S.uint(2),S.uint(7)).store(e,a.arg0)}},E.PUSHCONT_SHORT={load:e=>(e.skip(4),t.PUSHCONT_SHORT(S.inlineCodeSlice(S.uint(4)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(9,4,a),S.inlineCodeSlice(S.uint(4)).store(e,a.arg0)}},E.STSLICECONST={load:e=>(e.skip(9),t.STSLICECONST(S.slice(S.uint(2),S.uint(3),2).load(e))),store:(e,a)=>{e.storeInstructionPrefix(415,9,a),S.slice(S.uint(2),S.uint(3),2).store(e,a.arg0)}},E.SETCP={load:e=>(e.skip(8),t.SETCP(S.uint(8).load(e))),store:(e,a)=>{e.storeInstructionPrefix(255,8,a),S.uint(8).store(e,a.arg0)}},E.SETCPX={load:e=>(e.skip(16),t.SETCPX()),store:(e,a)=>{e.storeInstructionPrefix(65520,16,a)}},E.SETCP_SHORT={load:e=>(e.skip(8),t.SETCP_SHORT(S.delta(-256,S.uint(8)).load(e))),store:(e,a)=>{e.storeInstructionPrefix(255,8,a),S.delta(-256,S.uint(8)).store(e,a.arg0)}},E.DEBUGMARK={load:e=>(e.skip(16),t.DEBUGMARK(S.uint(16).load(e))),store:(e,a)=>{e.startDebugSection(a.arg0)}},E}var MC;function pC(){return MC||(MC=1,function(r){var G=er&&er.__createBinding||(Object.create?function(e,a,C,u){u===void 0&&(u=C);var o=Object.getOwnPropertyDescriptor(a,C);(!o||("get"in o?!a.__esModule:o.writable||o.configurable))&&(o={enumerable:!0,get:function(){return a[C]}}),Object.defineProperty(e,u,o)}:function(e,a,C,u){u===void 0&&(u=C),e[u]=a[C]}),_=er&&er.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:!0,value:a})}:function(e,a){e.default=a}),S=er&&er.__importStar||function(){var e=function(a){return e=Object.getOwnPropertyNames||function(C){var u=[];for(var o in C)Object.prototype.hasOwnProperty.call(C,o)&&(u[u.length]=o);return u},e(a)};return function(a){if(a&&a.__esModule)return a;var C={};if(a!=null)for(var u=e(a),o=0;o<u.length;o++)u[o]!=="default"&&G(C,a,u[o]);return _(C,a),C}}();Object.defineProperty(r,"__esModule",{value:!0}),r.storeMapping=r.rangeToType=void 0;const t=S(Ju());r.rangeToType=[{min:8650496,max:8650752,load:t.PUSHNAN.load},{min:10485760,max:10551296,load:t.ADD.load},{min:10551296,max:10616832,load:t.SUB.load},{min:10616832,max:10682368,load:t.SUBR.load},{min:10682368,max:10747904,load:t.NEGATE.load},{min:10747904,max:10813440,load:t.INC.load},{min:10813440,max:10878976,load:t.DEC.load},{min:11010048,max:11075584,load:t.MUL.load},{min:11403264,max:11468800,load:t.POW2.load},{min:11534336,max:11599872,load:t.AND.load},{min:11599872,max:11665408,load:t.OR.load},{min:11665408,max:11730944,load:t.XOR.load},{min:11730944,max:11796480,load:t.NOT.load},{min:11927552,max:11927808,load:t.FITSX.load},{min:11927808,max:11928064,load:t.UFITSX.load},{min:11928064,max:11928320,load:t.BITSIZE.load},{min:11928320,max:11928576,load:t.UBITSIZE.load},{min:11929600,max:11929856,load:t.MIN.load},{min:11929856,max:11930112,load:t.MAX.load},{min:11930112,max:11930368,load:t.MINMAX.load},{min:11930368,max:11930624,load:t.ABS.load},{min:12034048,max:12034304,load:t.QADD.load},{min:12034304,max:12034560,load:t.QSUB.load},{min:12034560,max:12034816,load:t.QSUBR.load},{min:12034816,max:12035072,load:t.QNEGATE.load},{min:12035072,max:12035328,load:t.QINC.load},{min:12035328,max:12035584,load:t.QDEC.load},{min:12036096,max:12036352,load:t.QMUL.load},{min:12037632,max:12037888,load:t.QPOW2.load},{min:12038144,max:12038400,load:t.QAND.load},{min:12038400,max:12038656,load:t.QOR.load},{min:12038656,max:12038912,load:t.QXOR.load},{min:12038912,max:12039168,load:t.QNOT.load},{min:12039680,max:12039681,load:t.QFITSX.load},{min:12039681,max:12039682,load:t.QUFITSX.load},{min:12039682,max:12039683,load:t.QBITSIZE.load},{min:12039683,max:12039684,load:t.QUBITSIZE.load},{min:12039688,max:12039689,load:t.QMIN.load},{min:12039689,max:12039690,load:t.QMAX.load},{min:12039690,max:12039691,load:t.QMINMAX.load},{min:12039691,max:12039692,load:t.QABS.load},{min:12058624,max:12124160,load:t.SGN.load},{min:12124160,max:12189696,load:t.LESS.load},{min:12189696,max:12255232,load:t.EQUAL.load},{min:12255232,max:12320768,load:t.LEQ.load},{min:12320768,max:12386304,load:t.GREATER.load},{min:12386304,max:12451840,load:t.NEQ.load},{min:12451840,max:12517376,load:t.GEQ.load},{min:12517376,max:12582912,load:t.CMP.load},{min:12845056,max:12910592,load:t.ISNAN.load},{min:12910592,max:12976128,load:t.CHKNAN.load},{min:12040192,max:12040448,load:t.QSGN.load},{min:12040448,max:12040704,load:t.QLESS.load},{min:12040704,max:12040960,load:t.QEQUAL.load},{min:12040960,max:12041216,load:t.QLEQ.load},{min:12041216,max:12041472,load:t.QGREATER.load},{min:12041472,max:12041728,load:t.QNEQ.load},{min:12041728,max:12041984,load:t.QGEQ.load},{min:12041984,max:12042240,load:t.QCMP.load},{min:13041664,max:13041920,load:t.SEMPTY.load},{min:13041920,max:13042176,load:t.SDEMPTY.load},{min:13042176,max:13042432,load:t.SREMPTY.load},{min:13042432,max:13042688,load:t.SDFIRST.load},{min:13042688,max:13042944,load:t.SDLEXCMP.load},{min:13042944,max:13043200,load:t.SDEQ.load},{min:13043712,max:13043968,load:t.SDPFX.load},{min:13043968,max:13044224,load:t.SDPFXREV.load},{min:13044224,max:13044480,load:t.SDPPFX.load},{min:13044480,max:13044736,load:t.SDPPFXREV.load},{min:13044736,max:13044992,load:t.SDSFX.load},{min:13044992,max:13045248,load:t.SDSFXREV.load},{min:13045248,max:13045504,load:t.SDPSFX.load},{min:13045504,max:13045760,load:t.SDPSFXREV.load},{min:13045760,max:13046016,load:t.SDCNTLEAD0.load},{min:13046016,max:13046272,load:t.SDCNTLEAD1.load},{min:13046272,max:13046528,load:t.SDCNTTRAIL0.load},{min:13046528,max:13046784,load:t.SDCNTTRAIL1.load},{min:13107200,max:13172736,load:t.NEWC.load},{min:13172736,max:13238272,load:t.ENDC.load},{min:13434880,max:13500416,load:t.ENDCST.load},{min:13570304,max:13570560,load:t.STBREF.load},{min:13570816,max:13571072,load:t.STB.load},{min:13571072,max:13571328,load:t.STREFR.load},{min:13571328,max:13571584,load:t.STBREFR.load},{min:13571584,max:13571840,load:t.STSLICER.load},{min:13571840,max:13572096,load:t.STBR.load},{min:13572096,max:13572352,load:t.STREFQ.load},{min:13572352,max:13572608,load:t.STBREFQ.load},{min:13572608,max:13572864,load:t.STSLICEQ.load},{min:13572864,max:13573120,load:t.STBQ.load},{min:13573120,max:13573376,load:t.STREFRQ.load},{min:13573376,max:13573632,load:t.STBREFRQ.load},{min:13573632,max:13573888,load:t.STSLICERQ.load},{min:13573888,max:13574144,load:t.STBRQ.load},{min:13574912,max:13575168,load:t.ENDXC.load},{min:13578240,max:13578496,load:t.BDEPTH.load},{min:13578496,max:13578752,load:t.BBITS.load},{min:13578752,max:13579008,load:t.BREFS.load},{min:13579008,max:13579264,load:t.BBITREFS.load},{min:13579520,max:13579776,load:t.BREMBITS.load},{min:13579776,max:13580032,load:t.BREMREFS.load},{min:13580032,max:13580288,load:t.BREMBITREFS.load},{min:13580800,max:13581056,load:t.BCHKREFS.load},{min:13581056,max:13581312,load:t.BCHKBITREFS.load},{min:13581824,max:13582080,load:t.BCHKREFSQ.load},{min:13582080,max:13582336,load:t.BCHKBITREFSQ.load},{min:13582336,max:13582592,load:t.STZEROES.load},{min:13582592,max:13582848,load:t.STONES.load},{min:13582848,max:13583104,load:t.STSAME.load},{min:13631488,max:13697024,load:t.CTOS.load},{min:13697024,max:13762560,load:t.ENDS.load},{min:13893632,max:13959168,load:t.LDREF.load},{min:13959168,max:14024704,load:t.LDREFRTOS.load},{min:14098432,max:14098688,load:t.SDCUTFIRST.load},{min:14098688,max:14098944,load:t.SDSKIPFIRST.load},{min:14098944,max:14099200,load:t.SDCUTLAST.load},{min:14099200,max:14099456,load:t.SDSKIPLAST.load},{min:14099456,max:14099712,load:t.SDSUBSTR.load},{min:14102528,max:14102784,load:t.SCUTFIRST.load},{min:14102784,max:14103040,load:t.SSKIPFIRST.load},{min:14103040,max:14103296,load:t.SCUTLAST.load},{min:14103296,max:14103552,load:t.SSKIPLAST.load},{min:14103552,max:14103808,load:t.SUBSLICE.load},{min:14104064,max:14104320,load:t.SPLIT.load},{min:14104320,max:14104576,load:t.SPLITQ.load},{min:14104832,max:14105088,load:t.XCTOS.load},{min:14105088,max:14105344,load:t.XLOAD.load},{min:14105344,max:14105600,load:t.XLOADQ.load},{min:14106880,max:14107136,load:t.SCHKBITS.load},{min:14107136,max:14107392,load:t.SCHKREFS.load},{min:14107392,max:14107648,load:t.SCHKBITREFS.load},{min:14107904,max:14108160,load:t.SCHKBITSQ.load},{min:14108160,max:14108416,load:t.SCHKREFSQ.load},{min:14108416,max:14108672,load:t.SCHKBITREFSQ.load},{min:14108672,max:14108928,load:t.PLDREFVAR.load},{min:14108928,max:14109184,load:t.SBITS.load},{min:14109184,max:14109440,load:t.SREFS.load},{min:14109440,max:14109696,load:t.SBITREFS.load},{min:14114816,max:14115072,load:t.LDZEROES.load},{min:14115072,max:14115328,load:t.LDONES.load},{min:14115328,max:14115584,load:t.LDSAME.load},{min:14115840,max:14116096,load:t.SDEPTH.load},{min:14116096,max:14116352,load:t.CDEPTH.load},{min:14116352,max:14116608,load:t.CLEVEL.load},{min:14116608,max:14116864,load:t.CLEVELMASK.load},{min:14118912,max:14119168,load:t.CHASHIX.load},{min:14119168,max:14119424,load:t.CDEPTHIX.load},{min:14155776,max:14221312,load:t.EXECUTE.load},{min:14221312,max:14286848,load:t.JMPX.load},{min:14364672,max:14364928,load:t.RET.load},{min:14364928,max:14365184,load:t.RETALT.load},{min:14365184,max:14365440,load:t.RETBOOL.load},{min:14365696,max:14365952,load:t.CALLCC.load},{min:14365952,max:14366208,load:t.JMPXDATA.load},{min:14366720,max:14366976,load:t.CALLXVARARGS.load},{min:14366976,max:14367232,load:t.RETVARARGS.load},{min:14367232,max:14367488,load:t.JMPXVARARGS.load},{min:14367488,max:14367744,load:t.CALLCCVARARGS.load},{min:14368512,max:14368768,load:t.RETDATA.load},{min:14372864,max:14373120,load:t.RUNVMX.load},{min:14417920,max:14483456,load:t.IFRET.load},{min:14483456,max:14548992,load:t.IFNOTRET.load},{min:14548992,max:14614528,load:t.IF.load},{min:14614528,max:14680064,load:t.IFNOT.load},{min:14680064,max:14745600,load:t.IFJMP.load},{min:14745600,max:14811136,load:t.IFNOTJMP.load},{min:14811136,max:14876672,load:t.IFELSE.load},{min:14877696,max:14877952,load:t.CONDSEL.load},{min:14877952,max:14878208,load:t.CONDSELCHK.load},{min:14878720,max:14878976,load:t.IFRETALT.load},{min:14878976,max:14879232,load:t.IFNOTRETALT.load},{min:14942208,max:15007744,load:t.REPEAT.load},{min:15007744,max:15073280,load:t.REPEATEND.load},{min:15073280,max:15138816,load:t.UNTIL.load},{min:15138816,max:15204352,load:t.UNTILEND.load},{min:15204352,max:15269888,load:t.WHILE.load},{min:15269888,max:15335424,load:t.WHILEEND.load},{min:15335424,max:15400960,load:t.AGAIN.load},{min:15400960,max:15466496,load:t.AGAINEND.load},{min:14881792,max:14882048,load:t.REPEATBRK.load},{min:14882048,max:14882304,load:t.REPEATENDBRK.load},{min:14882304,max:14882560,load:t.UNTILBRK.load},{min:14882560,max:14882816,load:t.UNTILENDBRK.load},{min:14882816,max:14883072,load:t.WHILEBRK.load},{min:14883072,max:14883328,load:t.WHILEENDBRK.load},{min:14883328,max:14883584,load:t.AGAINBRK.load},{min:14883584,max:14883840,load:t.AGAINENDBRK.load},{min:15536128,max:15536384,load:t.RETURNVARARGS.load},{min:15536384,max:15536640,load:t.SETCONTVARARGS.load},{min:15536640,max:15536896,load:t.SETNUMVARARGS.load},{min:15539712,max:15539968,load:t.BLESS.load},{min:15539968,max:15540224,load:t.BLESSVARARGS.load},{min:15589376,max:15589632,load:t.PUSHCTRX.load},{min:15589632,max:15589888,load:t.POPCTRX.load},{min:15589888,max:15590144,load:t.SETCONTCTRX.load},{min:15590400,max:15590656,load:t.SETCONTCTRMANYX.load},{min:15593472,max:15593728,load:t.BOOLAND.load},{min:15593728,max:15593984,load:t.BOOLOR.load},{min:15593984,max:15594240,load:t.COMPOSBOTH.load},{min:15594240,max:15594496,load:t.ATEXIT.load},{min:15594496,max:15594752,load:t.ATEXITALT.load},{min:15594752,max:15595008,load:t.SETEXITALT.load},{min:15595008,max:15595264,load:t.THENRET.load},{min:15595264,max:15595520,load:t.THENRETALT.load},{min:15595520,max:15595776,load:t.INVERT.load},{min:15595776,max:15596032,load:t.BOOLEVAL.load},{min:15596032,max:15596288,load:t.SAMEALT.load},{min:15596288,max:15596544,load:t.SAMEALTSAVE.load},{min:15924992,max:15925248,load:t.TRY.load},{min:15990784,max:15991040,load:t.STDICT.load},{min:15991040,max:15991296,load:t.SKIPDICT.load},{min:15991296,max:15991552,load:t.LDDICTS.load},{min:15991552,max:15991808,load:t.PLDDICTS.load},{min:15991808,max:15992064,load:t.LDDICT.load},{min:15992064,max:15992320,load:t.PLDDICT.load},{min:15992320,max:15992576,load:t.LDDICTQ.load},{min:15992576,max:15992832,load:t.PLDDICTQ.load},{min:16019456,max:16019712,load:t.PFXDICTSET.load},{min:16019712,max:16019968,load:t.PFXDICTREPLACE.load},{min:16019968,max:16020224,load:t.PFXDICTADD.load},{min:16020224,max:16020480,load:t.PFXDICTDEL.load},{min:16033792,max:16034048,load:t.PFXDICTGETQ.load},{min:16034048,max:16034304,load:t.PFXDICTGET.load},{min:16034304,max:16034560,load:t.PFXDICTGETJMP.load},{min:16034560,max:16034816,load:t.PFXDICTGETEXEC.load},{min:0,max:65536,load:t.NOP.load},{min:65536,max:131072,load:t.SWAP.load},{min:2097152,max:2162688,load:t.DUP.load},{min:2162688,max:2228224,load:t.OVER.load},{min:3145728,max:3211264,load:t.DROP.load},{min:3211264,max:3276800,load:t.NIP.load},{min:5767168,max:5832704,load:t.ROT.load},{min:5832704,max:5898240,load:t.ROTREV.load},{min:6291456,max:6356992,load:t.PICK.load},{min:6356992,max:6422528,load:t.ROLL.load},{min:6422528,max:6488064,load:t.ROLLREV.load},{min:6488064,max:6553600,load:t.BLKSWX.load},{min:6553600,max:6619136,load:t.REVX.load},{min:6619136,max:6684672,load:t.DROPX.load},{min:6684672,max:6750208,load:t.TUCK.load},{min:6750208,max:6815744,load:t.XCHGX.load},{min:6815744,max:6881280,load:t.DEPTH.load},{min:6881280,max:6946816,load:t.CHKDEPTH.load},{min:6946816,max:7012352,load:t.ONLYTOPX.load},{min:7012352,max:7077888,load:t.ONLYX.load},{min:16252928,max:16253184,load:t.ACCEPT.load},{min:16253184,max:16253440,load:t.SETGASLIMIT.load},{min:16254720,max:16254976,load:t.GASCONSUMED.load},{min:16256768,max:16257024,load:t.COMMIT.load},{min:16261888,max:16262144,load:t.NOW.load},{min:16262144,max:16262400,load:t.BLOCKLT.load},{min:16262400,max:16262656,load:t.LTIME.load},{min:16262656,max:16262912,load:t.RANDSEED.load},{min:16262912,max:16263168,load:t.BALANCE.load},{min:16263168,max:16263424,load:t.MYADDR.load},{min:16263424,max:16263680,load:t.CONFIGROOT.load},{min:16263680,max:16263936,load:t.MYCODE.load},{min:16263936,max:16264192,load:t.INCOMINGVALUE.load},{min:16264192,max:16264448,load:t.STORAGEFEES.load},{min:16264448,max:16264704,load:t.PREVBLOCKSINFOTUPLE.load},{min:16264704,max:16264960,load:t.UNPACKEDCONFIGTUPLE.load},{min:16264960,max:16265216,load:t.DUEPAYMENT.load},{min:16265216,max:16265472,load:t.CONFIGDICT.load},{min:16265728,max:16265984,load:t.CONFIGPARAM.load},{min:16265984,max:16266240,load:t.CONFIGOPTPARAM.load},{min:16266240,max:16266241,load:t.PREVMCBLOCKS.load},{min:16266241,max:16266242,load:t.PREVKEYBLOCK.load},{min:16266242,max:16266243,load:t.PREVMCBLOCKS_100.load},{min:16266496,max:16266752,load:t.GLOBALID.load},{min:16266752,max:16267008,load:t.GETGASFEE.load},{min:16267008,max:16267264,load:t.GETSTORAGEFEE.load},{min:16267264,max:16267520,load:t.GETFORWARDFEE.load},{min:16267520,max:16267776,load:t.GETPRECOMPILEDGAS.load},{min:16267776,max:16268032,load:t.GETORIGINALFWDFEE.load},{min:16268032,max:16268288,load:t.GETGASFEESIMPLE.load},{min:16268288,max:16268544,load:t.GETFORWARDFEESIMPLE.load},{min:16269312,max:16269568,load:t.GETGLOBVAR.load},{min:16277504,max:16277760,load:t.SETGLOBVAR.load},{min:16257024,max:16257280,load:t.RANDU256.load},{min:16257280,max:16257536,load:t.RAND.load},{min:16258048,max:16258304,load:t.SETRAND.load},{min:16258304,max:16258560,load:t.ADDRAND.load},{min:16318464,max:16318720,load:t.HASHCU.load},{min:16318720,max:16318976,load:t.HASHSU.load},{min:16318976,max:16319232,load:t.SHA256U.load},{min:16322560,max:16322816,load:t.CHKSIGNU.load},{min:16322816,max:16323072,load:t.CHKSIGNS.load},{min:16323072,max:16323328,load:t.ECRECOVER.load},{min:16323328,max:16323584,load:t.SECP256K1_XONLY_PUBKEY_TWEAK_ADD.load},{min:16323584,max:16323840,load:t.P256_CHKSIGNU.load},{min:16323840,max:16324096,load:t.P256_CHKSIGNS.load},{min:16326656,max:16326912,load:t.RIST255_FROMHASH.load},{min:16326912,max:16327168,load:t.RIST255_VALIDATE.load},{min:16327168,max:16327424,load:t.RIST255_ADD.load},{min:16327424,max:16327680,load:t.RIST255_SUB.load},{min:16327680,max:16327936,load:t.RIST255_MUL.load},{min:16327936,max:16328192,load:t.RIST255_MULBASE.load},{min:16328192,max:16328448,load:t.RIST255_PUSHL.load},{min:12056865,max:12056866,load:t.RIST255_QVALIDATE.load},{min:12056866,max:12056867,load:t.RIST255_QADD.load},{min:12056867,max:12056868,load:t.RIST255_QSUB.load},{min:12056868,max:12056869,load:t.RIST255_QMUL.load},{min:12056869,max:12056870,load:t.RIST255_QMULBASE.load},{min:16330752,max:16330753,load:t.BLS_VERIFY.load},{min:16330753,max:16330754,load:t.BLS_AGGREGATE.load},{min:16330754,max:16330755,load:t.BLS_FASTAGGREGATEVERIFY.load},{min:16330755,max:16330756,load:t.BLS_AGGREGATEVERIFY.load},{min:16330768,max:16330769,load:t.BLS_G1_ADD.load},{min:16330769,max:16330770,load:t.BLS_G1_SUB.load},{min:16330770,max:16330771,load:t.BLS_G1_NEG.load},{min:16330771,max:16330772,load:t.BLS_G1_MUL.load},{min:16330772,max:16330773,load:t.BLS_G1_MULTIEXP.load},{min:16330773,max:16330774,load:t.BLS_G1_ZERO.load},{min:16330774,max:16330775,load:t.BLS_MAP_TO_G1.load},{min:16330775,max:16330776,load:t.BLS_G1_INGROUP.load},{min:16330776,max:16330777,load:t.BLS_G1_ISZERO.load},{min:16330784,max:16330785,load:t.BLS_G2_ADD.load},{min:16330785,max:16330786,load:t.BLS_G2_SUB.load},{min:16330786,max:16330787,load:t.BLS_G2_NEG.load},{min:16330787,max:16330788,load:t.BLS_G2_MUL.load},{min:16330788,max:16330789,load:t.BLS_G2_MULTIEXP.load},{min:16330789,max:16330790,load:t.BLS_G2_ZERO.load},{min:16330790,max:16330791,load:t.BLS_MAP_TO_G2.load},{min:16330791,max:16330792,load:t.BLS_G2_INGROUP.load},{min:16330792,max:16330793,load:t.BLS_G2_ISZERO.load},{min:16330800,max:16330801,load:t.BLS_PAIRING.load},{min:16330801,max:16330802,load:t.BLS_PUSHR.load},{min:16334848,max:16335104,load:t.CDATASIZEQ.load},{min:16335104,max:16335360,load:t.CDATASIZE.load},{min:16335360,max:16335616,load:t.SDATASIZEQ.load},{min:16335616,max:16335872,load:t.SDATASIZE.load},{min:16384e3,max:16384256,load:t.LDGRAMS.load},{min:16384256,max:16384512,load:t.LDVARINT16.load},{min:16384512,max:16384768,load:t.STGRAMS.load},{min:16384768,max:16385024,load:t.STVARINT16.load},{min:16385024,max:16385280,load:t.LDVARUINT32.load},{min:16385280,max:16385536,load:t.LDVARINT32.load},{min:16385536,max:16385792,load:t.STVARUINT32.load},{min:16385792,max:16386048,load:t.STVARINT32.load},{min:16400384,max:16400640,load:t.LDMSGADDR.load},{min:16400640,max:16400896,load:t.LDMSGADDRQ.load},{min:16400896,max:16401152,load:t.PARSEMSGADDR.load},{min:16401152,max:16401408,load:t.PARSEMSGADDRQ.load},{min:16401408,max:16401664,load:t.REWRITESTDADDR.load},{min:16401664,max:16401920,load:t.REWRITESTDADDRQ.load},{min:16401920,max:16402176,load:t.REWRITEVARADDR.load},{min:16402176,max:16402432,load:t.REWRITEVARADDRQ.load},{min:16449536,max:16449792,load:t.SENDRAWMSG.load},{min:16450048,max:16450304,load:t.RAWRESERVE.load},{min:16450304,max:16450560,load:t.RAWRESERVEX.load},{min:16450560,max:16450816,load:t.SETCODE.load},{min:16451072,max:16451328,load:t.SETLIBCODE.load},{min:16451328,max:16451584,load:t.CHANGELIB.load},{min:16451584,max:16451840,load:t.SENDMSG.load},{min:7143424,max:7208960,load:t.PUSHNULL.load},{min:7208960,max:7274496,load:t.ISNULL.load},{min:7307264,max:7307520,load:t.TUPLEVAR.load},{min:7307520,max:7307776,load:t.INDEXVAR.load},{min:7307776,max:7308032,load:t.UNTUPLEVAR.load},{min:7308032,max:7308288,load:t.UNPACKFIRSTVAR.load},{min:7308288,max:7308544,load:t.EXPLODEVAR.load},{min:7308544,max:7308800,load:t.SETINDEXVAR.load},{min:7308800,max:7309056,load:t.INDEXVARQ.load},{min:7309056,max:7309312,load:t.SETINDEXVARQ.load},{min:7309312,max:7309568,load:t.TLEN.load},{min:7309568,max:7309824,load:t.QTLEN.load},{min:7309824,max:7310080,load:t.ISTUPLE.load},{min:7310080,max:7310336,load:t.LAST.load},{min:7310336,max:7310592,load:t.TPUSH.load},{min:7310592,max:7310848,load:t.TPOP.load},{min:7315456,max:7315712,load:t.NULLSWAPIF.load},{min:7315712,max:7315968,load:t.NULLSWAPIFNOT.load},{min:7315968,max:7316224,load:t.NULLROTRIF.load},{min:7316224,max:7316480,load:t.NULLROTRIFNOT.load},{min:7316480,max:7316736,load:t.NULLSWAPIF2.load},{min:7316736,max:7316992,load:t.NULLSWAPIFNOT2.load},{min:7316992,max:7317248,load:t.NULLROTRIF2.load},{min:7317248,max:7317504,load:t.NULLROTRIFNOT2.load},{min:11075584,max:11075840,load:t.ADDDIVMOD.load},{min:11075840,max:11076096,load:t.ADDDIVMODR.load},{min:11076096,max:11076352,load:t.ADDDIVMODC.load},{min:11076608,max:11076864,load:t.DIV.load},{min:11076864,max:11077120,load:t.DIVR.load},{min:11077120,max:11077376,load:t.DIVC.load},{min:11077632,max:11077888,load:t.MOD.load},{min:11077888,max:11078144,load:t.MODR.load},{min:11078144,max:11078400,load:t.MODC.load},{min:11078656,max:11078912,load:t.DIVMOD.load},{min:11078912,max:11079168,load:t.DIVMODR.load},{min:11079168,max:11079424,load:t.DIVMODC.load},{min:12036352,max:12036353,load:t.QADDDIVMOD.load},{min:12036353,max:12036354,load:t.QADDDIVMODR.load},{min:12036354,max:12036355,load:t.QADDDIVMODC.load},{min:12036356,max:12036357,load:t.QDIV.load},{min:12036357,max:12036358,load:t.QDIVR.load},{min:12036358,max:12036359,load:t.QDIVC.load},{min:12036360,max:12036361,load:t.QMOD.load},{min:12036361,max:12036362,load:t.QMODR.load},{min:12036362,max:12036363,load:t.QMODC.load},{min:12036364,max:12036365,load:t.QDIVMOD.load},{min:12036365,max:12036366,load:t.QDIVMODR.load},{min:12036366,max:12036367,load:t.QDIVMODC.load},{min:11083776,max:11084032,load:t.ADDRSHIFTMOD.load},{min:11084032,max:11084288,load:t.ADDRSHIFTMODR.load},{min:11084288,max:11084544,load:t.ADDRSHIFTMODC.load},{min:11085056,max:11085312,load:t.RSHIFTR.load},{min:11085312,max:11085568,load:t.RSHIFTC.load},{min:11085824,max:11086080,load:t.MODPOW2.load},{min:11086080,max:11086336,load:t.MODPOW2R.load},{min:11086336,max:11086592,load:t.MODPOW2C.load},{min:11086848,max:11087104,load:t.RSHIFTMOD.load},{min:11087104,max:11087360,load:t.RSHIFTMODR.load},{min:11087360,max:11087616,load:t.RSHIFTMODC.load},{min:12036384,max:12036385,load:t.QADDRSHIFTMOD.load},{min:12036385,max:12036386,load:t.QADDRSHIFTMODR.load},{min:12036386,max:12036387,load:t.QADDRSHIFTMODC.load},{min:12036389,max:12036390,load:t.QRSHIFTR.load},{min:12036390,max:12036391,load:t.QRSHIFTC.load},{min:12036392,max:12036393,load:t.QMODPOW2.load},{min:12036393,max:12036394,load:t.QMODPOW2R.load},{min:12036394,max:12036395,load:t.QMODPOW2C.load},{min:12036396,max:12036397,load:t.QRSHIFTMOD.load},{min:12036397,max:12036398,load:t.QRSHIFTMODR.load},{min:12036398,max:12036399,load:t.QRSHIFTMODC.load},{min:11108352,max:11108608,load:t.MULADDDIVMOD.load},{min:11108608,max:11108864,load:t.MULADDDIVMODR.load},{min:11108864,max:11109120,load:t.MULADDDIVMODC.load},{min:11109376,max:11109632,load:t.MULDIV.load},{min:11109632,max:11109888,load:t.MULDIVR.load},{min:11109888,max:11110144,load:t.MULDIVC.load},{min:11110400,max:11110656,load:t.MULMOD.load},{min:11110656,max:11110912,load:t.MULMODR.load},{min:11110912,max:11111168,load:t.MULMODC.load},{min:11111424,max:11111680,load:t.MULDIVMOD.load},{min:11111680,max:11111936,load:t.MULDIVMODR.load},{min:11111936,max:11112192,load:t.MULDIVMODC.load},{min:12036480,max:12036481,load:t.QMULADDDIVMOD.load},{min:12036481,max:12036482,load:t.QMULADDDIVMODR.load},{min:12036482,max:12036483,load:t.QMULADDDIVMODC.load},{min:12036484,max:12036485,load:t.QMULDIV.load},{min:12036485,max:12036486,load:t.QMULDIVR.load},{min:12036486,max:12036487,load:t.QMULDIVC.load},{min:12036488,max:12036489,load:t.QMULMOD.load},{min:12036489,max:12036490,load:t.QMULMODR.load},{min:12036490,max:12036491,load:t.QMULMODC.load},{min:12036492,max:12036493,load:t.QMULDIVMOD.load},{min:12036493,max:12036494,load:t.QMULDIVMODR.load},{min:12036494,max:12036495,load:t.QMULDIVMODC.load},{min:11116544,max:11116800,load:t.MULADDRSHIFTMOD.load},{min:11116800,max:11117056,load:t.MULADDRSHIFTRMOD.load},{min:11117056,max:11117312,load:t.MULADDRSHIFTCMOD.load},{min:11117568,max:11117824,load:t.MULRSHIFT.load},{min:11117824,max:11118080,load:t.MULRSHIFTR.load},{min:11118080,max:11118336,load:t.MULRSHIFTC.load},{min:11118592,max:11118848,load:t.MULMODPOW2.load},{min:11118848,max:11119104,load:t.MULMODPOW2R.load},{min:11119104,max:11119360,load:t.MULMODPOW2C.load},{min:11119616,max:11119872,load:t.MULRSHIFTMOD.load},{min:11119872,max:11120128,load:t.MULRSHIFTRMOD.load},{min:11120128,max:11120384,load:t.MULRSHIFTCMOD.load},{min:12036512,max:12036513,load:t.QMULADDRSHIFTMOD.load},{min:12036513,max:12036514,load:t.QMULADDRSHIFTRMOD.load},{min:12036514,max:12036515,load:t.QMULADDRSHIFTCMOD.load},{min:12036516,max:12036517,load:t.QMULRSHIFT.load},{min:12036517,max:12036518,load:t.QMULRSHIFTR.load},{min:12036518,max:12036519,load:t.QMULRSHIFTC.load},{min:12036520,max:12036521,load:t.QMULMODPOW2.load},{min:12036521,max:12036522,load:t.QMULMODPOW2R.load},{min:12036522,max:12036523,load:t.QMULMODPOW2C.load},{min:12036524,max:12036525,load:t.QMULRSHIFTMOD.load},{min:12036525,max:12036526,load:t.QMULRSHIFTRMOD.load},{min:12036526,max:12036527,load:t.QMULRSHIFTCMOD.load},{min:11124736,max:11124992,load:t.LSHIFTADDDIVMOD.load},{min:11124992,max:11125248,load:t.LSHIFTADDDIVMODR.load},{min:11125248,max:11125504,load:t.LSHIFTADDDIVMODC.load},{min:11125760,max:11126016,load:t.LSHIFTDIV.load},{min:11126016,max:11126272,load:t.LSHIFTDIVR.load},{min:11126272,max:11126528,load:t.LSHIFTDIVC.load},{min:11126784,max:11127040,load:t.LSHIFTMOD.load},{min:11127040,max:11127296,load:t.LSHIFTMODR.load},{min:11127296,max:11127552,load:t.LSHIFTMODC.load},{min:11127808,max:11128064,load:t.LSHIFTDIVMOD.load},{min:11128064,max:11128320,load:t.LSHIFTDIVMODR.load},{min:11128320,max:11128576,load:t.LSHIFTDIVMODC.load},{min:12036544,max:12036545,load:t.QLSHIFTADDDIVMOD.load},{min:12036545,max:12036546,load:t.QLSHIFTADDDIVMODR.load},{min:12036546,max:12036547,load:t.QLSHIFTADDDIVMODC.load},{min:12036548,max:12036549,load:t.QLSHIFTDIV.load},{min:12036549,max:12036550,load:t.QLSHIFTDIVR.load},{min:12036550,max:12036551,load:t.QLSHIFTDIVC.load},{min:12036552,max:12036553,load:t.QLSHIFTMOD.load},{min:12036553,max:12036554,load:t.QLSHIFTMODR.load},{min:12036554,max:12036555,load:t.QLSHIFTMODC.load},{min:12036556,max:12036557,load:t.QLSHIFTDIVMOD.load},{min:12036557,max:12036558,load:t.QLSHIFTDIVMODR.load},{min:12036558,max:12036559,load:t.QLSHIFTDIVMODC.load},{min:13565952,max:13566208,load:t.STIX.load},{min:13566208,max:13566464,load:t.STUX.load},{min:13566464,max:13566720,load:t.STIXR.load},{min:13566720,max:13566976,load:t.STUXR.load},{min:13566976,max:13567232,load:t.STIXQ.load},{min:13567232,max:13567488,load:t.STUXQ.load},{min:13567488,max:13567744,load:t.STIXRQ.load},{min:13567744,max:13568e3,load:t.STUXRQ.load},{min:13576192,max:13576448,load:t.STILE4.load},{min:13576448,max:13576704,load:t.STULE4.load},{min:13576704,max:13576960,load:t.STILE8.load},{min:13576960,max:13577216,load:t.STULE8.load},{min:14090240,max:14090496,load:t.LDIX.load},{min:14090496,max:14090752,load:t.LDUX.load},{min:14090752,max:14091008,load:t.PLDIX.load},{min:14091008,max:14091264,load:t.PLDUX.load},{min:14091264,max:14091520,load:t.LDIXQ.load},{min:14091520,max:14091776,load:t.LDUXQ.load},{min:14091776,max:14092032,load:t.PLDIXQ.load},{min:14092032,max:14092288,load:t.PLDUXQ.load},{min:14096384,max:14096640,load:t.LDSLICEX.load},{min:14096640,max:14096896,load:t.PLDSLICEX.load},{min:14096896,max:14097152,load:t.LDSLICEXQ.load},{min:14097152,max:14097408,load:t.PLDSLICEXQ.load},{min:14110720,max:14110976,load:t.LDILE4.load},{min:14110976,max:14111232,load:t.LDULE4.load},{min:14111232,max:14111488,load:t.LDILE8.load},{min:14111488,max:14111744,load:t.LDULE8.load},{min:14111744,max:14112e3,load:t.PLDILE4.load},{min:14112e3,max:14112256,load:t.PLDULE4.load},{min:14112256,max:14112512,load:t.PLDILE8.load},{min:14112512,max:14112768,load:t.PLDULE8.load},{min:14112768,max:14113024,load:t.LDILE4Q.load},{min:14113024,max:14113280,load:t.LDULE4Q.load},{min:14113280,max:14113536,load:t.LDILE8Q.load},{min:14113536,max:14113792,load:t.LDULE8Q.load},{min:14113792,max:14114048,load:t.PLDILE4Q.load},{min:14114048,max:14114304,load:t.PLDULE4Q.load},{min:14114304,max:14114560,load:t.PLDILE8Q.load},{min:14114560,max:14114816,load:t.PLDULE8Q.load},{min:16031744,max:16032e3,load:t.DICTIGETJMP.load},{min:16032e3,max:16032256,load:t.DICTUGETJMP.load},{min:16032256,max:16032512,load:t.DICTIGETEXEC.load},{min:16032512,max:16032768,load:t.DICTUGETEXEC.load},{min:16038912,max:16039168,load:t.DICTIGETJMPZ.load},{min:16039168,max:16039424,load:t.DICTUGETJMPZ.load},{min:16039424,max:16039680,load:t.DICTIGETEXECZ.load},{min:16039680,max:16039936,load:t.DICTUGETEXECZ.load},{min:15993344,max:15993600,load:t.DICTGET.load},{min:15993600,max:15993856,load:t.DICTGETREF.load},{min:15993856,max:15994112,load:t.DICTIGET.load},{min:15994112,max:15994368,load:t.DICTIGETREF.load},{min:15994368,max:15994624,load:t.DICTUGET.load},{min:15994624,max:15994880,load:t.DICTUGETREF.load},{min:15995392,max:15995648,load:t.DICTSET.load},{min:15995648,max:15995904,load:t.DICTSETREF.load},{min:15995904,max:15996160,load:t.DICTISET.load},{min:15996160,max:15996416,load:t.DICTISETREF.load},{min:15996416,max:15996672,load:t.DICTUSET.load},{min:15996672,max:15996928,load:t.DICTUSETREF.load},{min:15997440,max:15997696,load:t.DICTSETGET.load},{min:15997696,max:15997952,load:t.DICTSETGETREF.load},{min:15997952,max:15998208,load:t.DICTISETGET.load},{min:15998208,max:15998464,load:t.DICTISETGETREF.load},{min:15998464,max:15998720,load:t.DICTUSETGET.load},{min:15998720,max:15998976,load:t.DICTUSETGETREF.load},{min:15999488,max:15999744,load:t.DICTREPLACE.load},{min:15999744,max:16e6,load:t.DICTREPLACEREF.load},{min:16e6,max:16000256,load:t.DICTIREPLACE.load},{min:16000256,max:16000512,load:t.DICTIREPLACEREF.load},{min:16000512,max:16000768,load:t.DICTUREPLACE.load},{min:16000768,max:16001024,load:t.DICTUREPLACEREF.load},{min:16001536,max:16001792,load:t.DICTREPLACEGET.load},{min:16001792,max:16002048,load:t.DICTREPLACEGETREF.load},{min:16002048,max:16002304,load:t.DICTIREPLACEGET.load},{min:16002304,max:16002560,load:t.DICTIREPLACEGETREF.load},{min:16002560,max:16002816,load:t.DICTUREPLACEGET.load},{min:16002816,max:16003072,load:t.DICTUREPLACEGETREF.load},{min:16003584,max:16003840,load:t.DICTADD.load},{min:16003840,max:16004096,load:t.DICTADDREF.load},{min:16004096,max:16004352,load:t.DICTIADD.load},{min:16004352,max:16004608,load:t.DICTIADDREF.load},{min:16004608,max:16004864,load:t.DICTUADD.load},{min:16004864,max:16005120,load:t.DICTUADDREF.load},{min:16005632,max:16005888,load:t.DICTADDGET.load},{min:16005888,max:16006144,load:t.DICTADDGETREF.load},{min:16006144,max:16006400,load:t.DICTIADDGET.load},{min:16006400,max:16006656,load:t.DICTIADDGETREF.load},{min:16006656,max:16006912,load:t.DICTUADDGET.load},{min:16006912,max:16007168,load:t.DICTUADDGETREF.load},{min:16015872,max:16016128,load:t.DICTDELGET.load},{min:16016128,max:16016384,load:t.DICTDELGETREF.load},{min:16016384,max:16016640,load:t.DICTIDELGET.load},{min:16016640,max:16016896,load:t.DICTIDELGETREF.load},{min:16016896,max:16017152,load:t.DICTUDELGET.load},{min:16017152,max:16017408,load:t.DICTUDELGETREF.load},{min:16024064,max:16024320,load:t.DICTMIN.load},{min:16024320,max:16024576,load:t.DICTMINREF.load},{min:16024576,max:16024832,load:t.DICTIMIN.load},{min:16024832,max:16025088,load:t.DICTIMINREF.load},{min:16025088,max:16025344,load:t.DICTUMIN.load},{min:16025344,max:16025600,load:t.DICTUMINREF.load},{min:16026112,max:16026368,load:t.DICTMAX.load},{min:16026368,max:16026624,load:t.DICTMAXREF.load},{min:16026624,max:16026880,load:t.DICTIMAX.load},{min:16026880,max:16027136,load:t.DICTIMAXREF.load},{min:16027136,max:16027392,load:t.DICTUMAX.load},{min:16027392,max:16027648,load:t.DICTUMAXREF.load},{min:16028160,max:16028416,load:t.DICTREMMIN.load},{min:16028416,max:16028672,load:t.DICTREMMINREF.load},{min:16028672,max:16028928,load:t.DICTIREMMIN.load},{min:16028928,max:16029184,load:t.DICTIREMMINREF.load},{min:16029184,max:16029440,load:t.DICTUREMMIN.load},{min:16029440,max:16029696,load:t.DICTUREMMINREF.load},{min:16030208,max:16030464,load:t.DICTREMMAX.load},{min:16030464,max:16030720,load:t.DICTREMMAXREF.load},{min:16030720,max:16030976,load:t.DICTIREMMAX.load},{min:16030976,max:16031232,load:t.DICTIREMMAXREF.load},{min:16031232,max:16031488,load:t.DICTUREMMAX.load},{min:16031488,max:16031744,load:t.DICTUREMMAXREF.load},{min:16007424,max:16007680,load:t.DICTSETB.load},{min:16007680,max:16007936,load:t.DICTISETB.load},{min:16007936,max:16008192,load:t.DICTUSETB.load},{min:16008448,max:16008704,load:t.DICTSETGETB.load},{min:16008704,max:16008960,load:t.DICTISETGETB.load},{min:16008960,max:16009216,load:t.DICTUSETGETB.load},{min:16009472,max:16009728,load:t.DICTREPLACEB.load},{min:16009728,max:16009984,load:t.DICTIREPLACEB.load},{min:16009984,max:16010240,load:t.DICTUREPLACEB.load},{min:16010496,max:16010752,load:t.DICTREPLACEGETB.load},{min:16010752,max:16011008,load:t.DICTIREPLACEGETB.load},{min:16011008,max:16011264,load:t.DICTUREPLACEGETB.load},{min:16011520,max:16011776,load:t.DICTADDB.load},{min:16011776,max:16012032,load:t.DICTIADDB.load},{min:16012032,max:16012288,load:t.DICTUADDB.load},{min:16012544,max:16012800,load:t.DICTADDGETB.load},{min:16012800,max:16013056,load:t.DICTIADDGETB.load},{min:16013056,max:16013312,load:t.DICTUADDGETB.load},{min:16013568,max:16013824,load:t.DICTDEL.load},{min:16013824,max:16014080,load:t.DICTIDEL.load},{min:16014080,max:16014336,load:t.DICTUDEL.load},{min:16017664,max:16017920,load:t.DICTGETOPTREF.load},{min:16017920,max:16018176,load:t.DICTIGETOPTREF.load},{min:16018176,max:16018432,load:t.DICTUGETOPTREF.load},{min:16018688,max:16018944,load:t.DICTSETGETOPTREF.load},{min:16018944,max:16019200,load:t.DICTISETGETOPTREF.load},{min:16019200,max:16019456,load:t.DICTUSETGETOPTREF.load},{min:16036096,max:16036352,load:t.SUBDICTGET.load},{min:16036352,max:16036608,load:t.SUBDICTIGET.load},{min:16036608,max:16036864,load:t.SUBDICTUGET.load},{min:16037120,max:16037376,load:t.SUBDICTRPGET.load},{min:16037376,max:16037632,load:t.SUBDICTIRPGET.load},{min:16037632,max:16037888,load:t.SUBDICTURPGET.load},{min:15921152,max:15921408,load:t.THROWANY.load},{min:15921408,max:15921664,load:t.THROWARGANY.load},{min:15922176,max:15922432,load:t.THROWANYIFNOT.load},{min:15922432,max:15922688,load:t.THROWARGANYIFNOT.load},{min:16020480,max:16020736,load:t.DICTGETNEXT.load},{min:16020736,max:16020992,load:t.DICTGETNEXTEQ.load},{min:16020992,max:16021248,load:t.DICTGETPREV.load},{min:16021248,max:16021504,load:t.DICTGETPREVEQ.load},{min:16021504,max:16021760,load:t.DICTIGETNEXT.load},{min:16021760,max:16022016,load:t.DICTIGETNEXTEQ.load},{min:16022016,max:16022272,load:t.DICTIGETPREV.load},{min:16022272,max:16022528,load:t.DICTIGETPREVEQ.load},{min:16022528,max:16022784,load:t.DICTUGETNEXT.load},{min:16022784,max:16023040,load:t.DICTUGETNEXTEQ.load},{min:16023040,max:16023296,load:t.DICTUGETPREV.load},{min:16023296,max:16023552,load:t.DICTUGETPREVEQ.load},{min:10878976,max:10944512,load:t.ADDINT.load},{min:10944512,max:11010048,load:t.MULINT.load},{min:12035584,max:12035840,load:t.QADDINT.load},{min:12035840,max:12036096,load:t.QMULINT.load},{min:12582912,max:12648448,load:t.EQINT.load},{min:12648448,max:12713984,load:t.LESSINT.load},{min:12713984,max:12779520,load:t.GTINT.load},{min:12779520,max:12845056,load:t.NEQINT.load},{min:12042240,max:12042496,load:t.QEQINT.load},{min:12042496,max:12042752,load:t.QLESSINT.load},{min:12042752,max:12043008,load:t.QGTINT.load},{min:12043008,max:12043264,load:t.QNEQINT.load},{min:8650752,max:8716288,load:t.PUSHPOW2DEC.load},{min:8716288,max:8781824,load:t.PUSHNEGPOW2.load},{min:11796480,max:11862016,load:t.FITS.load},{min:11862016,max:11927552,load:t.UFITS.load},{min:12039168,max:12039424,load:t.QFITS.load},{min:12039424,max:12039680,load:t.QUFITS.load},{min:15590144,max:15590400,load:t.SETCONTCTRMANY.load},{min:14366208,max:14366464,load:t.CALLCCARGS.load},{min:15925248,max:15990784,load:t.TRYARGS.load},{min:14109696,max:14110720,load:t.PLDREFIDX.load},{min:14116864,max:14117888,load:t.CHASHI.load},{min:14117888,max:14118912,load:t.CDEPTHI.load},{min:15810560,max:15826944,load:t.JMPDICT.load},{min:15826944,max:15843328,load:t.PREPAREDICT.load},{min:15910912,max:15912960,load:t.THROWARG.load},{min:15915008,max:15917056,load:t.THROWARGIF.load},{min:15919104,max:15921152,load:t.THROWARGIFNOT.load},{min:14356480,max:14360576,load:t.JMPXARGS.load},{min:14360576,max:14364672,load:t.RETARGS.load},{min:15532032,max:15536128,load:t.RETURNARGS.load},{min:6225920,max:6230016,load:t.BLKDROP.load},{min:7274496,max:7278592,load:t.TUPLE.load},{min:7278592,max:7282688,load:t.INDEX.load},{min:7282688,max:7286784,load:t.UNTUPLE.load},{min:7286784,max:7290880,load:t.UNPACKFIRST.load},{min:7290880,max:7294976,load:t.EXPLODE.load},{min:7294976,max:7299072,load:t.SETINDEX.load},{min:7299072,max:7303168,load:t.INDEXQ.load},{min:7303168,max:7307264,load:t.SETINDEXQ.load},{min:5509120,max:5513216,load:t.XC2PU.load},{min:5517312,max:5521408,load:t.XCPU2.load},{min:5533696,max:5537792,load:t.PUSH3.load},{min:5242880,max:5308416,load:t.XCHG2.load},{min:5308416,max:5373952,load:t.XCPU.load},{min:5439488,max:5505024,load:t.PUSH2.load},{min:5373952,max:5439488,load:t.PUXC.load},{min:5513216,max:5517312,load:t.XCPUXC.load},{min:5521408,max:5525504,load:t.PUXC2.load},{min:5525504,max:5529600,load:t.PUXCPU.load},{min:5529600,max:5533696,load:t.PU2XC.load},{min:5570560,max:5636096,load:t.BLKSWAP.load},{min:6160384,max:6225920,load:t.REVERSE.load},{min:15466496,max:15532032,load:t.SETCONTARGS.load},{min:15597568,max:15663104,load:t.BLESSARGS.load},{min:13568512,max:13568768,load:t.STIR.load},{min:13568768,max:13569024,load:t.STUR.load},{min:13569024,max:13569280,load:t.STIQ.load},{min:13569280,max:13569536,load:t.STUQ.load},{min:13569536,max:13569792,load:t.STIRQ.load},{min:13569792,max:13570048,load:t.STURQ.load},{min:14092800,max:14093056,load:t.PLDI.load},{min:14093056,max:14093312,load:t.PLDU.load},{min:14093312,max:14093568,load:t.LDIQ.load},{min:14093568,max:14093824,load:t.LDUQ.load},{min:14093824,max:14094080,load:t.PLDIQ.load},{min:14094080,max:14094336,load:t.PLDUQ.load},{min:14094336,max:14096384,load:t.PLDUZ.load},{min:14097664,max:14097920,load:t.PLDSLICE.load},{min:14097920,max:14098176,load:t.LDSLICEQ.load},{min:14098176,max:14098432,load:t.PLDSLICEQ.load},{min:14909440,max:14917632,load:t.IFBITJMP.load},{min:14917632,max:14925824,load:t.IFNBITJMP.load},{min:7319552,max:7323648,load:t.INDEX2.load},{min:7323648,max:7340032,load:t.INDEX3.load},{min:8585216,max:8650496,load:t.PUSHPOW2.load},{min:6230016,max:6291456,load:t.BLKPUSH.load},{min:7081984,max:7143424,load:t.BLKDROP2.load},{min:16269568,max:16277504,load:t.GETGLOB.load},{min:16277760,max:16285696,load:t.SETGLOB.load},{min:16261120,max:16261888,load:t.GETPARAM.load},{min:8912896,max:8978432,load:t.PUSHREF.load},{min:8978432,max:9043968,load:t.PUSHREFSLICE.load},{min:9043968,max:9109504,load:t.PUSHREFCONT.load},{min:14367744,max:14368e3,load:t.CALLREF.load},{min:14368e3,max:14368256,load:t.JMPREF.load},{min:14368256,max:14368512,load:t.JMPREFDATA.load},{min:14876672,max:14876928,load:t.IFREF.load},{min:14876928,max:14877184,load:t.IFNOTREF.load},{min:14877184,max:14877440,load:t.IFJMPREF.load},{min:14877440,max:14877696,load:t.IFNOTJMPREF.load},{min:1488e4,max:14880256,load:t.IFREFELSE.load},{min:14880256,max:14880512,load:t.IFELSEREF.load},{min:14880512,max:14880768,load:t.IFREFELSEREF.load},{min:14925824,max:14934016,load:t.IFBITJMPREF.load},{min:14934016,max:14942208,load:t.IFNBITJMPREF.load},{min:16032768,max:16033792,load:t.DICTPUSHCONST.load},{min:16034816,max:16035840,load:t.PFXDICTSWITCH.load},{min:14099968,max:14100224,load:t.SDBEGINSX.load},{min:14100224,max:14100480,load:t.SDBEGINSXQ.load},{min:14100480,max:14101504,load:t.SDBEGINS.load},{min:14101504,max:14102528,load:t.SDBEGINSQ.load},{min:13574144,max:13574400,load:t.STREFCONST.load},{min:13574400,max:13574656,load:t.STREF2CONST.load},{min:15921664,max:15921920,load:t.THROWANYIF.load},{min:15921920,max:15922176,load:t.THROWARGANYIF.load},{min:16707584,max:16711680,load:t.DEBUGSTR.load},{min:15556608,max:15558656,load:t.SETCONTCTR.load},{min:15560704,max:15562752,load:t.SETRETCTR.load},{min:15564800,max:15566848,load:t.SETALTCTR.load},{min:15568896,max:15570944,load:t.POPSAVE.load},{min:15572992,max:15575040,load:t.SAVECTR.load},{min:15577088,max:15579136,load:t.SAVEALTCTR.load},{min:15581184,max:15583232,load:t.SAVEBOTHCTR.load},{min:14368768,max:14372864,load:t.RUNVM.load},{min:5898240,max:5963776,load:t.SWAP2.load},{min:5963776,max:6029312,load:t.DROP2.load},{min:6029312,max:6094848,load:t.DUP2.load},{min:6094848,max:6160384,load:t.OVER2.load},{min:11087872,max:11088128,load:t.ADDRSHIFT_MOD.load},{min:11088128,max:11088384,load:t.ADDRSHIFTR_MOD.load},{min:11088384,max:11088640,load:t.ADDRSHIFTC_MOD.load},{min:11088896,max:11089152,load:t.RSHIFT_.load},{min:11089152,max:11089408,load:t.RSHIFTR_.load},{min:11089408,max:11089664,load:t.RSHIFTC_.load},{min:11089920,max:11090176,load:t.MODPOW2_.load},{min:11090176,max:11090432,load:t.MODPOW2R_.load},{min:11090432,max:11090688,load:t.MODPOW2C_.load},{min:11090944,max:11091200,load:t.RSHIFT_MOD.load},{min:11091200,max:11091456,load:t.RSHIFTR_MOD.load},{min:11091456,max:11091712,load:t.RSHIFTC_MOD.load},{min:11120640,max:11120896,load:t.MULADDRSHIFT_MOD.load},{min:11120896,max:11121152,load:t.MULADDRSHIFTR_MOD.load},{min:11121152,max:11121408,load:t.MULADDRSHIFTC_MOD.load},{min:11121664,max:11121920,load:t.MULRSHIFT_.load},{min:11121920,max:11122176,load:t.MULRSHIFTR_.load},{min:11122176,max:11122432,load:t.MULRSHIFTC_.load},{min:11122688,max:11122944,load:t.MULMODPOW2_.load},{min:11122944,max:11123200,load:t.MULMODPOW2R_.load},{min:11123200,max:11123456,load:t.MULMODPOW2C_.load},{min:11123712,max:11123968,load:t.MULRSHIFT_MOD.load},{min:11123968,max:11124224,load:t.MULRSHIFTR_MOD.load},{min:11124224,max:11124480,load:t.MULRSHIFTC_MOD.load},{min:11128832,max:11129088,load:t.LSHIFT_ADDDIVMOD.load},{min:11129088,max:11129344,load:t.LSHIFT_ADDDIVMODR.load},{min:11129344,max:11129600,load:t.LSHIFT_ADDDIVMODC.load},{min:11129856,max:11130112,load:t.LSHIFT_DIV.load},{min:11130112,max:11130368,load:t.LSHIFT_DIVR.load},{min:11130368,max:11130624,load:t.LSHIFT_DIVC.load},{min:11130880,max:11131136,load:t.LSHIFT_MOD.load},{min:11131136,max:11131392,load:t.LSHIFT_MODR.load},{min:11131392,max:11131648,load:t.LSHIFT_MODC.load},{min:11131904,max:11132160,load:t.LSHIFT_DIVMOD.load},{min:11132160,max:11132416,load:t.LSHIFT_DIVMODR.load},{min:11132416,max:11132672,load:t.LSHIFT_DIVMODC.load},{min:16319488,max:16319744,load:t.HASHEXT.load},{min:16319744,max:1632e4,load:t.HASHEXTR.load},{min:1632e4,max:16320256,load:t.HASHEXTA.load},{min:16320256,max:16320512,load:t.HASHEXTAR.load},{min:13369344,max:13434880,load:t.STREF.load},{min:13570048,max:13570304,load:t.STREF_ALT.load},{min:13500416,max:13565952,load:t.STSLICE.load},{min:13570560,max:13570816,load:t.STSLICE_ALT.load},{min:4194304,max:5242880,load:t.XCHG3.load},{min:5505024,max:5509120,load:t.XCHG3_ALT.load},{min:13238272,max:13303808,load:t.STI.load},{min:13568e3,max:13568256,load:t.STI_ALT.load},{min:13303808,max:13369344,load:t.STU.load},{min:13568256,max:13568512,load:t.STU_ALT.load},{min:13762560,max:13828096,load:t.LDI.load},{min:14092288,max:14092544,load:t.LDI_ALT.load},{min:13828096,max:13893632,load:t.LDU.load},{min:14092544,max:14092800,load:t.LDU_ALT.load},{min:14024704,max:14090240,load:t.LDSLICE.load},{min:14097408,max:14097664,load:t.LDSLICE_ALT.load},{min:11272192,max:11337728,load:t.LSHIFT_VAR.load},{min:11141120,max:11206656,load:t.LSHIFT.load},{min:12037120,max:12037376,load:t.QLSHIFT_VAR.load},{min:12036608,max:12036864,load:t.QLSHIFT.load},{min:13580544,max:13580800,load:t.BCHKBITS_VAR.load},{min:13580288,max:13580544,load:t.BCHKBITS.load},{min:13581568,max:13581824,load:t.BCHKBITSQ_VAR.load},{min:13581312,max:13581568,load:t.BCHKBITSQ.load},{min:11337728,max:11403264,load:t.RSHIFT_VAR.load},{min:11206656,max:11272192,load:t.RSHIFT.load},{min:11084800,max:11085056,load:t.RSHIFT_ALT.load},{min:12037376,max:12037632,load:t.QRSHIFT_VAR.load},{min:12036864,max:12037120,load:t.QRSHIFT.load},{min:12036388,max:12036389,load:t.QRSHIFT_ALT.load},{min:15728640,max:15794176,load:t.CALLDICT.load},{min:15794176,max:15810560,load:t.CALLDICT_LONG.load},{min:15859712,max:15876096,load:t.THROW_SHORT.load},{min:15908864,max:15910912,load:t.THROW.load},{min:15876096,max:15892480,load:t.THROWIF_SHORT.load},{min:15912960,max:15915008,load:t.THROWIF.load},{min:15892480,max:15908864,load:t.THROWIFNOT_SHORT.load},{min:15917056,max:15919104,load:t.THROWIFNOT.load},{min:7340032,max:8388608,load:t.PUSHINT_4.load},{min:8388608,max:8454144,load:t.PUSHINT_8.load},{min:8454144,max:8519680,load:t.PUSHINT_16.load},{min:8519680,max:8583168,load:t.PUSHINT_LONG.load},{min:1114112,max:1179648,load:t.XCHG_01_LONG.load},{min:131072,max:1048576,load:t.XCHG_0I.load},{min:1048576,max:1114112,load:t.XCHG_IJ.load},{min:1179648,max:2097152,load:t.XCHG_1I.load},{min:16646144,max:16646400,load:t.DUMPSTK.load},{min:16646400,max:16651264,load:t.DEBUG.load},{min:16651264,max:16651520,load:t.STRDUMP.load},{min:16651520,max:16654336,load:t.DEBUG_1.load},{min:16654336,max:16658432,load:t.DUMP.load},{min:16658432,max:16707584,load:t.DEBUG_2.load},{min:15548416,max:15550464,load:t.PUSHCTR.load},{min:2228224,max:3145728,load:t.PUSH.load},{min:5636096,max:5701632,load:t.PUSH_LONG.load},{min:15552512,max:15554560,load:t.POPCTR.load},{min:3276800,max:4194304,load:t.POP.load},{min:5701632,max:5767168,load:t.POP_LONG.load},{min:14352384,max:14356480,load:t.CALLXARGS.load},{min:14286848,max:14352384,load:t.CALLXARGS_1.load},{min:9109504,max:9175040,load:t.PUSHSLICE.load},{min:9175040,max:9240576,load:t.PUSHSLICE_REFS.load},{min:9240576,max:9281536,load:t.PUSHSLICE_LONG.load},{min:9306112,max:9437184,load:t.PUSHCONT.load},{min:9437184,max:10485760,load:t.PUSHCONT_SHORT.load},{min:13598720,max:13631488,load:t.STSLICECONST.load},{min:16711680,max:16773120,load:t.SETCP.load},{min:16773120,max:16773376,load:t.SETCPX.load},{min:16773376,max:16777216,load:t.SETCP_SHORT.load},{min:16340224,max:16340480,load:t.DEBUGMARK.load}],r.storeMapping=new Map,r.storeMapping.set("PUSHNAN",t.PUSHNAN.store),r.storeMapping.set("ADD",t.ADD.store),r.storeMapping.set("SUB",t.SUB.store),r.storeMapping.set("SUBR",t.SUBR.store),r.storeMapping.set("NEGATE",t.NEGATE.store),r.storeMapping.set("INC",t.INC.store),r.storeMapping.set("DEC",t.DEC.store),r.storeMapping.set("MUL",t.MUL.store),r.storeMapping.set("POW2",t.POW2.store),r.storeMapping.set("AND",t.AND.store),r.storeMapping.set("OR",t.OR.store),r.storeMapping.set("XOR",t.XOR.store),r.storeMapping.set("NOT",t.NOT.store),r.storeMapping.set("FITSX",t.FITSX.store),r.storeMapping.set("UFITSX",t.UFITSX.store),r.storeMapping.set("BITSIZE",t.BITSIZE.store),r.storeMapping.set("UBITSIZE",t.UBITSIZE.store),r.storeMapping.set("MIN",t.MIN.store),r.storeMapping.set("MAX",t.MAX.store),r.storeMapping.set("MINMAX",t.MINMAX.store),r.storeMapping.set("ABS",t.ABS.store),r.storeMapping.set("QADD",t.QADD.store),r.storeMapping.set("QSUB",t.QSUB.store),r.storeMapping.set("QSUBR",t.QSUBR.store),r.storeMapping.set("QNEGATE",t.QNEGATE.store),r.storeMapping.set("QINC",t.QINC.store),r.storeMapping.set("QDEC",t.QDEC.store),r.storeMapping.set("QMUL",t.QMUL.store),r.storeMapping.set("QPOW2",t.QPOW2.store),r.storeMapping.set("QAND",t.QAND.store),r.storeMapping.set("QOR",t.QOR.store),r.storeMapping.set("QXOR",t.QXOR.store),r.storeMapping.set("QNOT",t.QNOT.store),r.storeMapping.set("QFITSX",t.QFITSX.store),r.storeMapping.set("QUFITSX",t.QUFITSX.store),r.storeMapping.set("QBITSIZE",t.QBITSIZE.store),r.storeMapping.set("QUBITSIZE",t.QUBITSIZE.store),r.storeMapping.set("QMIN",t.QMIN.store),r.storeMapping.set("QMAX",t.QMAX.store),r.storeMapping.set("QMINMAX",t.QMINMAX.store),r.storeMapping.set("QABS",t.QABS.store),r.storeMapping.set("SGN",t.SGN.store),r.storeMapping.set("LESS",t.LESS.store),r.storeMapping.set("EQUAL",t.EQUAL.store),r.storeMapping.set("LEQ",t.LEQ.store),r.storeMapping.set("GREATER",t.GREATER.store),r.storeMapping.set("NEQ",t.NEQ.store),r.storeMapping.set("GEQ",t.GEQ.store),r.storeMapping.set("CMP",t.CMP.store),r.storeMapping.set("ISNAN",t.ISNAN.store),r.storeMapping.set("CHKNAN",t.CHKNAN.store),r.storeMapping.set("QSGN",t.QSGN.store),r.storeMapping.set("QLESS",t.QLESS.store),r.storeMapping.set("QEQUAL",t.QEQUAL.store),r.storeMapping.set("QLEQ",t.QLEQ.store),r.storeMapping.set("QGREATER",t.QGREATER.store),r.storeMapping.set("QNEQ",t.QNEQ.store),r.storeMapping.set("QGEQ",t.QGEQ.store),r.storeMapping.set("QCMP",t.QCMP.store),r.storeMapping.set("SEMPTY",t.SEMPTY.store),r.storeMapping.set("SDEMPTY",t.SDEMPTY.store),r.storeMapping.set("SREMPTY",t.SREMPTY.store),r.storeMapping.set("SDFIRST",t.SDFIRST.store),r.storeMapping.set("SDLEXCMP",t.SDLEXCMP.store),r.storeMapping.set("SDEQ",t.SDEQ.store),r.storeMapping.set("SDPFX",t.SDPFX.store),r.storeMapping.set("SDPFXREV",t.SDPFXREV.store),r.storeMapping.set("SDPPFX",t.SDPPFX.store),r.storeMapping.set("SDPPFXREV",t.SDPPFXREV.store),r.storeMapping.set("SDSFX",t.SDSFX.store),r.storeMapping.set("SDSFXREV",t.SDSFXREV.store),r.storeMapping.set("SDPSFX",t.SDPSFX.store),r.storeMapping.set("SDPSFXREV",t.SDPSFXREV.store),r.storeMapping.set("SDCNTLEAD0",t.SDCNTLEAD0.store),r.storeMapping.set("SDCNTLEAD1",t.SDCNTLEAD1.store),r.storeMapping.set("SDCNTTRAIL0",t.SDCNTTRAIL0.store),r.storeMapping.set("SDCNTTRAIL1",t.SDCNTTRAIL1.store),r.storeMapping.set("NEWC",t.NEWC.store),r.storeMapping.set("ENDC",t.ENDC.store),r.storeMapping.set("ENDCST",t.ENDCST.store),r.storeMapping.set("STBREF",t.STBREF.store),r.storeMapping.set("STB",t.STB.store),r.storeMapping.set("STREFR",t.STREFR.store),r.storeMapping.set("STBREFR",t.STBREFR.store),r.storeMapping.set("STSLICER",t.STSLICER.store),r.storeMapping.set("STBR",t.STBR.store),r.storeMapping.set("STREFQ",t.STREFQ.store),r.storeMapping.set("STBREFQ",t.STBREFQ.store),r.storeMapping.set("STSLICEQ",t.STSLICEQ.store),r.storeMapping.set("STBQ",t.STBQ.store),r.storeMapping.set("STREFRQ",t.STREFRQ.store),r.storeMapping.set("STBREFRQ",t.STBREFRQ.store),r.storeMapping.set("STSLICERQ",t.STSLICERQ.store),r.storeMapping.set("STBRQ",t.STBRQ.store),r.storeMapping.set("ENDXC",t.ENDXC.store),r.storeMapping.set("BDEPTH",t.BDEPTH.store),r.storeMapping.set("BBITS",t.BBITS.store),r.storeMapping.set("BREFS",t.BREFS.store),r.storeMapping.set("BBITREFS",t.BBITREFS.store),r.storeMapping.set("BREMBITS",t.BREMBITS.store),r.storeMapping.set("BREMREFS",t.BREMREFS.store),r.storeMapping.set("BREMBITREFS",t.BREMBITREFS.store),r.storeMapping.set("BCHKREFS",t.BCHKREFS.store),r.storeMapping.set("BCHKBITREFS",t.BCHKBITREFS.store),r.storeMapping.set("BCHKREFSQ",t.BCHKREFSQ.store),r.storeMapping.set("BCHKBITREFSQ",t.BCHKBITREFSQ.store),r.storeMapping.set("STZEROES",t.STZEROES.store),r.storeMapping.set("STONES",t.STONES.store),r.storeMapping.set("STSAME",t.STSAME.store),r.storeMapping.set("CTOS",t.CTOS.store),r.storeMapping.set("ENDS",t.ENDS.store),r.storeMapping.set("LDREF",t.LDREF.store),r.storeMapping.set("LDREFRTOS",t.LDREFRTOS.store),r.storeMapping.set("SDCUTFIRST",t.SDCUTFIRST.store),r.storeMapping.set("SDSKIPFIRST",t.SDSKIPFIRST.store),r.storeMapping.set("SDCUTLAST",t.SDCUTLAST.store),r.storeMapping.set("SDSKIPLAST",t.SDSKIPLAST.store),r.storeMapping.set("SDSUBSTR",t.SDSUBSTR.store),r.storeMapping.set("SCUTFIRST",t.SCUTFIRST.store),r.storeMapping.set("SSKIPFIRST",t.SSKIPFIRST.store),r.storeMapping.set("SCUTLAST",t.SCUTLAST.store),r.storeMapping.set("SSKIPLAST",t.SSKIPLAST.store),r.storeMapping.set("SUBSLICE",t.SUBSLICE.store),r.storeMapping.set("SPLIT",t.SPLIT.store),r.storeMapping.set("SPLITQ",t.SPLITQ.store),r.storeMapping.set("XCTOS",t.XCTOS.store),r.storeMapping.set("XLOAD",t.XLOAD.store),r.storeMapping.set("XLOADQ",t.XLOADQ.store),r.storeMapping.set("SCHKBITS",t.SCHKBITS.store),r.storeMapping.set("SCHKREFS",t.SCHKREFS.store),r.storeMapping.set("SCHKBITREFS",t.SCHKBITREFS.store),r.storeMapping.set("SCHKBITSQ",t.SCHKBITSQ.store),r.storeMapping.set("SCHKREFSQ",t.SCHKREFSQ.store),r.storeMapping.set("SCHKBITREFSQ",t.SCHKBITREFSQ.store),r.storeMapping.set("PLDREFVAR",t.PLDREFVAR.store),r.storeMapping.set("SBITS",t.SBITS.store),r.storeMapping.set("SREFS",t.SREFS.store),r.storeMapping.set("SBITREFS",t.SBITREFS.store),r.storeMapping.set("LDZEROES",t.LDZEROES.store),r.storeMapping.set("LDONES",t.LDONES.store),r.storeMapping.set("LDSAME",t.LDSAME.store),r.storeMapping.set("SDEPTH",t.SDEPTH.store),r.storeMapping.set("CDEPTH",t.CDEPTH.store),r.storeMapping.set("CLEVEL",t.CLEVEL.store),r.storeMapping.set("CLEVELMASK",t.CLEVELMASK.store),r.storeMapping.set("CHASHIX",t.CHASHIX.store),r.storeMapping.set("CDEPTHIX",t.CDEPTHIX.store),r.storeMapping.set("EXECUTE",t.EXECUTE.store),r.storeMapping.set("JMPX",t.JMPX.store),r.storeMapping.set("RET",t.RET.store),r.storeMapping.set("RETALT",t.RETALT.store),r.storeMapping.set("RETBOOL",t.RETBOOL.store),r.storeMapping.set("CALLCC",t.CALLCC.store),r.storeMapping.set("JMPXDATA",t.JMPXDATA.store),r.storeMapping.set("CALLXVARARGS",t.CALLXVARARGS.store),r.storeMapping.set("RETVARARGS",t.RETVARARGS.store),r.storeMapping.set("JMPXVARARGS",t.JMPXVARARGS.store),r.storeMapping.set("CALLCCVARARGS",t.CALLCCVARARGS.store),r.storeMapping.set("RETDATA",t.RETDATA.store),r.storeMapping.set("RUNVMX",t.RUNVMX.store),r.storeMapping.set("IFRET",t.IFRET.store),r.storeMapping.set("IFNOTRET",t.IFNOTRET.store),r.storeMapping.set("IF",t.IF.store),r.storeMapping.set("IFNOT",t.IFNOT.store),r.storeMapping.set("IFJMP",t.IFJMP.store),r.storeMapping.set("IFNOTJMP",t.IFNOTJMP.store),r.storeMapping.set("IFELSE",t.IFELSE.store),r.storeMapping.set("CONDSEL",t.CONDSEL.store),r.storeMapping.set("CONDSELCHK",t.CONDSELCHK.store),r.storeMapping.set("IFRETALT",t.IFRETALT.store),r.storeMapping.set("IFNOTRETALT",t.IFNOTRETALT.store),r.storeMapping.set("REPEAT",t.REPEAT.store),r.storeMapping.set("REPEATEND",t.REPEATEND.store),r.storeMapping.set("UNTIL",t.UNTIL.store),r.storeMapping.set("UNTILEND",t.UNTILEND.store),r.storeMapping.set("WHILE",t.WHILE.store),r.storeMapping.set("WHILEEND",t.WHILEEND.store),r.storeMapping.set("AGAIN",t.AGAIN.store),r.storeMapping.set("AGAINEND",t.AGAINEND.store),r.storeMapping.set("REPEATBRK",t.REPEATBRK.store),r.storeMapping.set("REPEATENDBRK",t.REPEATENDBRK.store),r.storeMapping.set("UNTILBRK",t.UNTILBRK.store),r.storeMapping.set("UNTILENDBRK",t.UNTILENDBRK.store),r.storeMapping.set("WHILEBRK",t.WHILEBRK.store),r.storeMapping.set("WHILEENDBRK",t.WHILEENDBRK.store),r.storeMapping.set("AGAINBRK",t.AGAINBRK.store),r.storeMapping.set("AGAINENDBRK",t.AGAINENDBRK.store),r.storeMapping.set("RETURNVARARGS",t.RETURNVARARGS.store),r.storeMapping.set("SETCONTVARARGS",t.SETCONTVARARGS.store),r.storeMapping.set("SETNUMVARARGS",t.SETNUMVARARGS.store),r.storeMapping.set("BLESS",t.BLESS.store),r.storeMapping.set("BLESSVARARGS",t.BLESSVARARGS.store),r.storeMapping.set("PUSHCTRX",t.PUSHCTRX.store),r.storeMapping.set("POPCTRX",t.POPCTRX.store),r.storeMapping.set("SETCONTCTRX",t.SETCONTCTRX.store),r.storeMapping.set("SETCONTCTRMANYX",t.SETCONTCTRMANYX.store),r.storeMapping.set("BOOLAND",t.BOOLAND.store),r.storeMapping.set("BOOLOR",t.BOOLOR.store),r.storeMapping.set("COMPOSBOTH",t.COMPOSBOTH.store),r.storeMapping.set("ATEXIT",t.ATEXIT.store),r.storeMapping.set("ATEXITALT",t.ATEXITALT.store),r.storeMapping.set("SETEXITALT",t.SETEXITALT.store),r.storeMapping.set("THENRET",t.THENRET.store),r.storeMapping.set("THENRETALT",t.THENRETALT.store),r.storeMapping.set("INVERT",t.INVERT.store),r.storeMapping.set("BOOLEVAL",t.BOOLEVAL.store),r.storeMapping.set("SAMEALT",t.SAMEALT.store),r.storeMapping.set("SAMEALTSAVE",t.SAMEALTSAVE.store),r.storeMapping.set("TRY",t.TRY.store),r.storeMapping.set("STDICT",t.STDICT.store),r.storeMapping.set("SKIPDICT",t.SKIPDICT.store),r.storeMapping.set("LDDICTS",t.LDDICTS.store),r.storeMapping.set("PLDDICTS",t.PLDDICTS.store),r.storeMapping.set("LDDICT",t.LDDICT.store),r.storeMapping.set("PLDDICT",t.PLDDICT.store),r.storeMapping.set("LDDICTQ",t.LDDICTQ.store),r.storeMapping.set("PLDDICTQ",t.PLDDICTQ.store),r.storeMapping.set("PFXDICTSET",t.PFXDICTSET.store),r.storeMapping.set("PFXDICTREPLACE",t.PFXDICTREPLACE.store),r.storeMapping.set("PFXDICTADD",t.PFXDICTADD.store),r.storeMapping.set("PFXDICTDEL",t.PFXDICTDEL.store),r.storeMapping.set("PFXDICTGETQ",t.PFXDICTGETQ.store),r.storeMapping.set("PFXDICTGET",t.PFXDICTGET.store),r.storeMapping.set("PFXDICTGETJMP",t.PFXDICTGETJMP.store),r.storeMapping.set("PFXDICTGETEXEC",t.PFXDICTGETEXEC.store),r.storeMapping.set("NOP",t.NOP.store),r.storeMapping.set("SWAP",t.SWAP.store),r.storeMapping.set("DUP",t.DUP.store),r.storeMapping.set("OVER",t.OVER.store),r.storeMapping.set("DROP",t.DROP.store),r.storeMapping.set("NIP",t.NIP.store),r.storeMapping.set("ROT",t.ROT.store),r.storeMapping.set("ROTREV",t.ROTREV.store),r.storeMapping.set("PICK",t.PICK.store),r.storeMapping.set("ROLL",t.ROLL.store),r.storeMapping.set("ROLLREV",t.ROLLREV.store),r.storeMapping.set("BLKSWX",t.BLKSWX.store),r.storeMapping.set("REVX",t.REVX.store),r.storeMapping.set("DROPX",t.DROPX.store),r.storeMapping.set("TUCK",t.TUCK.store),r.storeMapping.set("XCHGX",t.XCHGX.store),r.storeMapping.set("DEPTH",t.DEPTH.store),r.storeMapping.set("CHKDEPTH",t.CHKDEPTH.store),r.storeMapping.set("ONLYTOPX",t.ONLYTOPX.store),r.storeMapping.set("ONLYX",t.ONLYX.store),r.storeMapping.set("ACCEPT",t.ACCEPT.store),r.storeMapping.set("SETGASLIMIT",t.SETGASLIMIT.store),r.storeMapping.set("GASCONSUMED",t.GASCONSUMED.store),r.storeMapping.set("COMMIT",t.COMMIT.store),r.storeMapping.set("NOW",t.NOW.store),r.storeMapping.set("BLOCKLT",t.BLOCKLT.store),r.storeMapping.set("LTIME",t.LTIME.store),r.storeMapping.set("RANDSEED",t.RANDSEED.store),r.storeMapping.set("BALANCE",t.BALANCE.store),r.storeMapping.set("MYADDR",t.MYADDR.store),r.storeMapping.set("CONFIGROOT",t.CONFIGROOT.store),r.storeMapping.set("MYCODE",t.MYCODE.store),r.storeMapping.set("INCOMINGVALUE",t.INCOMINGVALUE.store),r.storeMapping.set("STORAGEFEES",t.STORAGEFEES.store),r.storeMapping.set("PREVBLOCKSINFOTUPLE",t.PREVBLOCKSINFOTUPLE.store),r.storeMapping.set("UNPACKEDCONFIGTUPLE",t.UNPACKEDCONFIGTUPLE.store),r.storeMapping.set("DUEPAYMENT",t.DUEPAYMENT.store),r.storeMapping.set("CONFIGDICT",t.CONFIGDICT.store),r.storeMapping.set("CONFIGPARAM",t.CONFIGPARAM.store),r.storeMapping.set("CONFIGOPTPARAM",t.CONFIGOPTPARAM.store),r.storeMapping.set("PREVMCBLOCKS",t.PREVMCBLOCKS.store),r.storeMapping.set("PREVKEYBLOCK",t.PREVKEYBLOCK.store),r.storeMapping.set("PREVMCBLOCKS_100",t.PREVMCBLOCKS_100.store),r.storeMapping.set("GLOBALID",t.GLOBALID.store),r.storeMapping.set("GETGASFEE",t.GETGASFEE.store),r.storeMapping.set("GETSTORAGEFEE",t.GETSTORAGEFEE.store),r.storeMapping.set("GETFORWARDFEE",t.GETFORWARDFEE.store),r.storeMapping.set("GETPRECOMPILEDGAS",t.GETPRECOMPILEDGAS.store),r.storeMapping.set("GETORIGINALFWDFEE",t.GETORIGINALFWDFEE.store),r.storeMapping.set("GETGASFEESIMPLE",t.GETGASFEESIMPLE.store),r.storeMapping.set("GETFORWARDFEESIMPLE",t.GETFORWARDFEESIMPLE.store),r.storeMapping.set("GETGLOBVAR",t.GETGLOBVAR.store),r.storeMapping.set("SETGLOBVAR",t.SETGLOBVAR.store),r.storeMapping.set("RANDU256",t.RANDU256.store),r.storeMapping.set("RAND",t.RAND.store),r.storeMapping.set("SETRAND",t.SETRAND.store),r.storeMapping.set("ADDRAND",t.ADDRAND.store),r.storeMapping.set("HASHCU",t.HASHCU.store),r.storeMapping.set("HASHSU",t.HASHSU.store),r.storeMapping.set("SHA256U",t.SHA256U.store),r.storeMapping.set("CHKSIGNU",t.CHKSIGNU.store),r.storeMapping.set("CHKSIGNS",t.CHKSIGNS.store),r.storeMapping.set("ECRECOVER",t.ECRECOVER.store),r.storeMapping.set("SECP256K1_XONLY_PUBKEY_TWEAK_ADD",t.SECP256K1_XONLY_PUBKEY_TWEAK_ADD.store),r.storeMapping.set("P256_CHKSIGNU",t.P256_CHKSIGNU.store),r.storeMapping.set("P256_CHKSIGNS",t.P256_CHKSIGNS.store),r.storeMapping.set("RIST255_FROMHASH",t.RIST255_FROMHASH.store),r.storeMapping.set("RIST255_VALIDATE",t.RIST255_VALIDATE.store),r.storeMapping.set("RIST255_ADD",t.RIST255_ADD.store),r.storeMapping.set("RIST255_SUB",t.RIST255_SUB.store),r.storeMapping.set("RIST255_MUL",t.RIST255_MUL.store),r.storeMapping.set("RIST255_MULBASE",t.RIST255_MULBASE.store),r.storeMapping.set("RIST255_PUSHL",t.RIST255_PUSHL.store),r.storeMapping.set("RIST255_QVALIDATE",t.RIST255_QVALIDATE.store),r.storeMapping.set("RIST255_QADD",t.RIST255_QADD.store),r.storeMapping.set("RIST255_QSUB",t.RIST255_QSUB.store),r.storeMapping.set("RIST255_QMUL",t.RIST255_QMUL.store),r.storeMapping.set("RIST255_QMULBASE",t.RIST255_QMULBASE.store),r.storeMapping.set("BLS_VERIFY",t.BLS_VERIFY.store),r.storeMapping.set("BLS_AGGREGATE",t.BLS_AGGREGATE.store),r.storeMapping.set("BLS_FASTAGGREGATEVERIFY",t.BLS_FASTAGGREGATEVERIFY.store),r.storeMapping.set("BLS_AGGREGATEVERIFY",t.BLS_AGGREGATEVERIFY.store),r.storeMapping.set("BLS_G1_ADD",t.BLS_G1_ADD.store),r.storeMapping.set("BLS_G1_SUB",t.BLS_G1_SUB.store),r.storeMapping.set("BLS_G1_NEG",t.BLS_G1_NEG.store),r.storeMapping.set("BLS_G1_MUL",t.BLS_G1_MUL.store),r.storeMapping.set("BLS_G1_MULTIEXP",t.BLS_G1_MULTIEXP.store),r.storeMapping.set("BLS_G1_ZERO",t.BLS_G1_ZERO.store),r.storeMapping.set("BLS_MAP_TO_G1",t.BLS_MAP_TO_G1.store),r.storeMapping.set("BLS_G1_INGROUP",t.BLS_G1_INGROUP.store),r.storeMapping.set("BLS_G1_ISZERO",t.BLS_G1_ISZERO.store),r.storeMapping.set("BLS_G2_ADD",t.BLS_G2_ADD.store),r.storeMapping.set("BLS_G2_SUB",t.BLS_G2_SUB.store),r.storeMapping.set("BLS_G2_NEG",t.BLS_G2_NEG.store),r.storeMapping.set("BLS_G2_MUL",t.BLS_G2_MUL.store),r.storeMapping.set("BLS_G2_MULTIEXP",t.BLS_G2_MULTIEXP.store),r.storeMapping.set("BLS_G2_ZERO",t.BLS_G2_ZERO.store),r.storeMapping.set("BLS_MAP_TO_G2",t.BLS_MAP_TO_G2.store),r.storeMapping.set("BLS_G2_INGROUP",t.BLS_G2_INGROUP.store),r.storeMapping.set("BLS_G2_ISZERO",t.BLS_G2_ISZERO.store),r.storeMapping.set("BLS_PAIRING",t.BLS_PAIRING.store),r.storeMapping.set("BLS_PUSHR",t.BLS_PUSHR.store),r.storeMapping.set("CDATASIZEQ",t.CDATASIZEQ.store),r.storeMapping.set("CDATASIZE",t.CDATASIZE.store),r.storeMapping.set("SDATASIZEQ",t.SDATASIZEQ.store),r.storeMapping.set("SDATASIZE",t.SDATASIZE.store),r.storeMapping.set("LDGRAMS",t.LDGRAMS.store),r.storeMapping.set("LDVARINT16",t.LDVARINT16.store),r.storeMapping.set("STGRAMS",t.STGRAMS.store),r.storeMapping.set("STVARINT16",t.STVARINT16.store),r.storeMapping.set("LDVARUINT32",t.LDVARUINT32.store),r.storeMapping.set("LDVARINT32",t.LDVARINT32.store),r.storeMapping.set("STVARUINT32",t.STVARUINT32.store),r.storeMapping.set("STVARINT32",t.STVARINT32.store),r.storeMapping.set("LDMSGADDR",t.LDMSGADDR.store),r.storeMapping.set("LDMSGADDRQ",t.LDMSGADDRQ.store),r.storeMapping.set("PARSEMSGADDR",t.PARSEMSGADDR.store),r.storeMapping.set("PARSEMSGADDRQ",t.PARSEMSGADDRQ.store),r.storeMapping.set("REWRITESTDADDR",t.REWRITESTDADDR.store),r.storeMapping.set("REWRITESTDADDRQ",t.REWRITESTDADDRQ.store),r.storeMapping.set("REWRITEVARADDR",t.REWRITEVARADDR.store),r.storeMapping.set("REWRITEVARADDRQ",t.REWRITEVARADDRQ.store),r.storeMapping.set("SENDRAWMSG",t.SENDRAWMSG.store),r.storeMapping.set("RAWRESERVE",t.RAWRESERVE.store),r.storeMapping.set("RAWRESERVEX",t.RAWRESERVEX.store),r.storeMapping.set("SETCODE",t.SETCODE.store),r.storeMapping.set("SETLIBCODE",t.SETLIBCODE.store),r.storeMapping.set("CHANGELIB",t.CHANGELIB.store),r.storeMapping.set("SENDMSG",t.SENDMSG.store),r.storeMapping.set("PUSHNULL",t.PUSHNULL.store),r.storeMapping.set("ISNULL",t.ISNULL.store),r.storeMapping.set("TUPLEVAR",t.TUPLEVAR.store),r.storeMapping.set("INDEXVAR",t.INDEXVAR.store),r.storeMapping.set("UNTUPLEVAR",t.UNTUPLEVAR.store),r.storeMapping.set("UNPACKFIRSTVAR",t.UNPACKFIRSTVAR.store),r.storeMapping.set("EXPLODEVAR",t.EXPLODEVAR.store),r.storeMapping.set("SETINDEXVAR",t.SETINDEXVAR.store),r.storeMapping.set("INDEXVARQ",t.INDEXVARQ.store),r.storeMapping.set("SETINDEXVARQ",t.SETINDEXVARQ.store),r.storeMapping.set("TLEN",t.TLEN.store),r.storeMapping.set("QTLEN",t.QTLEN.store),r.storeMapping.set("ISTUPLE",t.ISTUPLE.store),r.storeMapping.set("LAST",t.LAST.store),r.storeMapping.set("TPUSH",t.TPUSH.store),r.storeMapping.set("TPOP",t.TPOP.store),r.storeMapping.set("NULLSWAPIF",t.NULLSWAPIF.store),r.storeMapping.set("NULLSWAPIFNOT",t.NULLSWAPIFNOT.store),r.storeMapping.set("NULLROTRIF",t.NULLROTRIF.store),r.storeMapping.set("NULLROTRIFNOT",t.NULLROTRIFNOT.store),r.storeMapping.set("NULLSWAPIF2",t.NULLSWAPIF2.store),r.storeMapping.set("NULLSWAPIFNOT2",t.NULLSWAPIFNOT2.store),r.storeMapping.set("NULLROTRIF2",t.NULLROTRIF2.store),r.storeMapping.set("NULLROTRIFNOT2",t.NULLROTRIFNOT2.store),r.storeMapping.set("ADDDIVMOD",t.ADDDIVMOD.store),r.storeMapping.set("ADDDIVMODR",t.ADDDIVMODR.store),r.storeMapping.set("ADDDIVMODC",t.ADDDIVMODC.store),r.storeMapping.set("DIV",t.DIV.store),r.storeMapping.set("DIVR",t.DIVR.store),r.storeMapping.set("DIVC",t.DIVC.store),r.storeMapping.set("MOD",t.MOD.store),r.storeMapping.set("MODR",t.MODR.store),r.storeMapping.set("MODC",t.MODC.store),r.storeMapping.set("DIVMOD",t.DIVMOD.store),r.storeMapping.set("DIVMODR",t.DIVMODR.store),r.storeMapping.set("DIVMODC",t.DIVMODC.store),r.storeMapping.set("QADDDIVMOD",t.QADDDIVMOD.store),r.storeMapping.set("QADDDIVMODR",t.QADDDIVMODR.store),r.storeMapping.set("QADDDIVMODC",t.QADDDIVMODC.store),r.storeMapping.set("QDIV",t.QDIV.store),r.storeMapping.set("QDIVR",t.QDIVR.store),r.storeMapping.set("QDIVC",t.QDIVC.store),r.storeMapping.set("QMOD",t.QMOD.store),r.storeMapping.set("QMODR",t.QMODR.store),r.storeMapping.set("QMODC",t.QMODC.store),r.storeMapping.set("QDIVMOD",t.QDIVMOD.store),r.storeMapping.set("QDIVMODR",t.QDIVMODR.store),r.storeMapping.set("QDIVMODC",t.QDIVMODC.store),r.storeMapping.set("ADDRSHIFTMOD",t.ADDRSHIFTMOD.store),r.storeMapping.set("ADDRSHIFTMODR",t.ADDRSHIFTMODR.store),r.storeMapping.set("ADDRSHIFTMODC",t.ADDRSHIFTMODC.store),r.storeMapping.set("RSHIFTR",t.RSHIFTR.store),r.storeMapping.set("RSHIFTC",t.RSHIFTC.store),r.storeMapping.set("MODPOW2",t.MODPOW2.store),r.storeMapping.set("MODPOW2R",t.MODPOW2R.store),r.storeMapping.set("MODPOW2C",t.MODPOW2C.store),r.storeMapping.set("RSHIFTMOD",t.RSHIFTMOD.store),r.storeMapping.set("RSHIFTMODR",t.RSHIFTMODR.store),r.storeMapping.set("RSHIFTMODC",t.RSHIFTMODC.store),r.storeMapping.set("QADDRSHIFTMOD",t.QADDRSHIFTMOD.store),r.storeMapping.set("QADDRSHIFTMODR",t.QADDRSHIFTMODR.store),r.storeMapping.set("QADDRSHIFTMODC",t.QADDRSHIFTMODC.store),r.storeMapping.set("QRSHIFTR",t.QRSHIFTR.store),r.storeMapping.set("QRSHIFTC",t.QRSHIFTC.store),r.storeMapping.set("QMODPOW2",t.QMODPOW2.store),r.storeMapping.set("QMODPOW2R",t.QMODPOW2R.store),r.storeMapping.set("QMODPOW2C",t.QMODPOW2C.store),r.storeMapping.set("QRSHIFTMOD",t.QRSHIFTMOD.store),r.storeMapping.set("QRSHIFTMODR",t.QRSHIFTMODR.store),r.storeMapping.set("QRSHIFTMODC",t.QRSHIFTMODC.store),r.storeMapping.set("MULADDDIVMOD",t.MULADDDIVMOD.store),r.storeMapping.set("MULADDDIVMODR",t.MULADDDIVMODR.store),r.storeMapping.set("MULADDDIVMODC",t.MULADDDIVMODC.store),r.storeMapping.set("MULDIV",t.MULDIV.store),r.storeMapping.set("MULDIVR",t.MULDIVR.store),r.storeMapping.set("MULDIVC",t.MULDIVC.store),r.storeMapping.set("MULMOD",t.MULMOD.store),r.storeMapping.set("MULMODR",t.MULMODR.store),r.storeMapping.set("MULMODC",t.MULMODC.store),r.storeMapping.set("MULDIVMOD",t.MULDIVMOD.store),r.storeMapping.set("MULDIVMODR",t.MULDIVMODR.store),r.storeMapping.set("MULDIVMODC",t.MULDIVMODC.store),r.storeMapping.set("QMULADDDIVMOD",t.QMULADDDIVMOD.store),r.storeMapping.set("QMULADDDIVMODR",t.QMULADDDIVMODR.store),r.storeMapping.set("QMULADDDIVMODC",t.QMULADDDIVMODC.store),r.storeMapping.set("QMULDIV",t.QMULDIV.store),r.storeMapping.set("QMULDIVR",t.QMULDIVR.store),r.storeMapping.set("QMULDIVC",t.QMULDIVC.store),r.storeMapping.set("QMULMOD",t.QMULMOD.store),r.storeMapping.set("QMULMODR",t.QMULMODR.store),r.storeMapping.set("QMULMODC",t.QMULMODC.store),r.storeMapping.set("QMULDIVMOD",t.QMULDIVMOD.store),r.storeMapping.set("QMULDIVMODR",t.QMULDIVMODR.store),r.storeMapping.set("QMULDIVMODC",t.QMULDIVMODC.store),r.storeMapping.set("MULADDRSHIFTMOD",t.MULADDRSHIFTMOD.store),r.storeMapping.set("MULADDRSHIFTRMOD",t.MULADDRSHIFTRMOD.store),r.storeMapping.set("MULADDRSHIFTCMOD",t.MULADDRSHIFTCMOD.store),r.storeMapping.set("MULRSHIFT",t.MULRSHIFT.store),r.storeMapping.set("MULRSHIFTR",t.MULRSHIFTR.store),r.storeMapping.set("MULRSHIFTC",t.MULRSHIFTC.store),r.storeMapping.set("MULMODPOW2",t.MULMODPOW2.store),r.storeMapping.set("MULMODPOW2R",t.MULMODPOW2R.store),r.storeMapping.set("MULMODPOW2C",t.MULMODPOW2C.store),r.storeMapping.set("MULRSHIFTMOD",t.MULRSHIFTMOD.store),r.storeMapping.set("MULRSHIFTRMOD",t.MULRSHIFTRMOD.store),r.storeMapping.set("MULRSHIFTCMOD",t.MULRSHIFTCMOD.store),r.storeMapping.set("QMULADDRSHIFTMOD",t.QMULADDRSHIFTMOD.store),r.storeMapping.set("QMULADDRSHIFTRMOD",t.QMULADDRSHIFTRMOD.store),r.storeMapping.set("QMULADDRSHIFTCMOD",t.QMULADDRSHIFTCMOD.store),r.storeMapping.set("QMULRSHIFT",t.QMULRSHIFT.store),r.storeMapping.set("QMULRSHIFTR",t.QMULRSHIFTR.store),r.storeMapping.set("QMULRSHIFTC",t.QMULRSHIFTC.store),r.storeMapping.set("QMULMODPOW2",t.QMULMODPOW2.store),r.storeMapping.set("QMULMODPOW2R",t.QMULMODPOW2R.store),r.storeMapping.set("QMULMODPOW2C",t.QMULMODPOW2C.store),r.storeMapping.set("QMULRSHIFTMOD",t.QMULRSHIFTMOD.store),r.storeMapping.set("QMULRSHIFTRMOD",t.QMULRSHIFTRMOD.store),r.storeMapping.set("QMULRSHIFTCMOD",t.QMULRSHIFTCMOD.store),r.storeMapping.set("LSHIFTADDDIVMOD",t.LSHIFTADDDIVMOD.store),r.storeMapping.set("LSHIFTADDDIVMODR",t.LSHIFTADDDIVMODR.store),r.storeMapping.set("LSHIFTADDDIVMODC",t.LSHIFTADDDIVMODC.store),r.storeMapping.set("LSHIFTDIV",t.LSHIFTDIV.store),r.storeMapping.set("LSHIFTDIVR",t.LSHIFTDIVR.store),r.storeMapping.set("LSHIFTDIVC",t.LSHIFTDIVC.store),r.storeMapping.set("LSHIFTMOD",t.LSHIFTMOD.store),r.storeMapping.set("LSHIFTMODR",t.LSHIFTMODR.store),r.storeMapping.set("LSHIFTMODC",t.LSHIFTMODC.store),r.storeMapping.set("LSHIFTDIVMOD",t.LSHIFTDIVMOD.store),r.storeMapping.set("LSHIFTDIVMODR",t.LSHIFTDIVMODR.store),r.storeMapping.set("LSHIFTDIVMODC",t.LSHIFTDIVMODC.store),r.storeMapping.set("QLSHIFTADDDIVMOD",t.QLSHIFTADDDIVMOD.store),r.storeMapping.set("QLSHIFTADDDIVMODR",t.QLSHIFTADDDIVMODR.store),r.storeMapping.set("QLSHIFTADDDIVMODC",t.QLSHIFTADDDIVMODC.store),r.storeMapping.set("QLSHIFTDIV",t.QLSHIFTDIV.store),r.storeMapping.set("QLSHIFTDIVR",t.QLSHIFTDIVR.store),r.storeMapping.set("QLSHIFTDIVC",t.QLSHIFTDIVC.store),r.storeMapping.set("QLSHIFTMOD",t.QLSHIFTMOD.store),r.storeMapping.set("QLSHIFTMODR",t.QLSHIFTMODR.store),r.storeMapping.set("QLSHIFTMODC",t.QLSHIFTMODC.store),r.storeMapping.set("QLSHIFTDIVMOD",t.QLSHIFTDIVMOD.store),r.storeMapping.set("QLSHIFTDIVMODR",t.QLSHIFTDIVMODR.store),r.storeMapping.set("QLSHIFTDIVMODC",t.QLSHIFTDIVMODC.store),r.storeMapping.set("STIX",t.STIX.store),r.storeMapping.set("STUX",t.STUX.store),r.storeMapping.set("STIXR",t.STIXR.store),r.storeMapping.set("STUXR",t.STUXR.store),r.storeMapping.set("STIXQ",t.STIXQ.store),r.storeMapping.set("STUXQ",t.STUXQ.store),r.storeMapping.set("STIXRQ",t.STIXRQ.store),r.storeMapping.set("STUXRQ",t.STUXRQ.store),r.storeMapping.set("STILE4",t.STILE4.store),r.storeMapping.set("STULE4",t.STULE4.store),r.storeMapping.set("STILE8",t.STILE8.store),r.storeMapping.set("STULE8",t.STULE8.store),r.storeMapping.set("LDIX",t.LDIX.store),r.storeMapping.set("LDUX",t.LDUX.store),r.storeMapping.set("PLDIX",t.PLDIX.store),r.storeMapping.set("PLDUX",t.PLDUX.store),r.storeMapping.set("LDIXQ",t.LDIXQ.store),r.storeMapping.set("LDUXQ",t.LDUXQ.store),r.storeMapping.set("PLDIXQ",t.PLDIXQ.store),r.storeMapping.set("PLDUXQ",t.PLDUXQ.store),r.storeMapping.set("LDSLICEX",t.LDSLICEX.store),r.storeMapping.set("PLDSLICEX",t.PLDSLICEX.store),r.storeMapping.set("LDSLICEXQ",t.LDSLICEXQ.store),r.storeMapping.set("PLDSLICEXQ",t.PLDSLICEXQ.store),r.storeMapping.set("LDILE4",t.LDILE4.store),r.storeMapping.set("LDULE4",t.LDULE4.store),r.storeMapping.set("LDILE8",t.LDILE8.store),r.storeMapping.set("LDULE8",t.LDULE8.store),r.storeMapping.set("PLDILE4",t.PLDILE4.store),r.storeMapping.set("PLDULE4",t.PLDULE4.store),r.storeMapping.set("PLDILE8",t.PLDILE8.store),r.storeMapping.set("PLDULE8",t.PLDULE8.store),r.storeMapping.set("LDILE4Q",t.LDILE4Q.store),r.storeMapping.set("LDULE4Q",t.LDULE4Q.store),r.storeMapping.set("LDILE8Q",t.LDILE8Q.store),r.storeMapping.set("LDULE8Q",t.LDULE8Q.store),r.storeMapping.set("PLDILE4Q",t.PLDILE4Q.store),r.storeMapping.set("PLDULE4Q",t.PLDULE4Q.store),r.storeMapping.set("PLDILE8Q",t.PLDILE8Q.store),r.storeMapping.set("PLDULE8Q",t.PLDULE8Q.store),r.storeMapping.set("DICTIGETJMP",t.DICTIGETJMP.store),r.storeMapping.set("DICTUGETJMP",t.DICTUGETJMP.store),r.storeMapping.set("DICTIGETEXEC",t.DICTIGETEXEC.store),r.storeMapping.set("DICTUGETEXEC",t.DICTUGETEXEC.store),r.storeMapping.set("DICTIGETJMPZ",t.DICTIGETJMPZ.store),r.storeMapping.set("DICTUGETJMPZ",t.DICTUGETJMPZ.store),r.storeMapping.set("DICTIGETEXECZ",t.DICTIGETEXECZ.store),r.storeMapping.set("DICTUGETEXECZ",t.DICTUGETEXECZ.store),r.storeMapping.set("DICTGET",t.DICTGET.store),r.storeMapping.set("DICTGETREF",t.DICTGETREF.store),r.storeMapping.set("DICTIGET",t.DICTIGET.store),r.storeMapping.set("DICTIGETREF",t.DICTIGETREF.store),r.storeMapping.set("DICTUGET",t.DICTUGET.store),r.storeMapping.set("DICTUGETREF",t.DICTUGETREF.store),r.storeMapping.set("DICTSET",t.DICTSET.store),r.storeMapping.set("DICTSETREF",t.DICTSETREF.store),r.storeMapping.set("DICTISET",t.DICTISET.store),r.storeMapping.set("DICTISETREF",t.DICTISETREF.store),r.storeMapping.set("DICTUSET",t.DICTUSET.store),r.storeMapping.set("DICTUSETREF",t.DICTUSETREF.store),r.storeMapping.set("DICTSETGET",t.DICTSETGET.store),r.storeMapping.set("DICTSETGETREF",t.DICTSETGETREF.store),r.storeMapping.set("DICTISETGET",t.DICTISETGET.store),r.storeMapping.set("DICTISETGETREF",t.DICTISETGETREF.store),r.storeMapping.set("DICTUSETGET",t.DICTUSETGET.store),r.storeMapping.set("DICTUSETGETREF",t.DICTUSETGETREF.store),r.storeMapping.set("DICTREPLACE",t.DICTREPLACE.store),r.storeMapping.set("DICTREPLACEREF",t.DICTREPLACEREF.store),r.storeMapping.set("DICTIREPLACE",t.DICTIREPLACE.store),r.storeMapping.set("DICTIREPLACEREF",t.DICTIREPLACEREF.store),r.storeMapping.set("DICTUREPLACE",t.DICTUREPLACE.store),r.storeMapping.set("DICTUREPLACEREF",t.DICTUREPLACEREF.store),r.storeMapping.set("DICTREPLACEGET",t.DICTREPLACEGET.store),r.storeMapping.set("DICTREPLACEGETREF",t.DICTREPLACEGETREF.store),r.storeMapping.set("DICTIREPLACEGET",t.DICTIREPLACEGET.store),r.storeMapping.set("DICTIREPLACEGETREF",t.DICTIREPLACEGETREF.store),r.storeMapping.set("DICTUREPLACEGET",t.DICTUREPLACEGET.store),r.storeMapping.set("DICTUREPLACEGETREF",t.DICTUREPLACEGETREF.store),r.storeMapping.set("DICTADD",t.DICTADD.store),r.storeMapping.set("DICTADDREF",t.DICTADDREF.store),r.storeMapping.set("DICTIADD",t.DICTIADD.store),r.storeMapping.set("DICTIADDREF",t.DICTIADDREF.store),r.storeMapping.set("DICTUADD",t.DICTUADD.store),r.storeMapping.set("DICTUADDREF",t.DICTUADDREF.store),r.storeMapping.set("DICTADDGET",t.DICTADDGET.store),r.storeMapping.set("DICTADDGETREF",t.DICTADDGETREF.store),r.storeMapping.set("DICTIADDGET",t.DICTIADDGET.store),r.storeMapping.set("DICTIADDGETREF",t.DICTIADDGETREF.store),r.storeMapping.set("DICTUADDGET",t.DICTUADDGET.store),r.storeMapping.set("DICTUADDGETREF",t.DICTUADDGETREF.store),r.storeMapping.set("DICTDELGET",t.DICTDELGET.store),r.storeMapping.set("DICTDELGETREF",t.DICTDELGETREF.store),r.storeMapping.set("DICTIDELGET",t.DICTIDELGET.store),r.storeMapping.set("DICTIDELGETREF",t.DICTIDELGETREF.store),r.storeMapping.set("DICTUDELGET",t.DICTUDELGET.store),r.storeMapping.set("DICTUDELGETREF",t.DICTUDELGETREF.store),r.storeMapping.set("DICTMIN",t.DICTMIN.store),r.storeMapping.set("DICTMINREF",t.DICTMINREF.store),r.storeMapping.set("DICTIMIN",t.DICTIMIN.store),r.storeMapping.set("DICTIMINREF",t.DICTIMINREF.store),r.storeMapping.set("DICTUMIN",t.DICTUMIN.store),r.storeMapping.set("DICTUMINREF",t.DICTUMINREF.store),r.storeMapping.set("DICTMAX",t.DICTMAX.store),r.storeMapping.set("DICTMAXREF",t.DICTMAXREF.store),r.storeMapping.set("DICTIMAX",t.DICTIMAX.store),r.storeMapping.set("DICTIMAXREF",t.DICTIMAXREF.store),r.storeMapping.set("DICTUMAX",t.DICTUMAX.store),r.storeMapping.set("DICTUMAXREF",t.DICTUMAXREF.store),r.storeMapping.set("DICTREMMIN",t.DICTREMMIN.store),r.storeMapping.set("DICTREMMINREF",t.DICTREMMINREF.store),r.storeMapping.set("DICTIREMMIN",t.DICTIREMMIN.store),r.storeMapping.set("DICTIREMMINREF",t.DICTIREMMINREF.store),r.storeMapping.set("DICTUREMMIN",t.DICTUREMMIN.store),r.storeMapping.set("DICTUREMMINREF",t.DICTUREMMINREF.store),r.storeMapping.set("DICTREMMAX",t.DICTREMMAX.store),r.storeMapping.set("DICTREMMAXREF",t.DICTREMMAXREF.store),r.storeMapping.set("DICTIREMMAX",t.DICTIREMMAX.store),r.storeMapping.set("DICTIREMMAXREF",t.DICTIREMMAXREF.store),r.storeMapping.set("DICTUREMMAX",t.DICTUREMMAX.store),r.storeMapping.set("DICTUREMMAXREF",t.DICTUREMMAXREF.store),r.storeMapping.set("DICTSETB",t.DICTSETB.store),r.storeMapping.set("DICTISETB",t.DICTISETB.store),r.storeMapping.set("DICTUSETB",t.DICTUSETB.store),r.storeMapping.set("DICTSETGETB",t.DICTSETGETB.store),r.storeMapping.set("DICTISETGETB",t.DICTISETGETB.store),r.storeMapping.set("DICTUSETGETB",t.DICTUSETGETB.store),r.storeMapping.set("DICTREPLACEB",t.DICTREPLACEB.store),r.storeMapping.set("DICTIREPLACEB",t.DICTIREPLACEB.store),r.storeMapping.set("DICTUREPLACEB",t.DICTUREPLACEB.store),r.storeMapping.set("DICTREPLACEGETB",t.DICTREPLACEGETB.store),r.storeMapping.set("DICTIREPLACEGETB",t.DICTIREPLACEGETB.store),r.storeMapping.set("DICTUREPLACEGETB",t.DICTUREPLACEGETB.store),r.storeMapping.set("DICTADDB",t.DICTADDB.store),r.storeMapping.set("DICTIADDB",t.DICTIADDB.store),r.storeMapping.set("DICTUADDB",t.DICTUADDB.store),r.storeMapping.set("DICTADDGETB",t.DICTADDGETB.store),r.storeMapping.set("DICTIADDGETB",t.DICTIADDGETB.store),r.storeMapping.set("DICTUADDGETB",t.DICTUADDGETB.store),r.storeMapping.set("DICTDEL",t.DICTDEL.store),r.storeMapping.set("DICTIDEL",t.DICTIDEL.store),r.storeMapping.set("DICTUDEL",t.DICTUDEL.store),r.storeMapping.set("DICTGETOPTREF",t.DICTGETOPTREF.store),r.storeMapping.set("DICTIGETOPTREF",t.DICTIGETOPTREF.store),r.storeMapping.set("DICTUGETOPTREF",t.DICTUGETOPTREF.store),r.storeMapping.set("DICTSETGETOPTREF",t.DICTSETGETOPTREF.store),r.storeMapping.set("DICTISETGETOPTREF",t.DICTISETGETOPTREF.store),r.storeMapping.set("DICTUSETGETOPTREF",t.DICTUSETGETOPTREF.store),r.storeMapping.set("SUBDICTGET",t.SUBDICTGET.store),r.storeMapping.set("SUBDICTIGET",t.SUBDICTIGET.store),r.storeMapping.set("SUBDICTUGET",t.SUBDICTUGET.store),r.storeMapping.set("SUBDICTRPGET",t.SUBDICTRPGET.store),r.storeMapping.set("SUBDICTIRPGET",t.SUBDICTIRPGET.store),r.storeMapping.set("SUBDICTURPGET",t.SUBDICTURPGET.store),r.storeMapping.set("THROWANY",t.THROWANY.store),r.storeMapping.set("THROWARGANY",t.THROWARGANY.store),r.storeMapping.set("THROWANYIFNOT",t.THROWANYIFNOT.store),r.storeMapping.set("THROWARGANYIFNOT",t.THROWARGANYIFNOT.store),r.storeMapping.set("DICTGETNEXT",t.DICTGETNEXT.store),r.storeMapping.set("DICTGETNEXTEQ",t.DICTGETNEXTEQ.store),r.storeMapping.set("DICTGETPREV",t.DICTGETPREV.store),r.storeMapping.set("DICTGETPREVEQ",t.DICTGETPREVEQ.store),r.storeMapping.set("DICTIGETNEXT",t.DICTIGETNEXT.store),r.storeMapping.set("DICTIGETNEXTEQ",t.DICTIGETNEXTEQ.store),r.storeMapping.set("DICTIGETPREV",t.DICTIGETPREV.store),r.storeMapping.set("DICTIGETPREVEQ",t.DICTIGETPREVEQ.store),r.storeMapping.set("DICTUGETNEXT",t.DICTUGETNEXT.store),r.storeMapping.set("DICTUGETNEXTEQ",t.DICTUGETNEXTEQ.store),r.storeMapping.set("DICTUGETPREV",t.DICTUGETPREV.store),r.storeMapping.set("DICTUGETPREVEQ",t.DICTUGETPREVEQ.store),r.storeMapping.set("ADDINT",t.ADDINT.store),r.storeMapping.set("MULINT",t.MULINT.store),r.storeMapping.set("QADDINT",t.QADDINT.store),r.storeMapping.set("QMULINT",t.QMULINT.store),r.storeMapping.set("EQINT",t.EQINT.store),r.storeMapping.set("LESSINT",t.LESSINT.store),r.storeMapping.set("GTINT",t.GTINT.store),r.storeMapping.set("NEQINT",t.NEQINT.store),r.storeMapping.set("QEQINT",t.QEQINT.store),r.storeMapping.set("QLESSINT",t.QLESSINT.store),r.storeMapping.set("QGTINT",t.QGTINT.store),r.storeMapping.set("QNEQINT",t.QNEQINT.store),r.storeMapping.set("PUSHPOW2DEC",t.PUSHPOW2DEC.store),r.storeMapping.set("PUSHNEGPOW2",t.PUSHNEGPOW2.store),r.storeMapping.set("FITS",t.FITS.store),r.storeMapping.set("UFITS",t.UFITS.store),r.storeMapping.set("QFITS",t.QFITS.store),r.storeMapping.set("QUFITS",t.QUFITS.store),r.storeMapping.set("SETCONTCTRMANY",t.SETCONTCTRMANY.store),r.storeMapping.set("CALLCCARGS",t.CALLCCARGS.store),r.storeMapping.set("TRYARGS",t.TRYARGS.store),r.storeMapping.set("PLDREFIDX",t.PLDREFIDX.store),r.storeMapping.set("CHASHI",t.CHASHI.store),r.storeMapping.set("CDEPTHI",t.CDEPTHI.store),r.storeMapping.set("JMPDICT",t.JMPDICT.store),r.storeMapping.set("PREPAREDICT",t.PREPAREDICT.store),r.storeMapping.set("THROWARG",t.THROWARG.store),r.storeMapping.set("THROWARGIF",t.THROWARGIF.store),r.storeMapping.set("THROWARGIFNOT",t.THROWARGIFNOT.store),r.storeMapping.set("JMPXARGS",t.JMPXARGS.store),r.storeMapping.set("RETARGS",t.RETARGS.store),r.storeMapping.set("RETURNARGS",t.RETURNARGS.store),r.storeMapping.set("BLKDROP",t.BLKDROP.store),r.storeMapping.set("TUPLE",t.TUPLE.store),r.storeMapping.set("INDEX",t.INDEX.store),r.storeMapping.set("UNTUPLE",t.UNTUPLE.store),r.storeMapping.set("UNPACKFIRST",t.UNPACKFIRST.store),r.storeMapping.set("EXPLODE",t.EXPLODE.store),r.storeMapping.set("SETINDEX",t.SETINDEX.store),r.storeMapping.set("INDEXQ",t.INDEXQ.store),r.storeMapping.set("SETINDEXQ",t.SETINDEXQ.store),r.storeMapping.set("XC2PU",t.XC2PU.store),r.storeMapping.set("XCPU2",t.XCPU2.store),r.storeMapping.set("PUSH3",t.PUSH3.store),r.storeMapping.set("XCHG2",t.XCHG2.store),r.storeMapping.set("XCPU",t.XCPU.store),r.storeMapping.set("PUSH2",t.PUSH2.store),r.storeMapping.set("PUXC",t.PUXC.store),r.storeMapping.set("XCPUXC",t.XCPUXC.store),r.storeMapping.set("PUXC2",t.PUXC2.store),r.storeMapping.set("PUXCPU",t.PUXCPU.store),r.storeMapping.set("PU2XC",t.PU2XC.store),r.storeMapping.set("BLKSWAP",t.BLKSWAP.store),r.storeMapping.set("REVERSE",t.REVERSE.store),r.storeMapping.set("SETCONTARGS",t.SETCONTARGS.store),r.storeMapping.set("BLESSARGS",t.BLESSARGS.store),r.storeMapping.set("STIR",t.STIR.store),r.storeMapping.set("STUR",t.STUR.store),r.storeMapping.set("STIQ",t.STIQ.store),r.storeMapping.set("STUQ",t.STUQ.store),r.storeMapping.set("STIRQ",t.STIRQ.store),r.storeMapping.set("STURQ",t.STURQ.store),r.storeMapping.set("PLDI",t.PLDI.store),r.storeMapping.set("PLDU",t.PLDU.store),r.storeMapping.set("LDIQ",t.LDIQ.store),r.storeMapping.set("LDUQ",t.LDUQ.store),r.storeMapping.set("PLDIQ",t.PLDIQ.store),r.storeMapping.set("PLDUQ",t.PLDUQ.store),r.storeMapping.set("PLDUZ",t.PLDUZ.store),r.storeMapping.set("PLDSLICE",t.PLDSLICE.store),r.storeMapping.set("LDSLICEQ",t.LDSLICEQ.store),r.storeMapping.set("PLDSLICEQ",t.PLDSLICEQ.store),r.storeMapping.set("IFBITJMP",t.IFBITJMP.store),r.storeMapping.set("IFNBITJMP",t.IFNBITJMP.store),r.storeMapping.set("INDEX2",t.INDEX2.store),r.storeMapping.set("INDEX3",t.INDEX3.store),r.storeMapping.set("PUSHPOW2",t.PUSHPOW2.store),r.storeMapping.set("BLKPUSH",t.BLKPUSH.store),r.storeMapping.set("BLKDROP2",t.BLKDROP2.store),r.storeMapping.set("GETGLOB",t.GETGLOB.store),r.storeMapping.set("SETGLOB",t.SETGLOB.store),r.storeMapping.set("GETPARAM",t.GETPARAM.store),r.storeMapping.set("PUSHREF",t.PUSHREF.store),r.storeMapping.set("PUSHREFSLICE",t.PUSHREFSLICE.store),r.storeMapping.set("PUSHREFCONT",t.PUSHREFCONT.store),r.storeMapping.set("CALLREF",t.CALLREF.store),r.storeMapping.set("JMPREF",t.JMPREF.store),r.storeMapping.set("JMPREFDATA",t.JMPREFDATA.store),r.storeMapping.set("IFREF",t.IFREF.store),r.storeMapping.set("IFNOTREF",t.IFNOTREF.store),r.storeMapping.set("IFJMPREF",t.IFJMPREF.store),r.storeMapping.set("IFNOTJMPREF",t.IFNOTJMPREF.store),r.storeMapping.set("IFREFELSE",t.IFREFELSE.store),r.storeMapping.set("IFELSEREF",t.IFELSEREF.store),r.storeMapping.set("IFREFELSEREF",t.IFREFELSEREF.store),r.storeMapping.set("IFBITJMPREF",t.IFBITJMPREF.store),r.storeMapping.set("IFNBITJMPREF",t.IFNBITJMPREF.store),r.storeMapping.set("DICTPUSHCONST",t.DICTPUSHCONST.store),r.storeMapping.set("PFXDICTSWITCH",t.PFXDICTSWITCH.store),r.storeMapping.set("SDBEGINSX",t.SDBEGINSX.store),r.storeMapping.set("SDBEGINSXQ",t.SDBEGINSXQ.store),r.storeMapping.set("SDBEGINS",t.SDBEGINS.store),r.storeMapping.set("SDBEGINSQ",t.SDBEGINSQ.store),r.storeMapping.set("STREFCONST",t.STREFCONST.store),r.storeMapping.set("STREF2CONST",t.STREF2CONST.store),r.storeMapping.set("THROWANYIF",t.THROWANYIF.store),r.storeMapping.set("THROWARGANYIF",t.THROWARGANYIF.store),r.storeMapping.set("DEBUGSTR",t.DEBUGSTR.store),r.storeMapping.set("SETCONTCTR",t.SETCONTCTR.store),r.storeMapping.set("SETRETCTR",t.SETRETCTR.store),r.storeMapping.set("SETALTCTR",t.SETALTCTR.store),r.storeMapping.set("POPSAVE",t.POPSAVE.store),r.storeMapping.set("SAVECTR",t.SAVECTR.store),r.storeMapping.set("SAVEALTCTR",t.SAVEALTCTR.store),r.storeMapping.set("SAVEBOTHCTR",t.SAVEBOTHCTR.store),r.storeMapping.set("RUNVM",t.RUNVM.store),r.storeMapping.set("SWAP2",t.SWAP2.store),r.storeMapping.set("DROP2",t.DROP2.store),r.storeMapping.set("DUP2",t.DUP2.store),r.storeMapping.set("OVER2",t.OVER2.store),r.storeMapping.set("ADDRSHIFT_MOD",t.ADDRSHIFT_MOD.store),r.storeMapping.set("ADDRSHIFTR_MOD",t.ADDRSHIFTR_MOD.store),r.storeMapping.set("ADDRSHIFTC_MOD",t.ADDRSHIFTC_MOD.store),r.storeMapping.set("RSHIFT_",t.RSHIFT_.store),r.storeMapping.set("RSHIFTR_",t.RSHIFTR_.store),r.storeMapping.set("RSHIFTC_",t.RSHIFTC_.store),r.storeMapping.set("MODPOW2_",t.MODPOW2_.store),r.storeMapping.set("MODPOW2R_",t.MODPOW2R_.store),r.storeMapping.set("MODPOW2C_",t.MODPOW2C_.store),r.storeMapping.set("RSHIFT_MOD",t.RSHIFT_MOD.store),r.storeMapping.set("RSHIFTR_MOD",t.RSHIFTR_MOD.store),r.storeMapping.set("RSHIFTC_MOD",t.RSHIFTC_MOD.store),r.storeMapping.set("MULADDRSHIFT_MOD",t.MULADDRSHIFT_MOD.store),r.storeMapping.set("MULADDRSHIFTR_MOD",t.MULADDRSHIFTR_MOD.store),r.storeMapping.set("MULADDRSHIFTC_MOD",t.MULADDRSHIFTC_MOD.store),r.storeMapping.set("MULRSHIFT_",t.MULRSHIFT_.store),r.storeMapping.set("MULRSHIFTR_",t.MULRSHIFTR_.store),r.storeMapping.set("MULRSHIFTC_",t.MULRSHIFTC_.store),r.storeMapping.set("MULMODPOW2_",t.MULMODPOW2_.store),r.storeMapping.set("MULMODPOW2R_",t.MULMODPOW2R_.store),r.storeMapping.set("MULMODPOW2C_",t.MULMODPOW2C_.store),r.storeMapping.set("MULRSHIFT_MOD",t.MULRSHIFT_MOD.store),r.storeMapping.set("MULRSHIFTR_MOD",t.MULRSHIFTR_MOD.store),r.storeMapping.set("MULRSHIFTC_MOD",t.MULRSHIFTC_MOD.store),r.storeMapping.set("LSHIFT_ADDDIVMOD",t.LSHIFT_ADDDIVMOD.store),r.storeMapping.set("LSHIFT_ADDDIVMODR",t.LSHIFT_ADDDIVMODR.store),r.storeMapping.set("LSHIFT_ADDDIVMODC",t.LSHIFT_ADDDIVMODC.store),r.storeMapping.set("LSHIFT_DIV",t.LSHIFT_DIV.store),r.storeMapping.set("LSHIFT_DIVR",t.LSHIFT_DIVR.store),r.storeMapping.set("LSHIFT_DIVC",t.LSHIFT_DIVC.store),r.storeMapping.set("LSHIFT_MOD",t.LSHIFT_MOD.store),r.storeMapping.set("LSHIFT_MODR",t.LSHIFT_MODR.store),r.storeMapping.set("LSHIFT_MODC",t.LSHIFT_MODC.store),r.storeMapping.set("LSHIFT_DIVMOD",t.LSHIFT_DIVMOD.store),r.storeMapping.set("LSHIFT_DIVMODR",t.LSHIFT_DIVMODR.store),r.storeMapping.set("LSHIFT_DIVMODC",t.LSHIFT_DIVMODC.store),r.storeMapping.set("HASHEXT",t.HASHEXT.store),r.storeMapping.set("HASHEXTR",t.HASHEXTR.store),r.storeMapping.set("HASHEXTA",t.HASHEXTA.store),r.storeMapping.set("HASHEXTAR",t.HASHEXTAR.store),r.storeMapping.set("STREF",t.STREF.store),r.storeMapping.set("STREF_ALT",t.STREF_ALT.store),r.storeMapping.set("STSLICE",t.STSLICE.store),r.storeMapping.set("STSLICE_ALT",t.STSLICE_ALT.store),r.storeMapping.set("XCHG3",t.XCHG3.store),r.storeMapping.set("XCHG3_ALT",t.XCHG3_ALT.store),r.storeMapping.set("STI",t.STI.store),r.storeMapping.set("STI_ALT",t.STI_ALT.store),r.storeMapping.set("STU",t.STU.store),r.storeMapping.set("STU_ALT",t.STU_ALT.store),r.storeMapping.set("LDI",t.LDI.store),r.storeMapping.set("LDI_ALT",t.LDI_ALT.store),r.storeMapping.set("LDU",t.LDU.store),r.storeMapping.set("LDU_ALT",t.LDU_ALT.store),r.storeMapping.set("LDSLICE",t.LDSLICE.store),r.storeMapping.set("LDSLICE_ALT",t.LDSLICE_ALT.store),r.storeMapping.set("LSHIFT_VAR",t.LSHIFT_VAR.store),r.storeMapping.set("LSHIFT",t.LSHIFT.store),r.storeMapping.set("QLSHIFT_VAR",t.QLSHIFT_VAR.store),r.storeMapping.set("QLSHIFT",t.QLSHIFT.store),r.storeMapping.set("BCHKBITS_VAR",t.BCHKBITS_VAR.store),r.storeMapping.set("BCHKBITS",t.BCHKBITS.store),r.storeMapping.set("BCHKBITSQ_VAR",t.BCHKBITSQ_VAR.store),r.storeMapping.set("BCHKBITSQ",t.BCHKBITSQ.store),r.storeMapping.set("RSHIFT_VAR",t.RSHIFT_VAR.store),r.storeMapping.set("RSHIFT",t.RSHIFT.store),r.storeMapping.set("RSHIFT_ALT",t.RSHIFT_ALT.store),r.storeMapping.set("QRSHIFT_VAR",t.QRSHIFT_VAR.store),r.storeMapping.set("QRSHIFT",t.QRSHIFT.store),r.storeMapping.set("QRSHIFT_ALT",t.QRSHIFT_ALT.store),r.storeMapping.set("CALLDICT",t.CALLDICT.store),r.storeMapping.set("CALLDICT_LONG",t.CALLDICT_LONG.store),r.storeMapping.set("THROW_SHORT",t.THROW_SHORT.store),r.storeMapping.set("THROW",t.THROW.store),r.storeMapping.set("THROWIF_SHORT",t.THROWIF_SHORT.store),r.storeMapping.set("THROWIF",t.THROWIF.store),r.storeMapping.set("THROWIFNOT_SHORT",t.THROWIFNOT_SHORT.store),r.storeMapping.set("THROWIFNOT",t.THROWIFNOT.store),r.storeMapping.set("PUSHINT_4",t.PUSHINT_4.store),r.storeMapping.set("PUSHINT_8",t.PUSHINT_8.store),r.storeMapping.set("PUSHINT_16",t.PUSHINT_16.store),r.storeMapping.set("PUSHINT_LONG",t.PUSHINT_LONG.store),r.storeMapping.set("XCHG_01_LONG",t.XCHG_01_LONG.store),r.storeMapping.set("XCHG_0I",t.XCHG_0I.store),r.storeMapping.set("XCHG_IJ",t.XCHG_IJ.store),r.storeMapping.set("XCHG_1I",t.XCHG_1I.store),r.storeMapping.set("DUMPSTK",t.DUMPSTK.store),r.storeMapping.set("DEBUG",t.DEBUG.store),r.storeMapping.set("STRDUMP",t.STRDUMP.store),r.storeMapping.set("DEBUG_1",t.DEBUG_1.store),r.storeMapping.set("DUMP",t.DUMP.store),r.storeMapping.set("DEBUG_2",t.DEBUG_2.store),r.storeMapping.set("PUSHCTR",t.PUSHCTR.store),r.storeMapping.set("PUSH",t.PUSH.store),r.storeMapping.set("PUSH_LONG",t.PUSH_LONG.store),r.storeMapping.set("POPCTR",t.POPCTR.store),r.storeMapping.set("POP",t.POP.store),r.storeMapping.set("POP_LONG",t.POP_LONG.store),r.storeMapping.set("CALLXARGS",t.CALLXARGS.store),r.storeMapping.set("CALLXARGS_1",t.CALLXARGS_1.store),r.storeMapping.set("PUSHSLICE",t.PUSHSLICE.store),r.storeMapping.set("PUSHSLICE_REFS",t.PUSHSLICE_REFS.store),r.storeMapping.set("PUSHSLICE_LONG",t.PUSHSLICE_LONG.store),r.storeMapping.set("PUSHCONT",t.PUSHCONT.store),r.storeMapping.set("PUSHCONT_SHORT",t.PUSHCONT_SHORT.store),r.storeMapping.set("STSLICECONST",t.STSLICECONST.store),r.storeMapping.set("SETCP",t.SETCP.store),r.storeMapping.set("SETCPX",t.SETCPX.store),r.storeMapping.set("SETCP_SHORT",t.SETCP_SHORT.store),r.storeMapping.set("DEBUGMARK",t.DEBUGMARK.store)}(er)),er}var fe={},Xe={},cC;function mA(){if(cC)return Xe;cC=1;var r=Xe&&Xe.__createBinding||(Object.create?function(u,o,A,c){c===void 0&&(c=A);var l=Object.getOwnPropertyDescriptor(o,A);(!l||("get"in l?!o.__esModule:l.writable||l.configurable))&&(l={enumerable:!0,get:function(){return o[A]}}),Object.defineProperty(u,c,l)}:function(u,o,A,c){c===void 0&&(c=A),u[c]=o[A]}),G=Xe&&Xe.__setModuleDefault||(Object.create?function(u,o){Object.defineProperty(u,"default",{enumerable:!0,value:o})}:function(u,o){u.default=o}),_=Xe&&Xe.__importStar||function(){var u=function(o){return u=Object.getOwnPropertyNames||function(A){var c=[];for(var l in A)Object.prototype.hasOwnProperty.call(A,l)&&(c[c.length]=l);return c},u(o)};return function(o){if(o&&o.__esModule)return o;var A={};if(o!=null)for(var c=u(o),l=0;l<c.length;l++)c[l]!=="default"&&r(A,o,c[l]);return G(A,o),A}}();Object.defineProperty(Xe,"__esModule",{value:!0}),Xe.matchingRule=void 0;const S=_(Sr()),t=_(Ju()),e=(u,o)=>{const[A,c]=o;if(A?.$==="PUSHCONT"&&c?.$===u.instrName)return{body:A.arg0}},a=[{instrName:"IF",ctor:S.IFREF,type:t.IFREF},{instrName:"IFNOT",ctor:S.IFNOTREF,type:t.IFNOTREF},{instrName:"IFJMP",ctor:S.IFJMPREF,type:t.IFJMPREF},{instrName:"IFNOTJMP",ctor:S.IFNOTJMPREF,type:t.IFNOTJMPREF},{instrName:"IFELSE",ctor:S.IFELSEREF,type:t.IFELSEREF}],C=u=>{for(const o of a){const A=e(o,u);if(A)return{body:A.body,rule:o}}};return Xe.matchingRule=C,Xe}var PC;function gA(){if(PC)return fe;PC=1;var r=fe&&fe.__createBinding||(Object.create?function(A,c,l,K){K===void 0&&(K=l);var d=Object.getOwnPropertyDescriptor(c,l);(!d||("get"in d?!c.__esModule:d.writable||d.configurable))&&(d={enumerable:!0,get:function(){return c[l]}}),Object.defineProperty(A,K,d)}:function(A,c,l,K){K===void 0&&(K=l),A[K]=c[l]}),G=fe&&fe.__setModuleDefault||(Object.create?function(A,c){Object.defineProperty(A,"default",{enumerable:!0,value:c})}:function(A,c){A.default=c}),_=fe&&fe.__importStar||function(){var A=function(c){return A=Object.getOwnPropertyNames||function(l){var K=[];for(var d in l)Object.prototype.hasOwnProperty.call(l,d)&&(K[K.length]=d);return K},A(c)};return function(c){if(c&&c.__esModule)return c;var l={};if(c!=null)for(var K=A(c),d=0;d<K.length;d++)K[d]!=="default"&&r(l,c,K[d]);return G(l,c),l}}();Object.defineProperty(fe,"__esModule",{value:!0}),fe.compileInstructions=void 0;const S=_(Sr()),t=_(bn()),e=xn(),a=vu(),C=mA(),u=(A,c)=>{for(let l=0;l<c.length;l++){const K=c[l];if(!K)break;const d=new e.CodeBuilder().storeBuilder(A);if(!o(A,K))continue;const p=c.slice(l),v=(0,C.matchingRule)(p);if(v){const B=v.rule.ctor(v.body);v.rule.type.store(d,B),A.reinitFrom(d),l++;continue}t.PSEUDO_PUSHREF.store(d,S.PSEUDO_PUSHREF(t.code(p))),A.reinitFrom(d);return}};fe.compileInstructions=u;const o=(A,c)=>{try{if(a.instr.store(A,c),A.bits>=1023)return!0;if(A.refs>=4)return!(c.$==="PSEUDO_PUSHREF"&&A.refs===4)}catch(l){if(l instanceof Error&&(l.message==="BitBuilder overflow"||l.message==="Too many references"))return!0;throw l}return!1};return fe}var OC;function vu(){return OC||(OC=1,function(r){var G=qe&&qe.__createBinding||(Object.create?function(P,O,Q,V){V===void 0&&(V=Q);var w=Object.getOwnPropertyDescriptor(O,Q);(!w||("get"in w?!O.__esModule:w.writable||w.configurable))&&(w={enumerable:!0,get:function(){return O[Q]}}),Object.defineProperty(P,V,w)}:function(P,O,Q,V){V===void 0&&(V=Q),P[V]=O[Q]}),_=qe&&qe.__setModuleDefault||(Object.create?function(P,O){Object.defineProperty(P,"default",{enumerable:!0,value:O})}:function(P,O){P.default=O}),S=qe&&qe.__importStar||function(){var P=function(O){return P=Object.getOwnPropertyNames||function(Q){var V=[];for(var w in Q)Object.prototype.hasOwnProperty.call(Q,w)&&(V[V.length]=w);return V},P(O)};return function(O){if(O&&O.__esModule)return O;var Q={};if(O!=null)for(var V=P(O),w=0;w<V.length;w++)V[w]!=="default"&&G(Q,O,V[w]);return _(Q,O),Q}}();Object.defineProperty(r,"__esModule",{value:!0}),r.decompileCell=r.decompile=r.compileCellWithMapping=r.compileCell=r.compile=r.parseExotic=r.codeType=r.instr=void 0;const t=S(bn()),e=S(Ke()),a=S(Sr()),C=Sr(),u=pC(),o=xn(),A=gA();r.instr={store:(P,O)=>{if(O.$==="PSEUDO_PUSHREF"){t.PSEUDO_PUSHREF.store(P,O);return}if(O.$==="PSEUDO_PUSHSLICE"){t.PSEUDO_PUSHSLICE.store(P,O);return}if(O.$==="PSEUDO_EXOTIC"){t.PSEUDO_EXOTIC.store(P,O);return}const Q=u.storeMapping.get(O.$);if(!Q)throw new Error("unknown instruction");Q(P,O)},load:K(u.rangeToType)};const c=()=>{const P=O=>O.isExotic?[(0,r.parseExotic)(O)]:(0,r.codeType)().load(O.asSlice());return{load:O=>{const Q=[],V=O.clone();for(;O.remainingBits>0;)try{Q.push(r.instr.load(O))}catch{return[a.PSEUDO_PUSHSLICE(V)]}for(;O.remainingRefs>0;){const w=O.loadRef(),b=P(w);Q.push(a.PSEUDO_PUSHREF(t.decompiledCode(b)))}return Q},store(O,Q){(0,A.compileInstructions)(O,Q)}}};r.codeType=c;function l(P,O){return{min:P,max:O,load:Q=>{throw new Error(`invalid opcode, slice: ${Q.asCell().toString()}`)}}}function K(P){const O=[],w=P.sort((j,ne)=>j.min-ne.min);let b=0;for(const j of w){const{min:ne,max:Ie}=j;ne===Ie&&ne===0||(N(ne<Ie),N(ne>=b),N(Ie<=16777216),b<ne&&O.push(l(b,ne)),O.push(j),b=Ie)}return b<16777216&&O.push(l(b,16777216)),j=>{const ne=Math.min(j.remainingBits,24),Ie=j.preloadUint(ne)<<24-ne;let Pe=0,Se=O.length;for(;Se-Pe>1;){const h=Se+Pe>>1,Z=O[h];if(Z===void 0)break;Z.min<=Ie?Pe=h:Se=h}const Ce=O[Pe];if(ne<8)throw new Error(`invalid opcode, not enough bits, expected at least 8 bits, but got ${ne}`);if(!Ce)throw new Error(`invalid opcode, slice: ${j.asCell().toString()}`);return Ce.load(j)}}const d=P=>{const O=P.beginParse(!0);return(0,C.PSEUDO_EXOTIC)(t.exotic.load(O))};r.parseExotic=d;const f=P=>(0,r.compileCell)(P).toBoc();r.compile=f;const p=P=>{const O=new o.CodeBuilder;return(0,r.codeType)().store(O,P),O.asCell()};r.compileCell=p;const v=P=>{const O=new o.CodeBuilder;return(0,r.codeType)().store(O,P),O.build()};r.compileCellWithMapping=v;const B=P=>{const O=e.Cell.fromBoc(P)[0];return O?(0,r.decompileCell)(O):[]};r.decompile=B;const F=P=>P.isExotic?[(0,r.parseExotic)(P)]:(0,r.codeType)().load(P.asSlice());r.decompileCell=F;function N(P){if(!P)throw new Error("assertion failed")}}(qe)),qe}var Ne={},dC;function UA(){if(dC)return Ne;dC=1;var r=Ne&&Ne.__createBinding||(Object.create?function(u,o,A,c){c===void 0&&(c=A);var l=Object.getOwnPropertyDescriptor(o,A);(!l||("get"in l?!o.__esModule:l.writable||l.configurable))&&(l={enumerable:!0,get:function(){return o[A]}}),Object.defineProperty(u,c,l)}:function(u,o,A,c){c===void 0&&(c=A),u[c]=o[A]}),G=Ne&&Ne.__setModuleDefault||(Object.create?function(u,o){Object.defineProperty(u,"default",{enumerable:!0,value:o})}:function(u,o){u.default=o}),_=Ne&&Ne.__importStar||function(){var u=function(o){return u=Object.getOwnPropertyNames||function(A){var c=[];for(var l in A)Object.prototype.hasOwnProperty.call(A,l)&&(c[c.length]=l);return c},u(o)};return function(o){if(o&&o.__esModule)return o;var A={};if(o!=null)for(var c=u(o),l=0;l<c.length;l++)c[l]!=="default"&&r(A,o,c[l]);return G(A,o),A}}();Object.defineProperty(Ne,"__esModule",{value:!0}),Ne.signatureOf=Ne.signatureString=void 0;let S;const t=u=>e(u.inputs?.stack??[])+" -> "+e(u.outputs?.stack??[]);Ne.signatureString=t;const e=u=>u.length===0?"∅":u.map(o=>a(o)).join(" "),a=u=>{if(u.type==="simple"){const A=u.value_types??[];if(A.length===0)return u.name+":Any";const c=A.map(l=>l==="Integer"?"Int":l).join("|");return u.name+":"+c}if(u.type==="const")return u.value===null?"null":u.value.toString();if(u.type==="array")return`x_1...x_${u.length_var}`;const o=u.match.map(A=>"("+e(A.stack)+" "+A.value.toString()+")").join("|");if(u.else){const A=e(u.else);return o+"|"+A}return o},C=async u=>{const o=await Promise.resolve().then(()=>_(rA));if(S)return S[u];const A=o.readFileSync(`${__dirname}/stack-signatures-data.json`,"utf8");return S=JSON.parse(A),S[u]};return Ne.signatureOf=C,Ne}var FC;function et(){return FC||(FC=1,function(r){var G=Be&&Be.__createBinding||(Object.create?function(e,a,C,u){u===void 0&&(u=C);var o=Object.getOwnPropertyDescriptor(a,C);(!o||("get"in o?!a.__esModule:o.writable||o.configurable))&&(o={enumerable:!0,get:function(){return a[C]}}),Object.defineProperty(e,u,o)}:function(e,a,C,u){u===void 0&&(u=C),e[u]=a[C]}),_=Be&&Be.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:!0,value:a})}:function(e,a){e.default=a}),S=Be&&Be.__exportStar||function(e,a){for(var C in e)C!=="default"&&!Object.prototype.hasOwnProperty.call(a,C)&&G(a,e,C)},t=Be&&Be.__importStar||function(){var e=function(a){return e=Object.getOwnPropertyNames||function(C){var u=[];for(var o in C)Object.prototype.hasOwnProperty.call(C,o)&&(u[u.length]=o);return u},e(a)};return function(a){if(a&&a.__esModule)return a;var C={};if(a!=null)for(var u=e(a),o=0;o<u.length;o++)u[o]!=="default"&&G(C,a,u[o]);return _(C,a),C}}();Object.defineProperty(r,"__esModule",{value:!0}),r.util=r.types=void 0,S(xn(),r),S(Sr(),r),S(vu(),r),S(pC(),r),S(UA(),r),r.types=t(Ju()),r.util=t(bn())}(Be)),Be}var Ve={},rr={},nr={},mC;function rt(){return mC||(mC=1,function(r){var G=nr&&nr.__createBinding||(Object.create?function(h,Z,k,Y){Y===void 0&&(Y=k);var q=Object.getOwnPropertyDescriptor(Z,k);(!q||("get"in q?!Z.__esModule:q.writable||q.configurable))&&(q={enumerable:!0,get:function(){return Z[k]}}),Object.defineProperty(h,Y,q)}:function(h,Z,k,Y){Y===void 0&&(Y=k),h[Y]=Z[k]}),_=nr&&nr.__setModuleDefault||(Object.create?function(h,Z){Object.defineProperty(h,"default",{enumerable:!0,value:Z})}:function(h,Z){h.default=Z}),S=nr&&nr.__importStar||function(){var h=function(Z){return h=Object.getOwnPropertyNames||function(k){var Y=[];for(var q in k)Object.prototype.hasOwnProperty.call(k,q)&&(Y[Y.length]=q);return Y},h(Z)};return function(Z){if(Z&&Z.__esModule)return Z;var k={};if(Z!=null)for(var Y=h(Z),q=0;q<Y.length;q++)Y[q]!=="default"&&G(k,Z,Y[q]);return _(k,Z),k}}();Object.defineProperty(r,"__esModule",{value:!0}),r.dictpushArg=r.debugstrArg=r.sliceArg=r.ifBitArgs=r.ifElseBitArgs=r.twoCodeSliceArgs=r.codeSliceArg=r.threeStackArgs=r.threeIntegerArgs=r.twoStackArgs=r.twoIntegerArgs=r.singleBigIntArg=r.singleControlArg=r.singleStackArg=r.singleIntegerArg=r.processInstructions=r.createLoc=r.ParseError=void 0;const t=bn(),e=S(et()),a=YC(),C=Ke();class u extends Error{constructor(k,Y){super(Y);le(this,"loc");le(this,"msg");this.name="ParseError",this.loc=k,this.msg=Y}toString(){return`${this.name}: ${this.msg} at ${this.loc.file}:${this.loc.line}`}}r.ParseError=u;const o=(h,Z)=>{let k=0,Y=0;for(const q of h){if(k+=q.length+1,Z<k)return Y;Y++}return h.length-1},A=(h,Z)=>Z.$==="empty"?{file:h.filepath,line:o(h.lines,Z.at)}:{file:h.filepath,line:o(h.lines,Z.start)};r.createLoc=A;const c=(h,Z)=>Z.map(k=>{const Y=(0,r.createLoc)(h,k.loc);try{return k.$==="ExplicitRef"?e.PSEUDO_PUSHREF(e.util.code((0,r.processInstructions)(h,k.code.instructions)),Y):k.$==="EmbedSlice"?e.PSEUDO_PUSHSLICE(j(k.data),Y):k.$==="Exotic"?k.lib.$==="DefaultExotic"?e.PSEUDO_EXOTIC((0,t.DefaultExoticCell)(j(k.lib.data).asCell())):e.PSEUDO_EXOTIC((0,t.LibraryCell)(j(k.lib.data)),Y):(0,a.convertInstruction)(h,k,Y)}catch(q){throw typeof q=="string"?new u(Y,q):q instanceof Error?new u(Y,q.message):q}});r.processInstructions=c;const l=h=>{const[Z]=h.args;if(!Z)throw new Error("Expected 1 argument");const k=Z.expression;if(k.$!=="IntegerLiteral")throw new Error(`Expected integer literal argument, got ${k.$}`);return Ie(k)};r.singleIntegerArg=l;const K=h=>{const[Z]=h.args;if(!Z)throw new Error("Expected 1 argument");const k=Z.expression;if(k.$!=="StackElement")throw new Error(`Expected stack element argument, got ${k.$}`);return ne(k)};r.singleStackArg=K;const d=h=>{const[Z]=h.args;if(!Z)throw new Error("Expected 1 argument");const k=Z.expression;if(k.$!=="ControlRegister")throw new Error(`Expected control register argument, got ${k.$}`);const Y=Number.parseInt(k.value.slice(1));if(Y===6)throw new Error("c6 doesn't exist");return Y};r.singleControlArg=d;const f=h=>{const[Z]=h.args;if(!Z)throw new Error("Expected 1 argument");const k=Z.expression;if(k.$!=="IntegerLiteral")throw new Error(`Expected integer literal argument, got ${k.$}`);return Pe(k)};r.singleBigIntArg=f;const p=h=>{const[Z,k]=h.args;if(!Z||!k)throw new Error("Expected 2 arguments");const Y=Z.expression;if(Y.$!=="IntegerLiteral")throw new Error(`Expected integer literal argument 1, got ${Y.$}`);const q=k.expression;if(q.$!=="IntegerLiteral")throw new Error(`Expected integer literal argument 2, got ${q.$}`);return[Ie(Y),Ie(q)]};r.twoIntegerArgs=p;const v=h=>{const[Z,k]=h.args;if(!Z||!k)throw new Error("Expected 2 arguments");const Y=Z.expression;if(Y.$!=="StackElement")throw new Error(`Expected stack element argument 1, got ${Y.$}`);const q=k.expression;if(q.$!=="StackElement")throw new Error(`Expected stack element argument 2, got ${q.$}`);return[ne(Y),ne(q)]};r.twoStackArgs=v;const B=h=>{const[Z,k,Y]=h.args;if(!Z||!k||!Y)throw new Error("Expected 3 arguments");const q=Z.expression;if(q.$!=="IntegerLiteral")throw new Error(`Expected integer literal argument 1, got ${q.$}`);const ae=k.expression;if(ae.$!=="IntegerLiteral")throw new Error(`Expected integer literal argument 2, got ${ae.$}`);const te=Y.expression;if(te.$!=="IntegerLiteral")throw new Error(`Expected integer literal argument 3, got ${te.$}`);return[Ie(q),Ie(ae),Ie(te)]};r.threeIntegerArgs=B;const F=h=>{const[Z,k,Y]=h.args;if(!Z||!k||!Y)throw new Error("Expected 3 arguments");const q=Z.expression;if(q.$!=="StackElement")throw new Error(`Expected stack element argument 1, got ${q.$}`);const ae=k.expression;if(ae.$!=="StackElement")throw new Error(`Expected stack element argument 2, got ${ae.$}`);const te=Y.expression;if(te.$!=="StackElement")throw new Error(`Expected stack element argument 3, got ${te.$}`);return[ne(q),ne(ae),ne(te)]};r.threeStackArgs=F;const N=(h,Z)=>{const[k]=Z.args;if(!k)throw new Error("Expected 1 argument");const Y=k.expression;if(Y.$!=="Code"&&Y.$!=="DataLiteral")throw new Error(`Expected code or data literal argument, got ${Y.$}`);return Y.$==="DataLiteral"?Ce(Y):(0,t.decompiledCode)((0,r.processInstructions)(h,Y.instructions))};r.codeSliceArg=N;const P=(h,Z)=>{const[k,Y]=Z.args;if(!k||!Y)throw new Error("Expected 2 arguments");const q=k.expression;if(q.$!=="Code"&&q.$!=="DataLiteral")throw new Error(`Expected code or data literal argument 1, got ${q.$}`);const ae=Y.expression;if(ae.$!=="Code"&&ae.$!=="DataLiteral")throw new Error(`Expected code or data literal argument 2, got ${ae.$}`);const te=q.$==="DataLiteral"?Ce(q):(0,t.decompiledCode)((0,r.processInstructions)(h,q.instructions)),Ae=ae.$==="DataLiteral"?Ce(ae):(0,t.decompiledCode)((0,r.processInstructions)(h,ae.instructions));return[te,Ae]};r.twoCodeSliceArgs=P;const O=(h,Z)=>{const[k,Y,q]=Z.args;if(!k||!Y||!q)throw new Error("Expected 3 arguments");const ae=k.expression;if(ae.$!=="IntegerLiteral")throw new Error(`Expected integer literal argument 1, got ${ae.$}`);const te=Y.expression;if(te.$!=="Code"&&te.$!=="DataLiteral")throw new Error(`Expected code or data literal argument 2, got ${te.$}`);const Ae=q.expression;if(Ae.$!=="Code"&&Ae.$!=="DataLiteral")throw new Error(`Expected code or data literal argument 3, got ${Ae.$}`);const Fe=te.$==="DataLiteral"?Ce(te):(0,t.decompiledCode)((0,r.processInstructions)(h,te.instructions)),Ge=Ae.$==="DataLiteral"?Ce(Ae):(0,t.decompiledCode)((0,r.processInstructions)(h,Ae.instructions));return[Ie(ae),Fe,Ge]};r.ifElseBitArgs=O;const Q=(h,Z)=>{const[k,Y]=Z.args;if(!k||!Y)throw new Error("Expected 2 arguments");const q=k.expression;if(q.$!=="IntegerLiteral")throw new Error(`Expected integer literal argument 1, got ${q.$}`);const ae=Y.expression;if(ae.$!=="Code"&&ae.$!=="DataLiteral")throw new Error(`Expected code or data literal argument 2, got ${ae.$}`);const te=ae.$==="DataLiteral"?Ce(ae):(0,t.decompiledCode)((0,r.processInstructions)(h,ae.instructions));return[Ie(q),te]};r.ifBitArgs=Q;const V=h=>{const[Z]=h.args;if(!Z)throw new Error("Expected 1 argument");const k=Z.expression;if(k.$!=="DataLiteral")throw new Error(`Expected hex, bin or boc literal argument 1, got ${k.$}`);return j(k)};r.sliceArg=V;const w=h=>{const[Z]=h.args;if(!Z)throw new Error("Expected 1 argument");const k=Z.expression;if(k.$!=="DataLiteral")throw new Error(`Expected hex, bin or string literal argument 1, got ${k.$}`);return j(k)};r.debugstrArg=w;const b=(h,Z)=>{const[k,Y]=Z.args;if(!k||!Y)throw new Error("Expected 2 arguments");const q=k.expression;if(q.$!=="IntegerLiteral")throw new Error(`Expected integer argument 1, got ${q.$}`);const ae=Ie(q),te=Y.expression;if(te.$==="DataLiteral"){const Fe=j(te);return[ae,e.util.rawDict(Fe)]}if(te.$!=="Dictionary")throw new Error(`Expected dictionary argument 2, got ${te.$}`);const Ae=te.entries.map(Fe=>{const Ge=Fe.id,m=Fe.code;return{$:"DecompiledMethod",id:Ie(Ge),instructions:(0,r.processInstructions)(h,m.instructions)}});return[ae,e.util.decompiledDict(Ae)]};r.dictpushArg=b;const j=h=>{const Z=h.value;return Z.$==="StringLiteral"?(0,C.beginCell)().storeBuffer(Buffer.from(Z.value)).asSlice():Z.$==="HexLiteral"?(0,t.hex)(Z.content):Z.$==="BocLiteral"?(0,t.boc)(Z.content):(0,t.bin)(Z.content)},ne=h=>Number.parseInt(h.value.slice(1)),Ie=h=>{const Z=Pe(h);if(Z>Number.MAX_SAFE_INTEGER)throw new Error(`Number argument is too big, max value is ${Number.MAX_SAFE_INTEGER}, but ${Z} given`);if(h.value.$==="IntegerLiteralOct"){const Y=Number.parseInt(Se(h.value.digits.slice(2)),8);return h.op==="-"?-Y:Y}if(h.value.$==="IntegerLiteralBin"){const Y=Number.parseInt(Se(h.value.digits.slice(2)),2);return h.op==="-"?-Y:Y}const k=Number.parseInt(Se(h.value.digits));return h.op==="-"?-k:k},Pe=h=>{const Z=BigInt(Se(h.value.digits));return h.op==="-"?-Z:Z},Se=h=>h.replaceAll("_",""),Ce=h=>{const Z=j(h);try{const k=e.decompileCell(Z.asCell());return(0,t.code)(k)}catch{return(0,t.rawCode)(Z)}}}(nr)),nr}var He={},gC;function lA(){if(gC)return He;gC=1;var r=He&&He.__createBinding||(Object.create?function(a,C,u,o){o===void 0&&(o=u);var A=Object.getOwnPropertyDescriptor(C,u);(!A||("get"in A?!C.__esModule:A.writable||A.configurable))&&(A={enumerable:!0,get:function(){return C[u]}}),Object.defineProperty(a,o,A)}:function(a,C,u,o){o===void 0&&(o=u),a[o]=C[u]}),G=He&&He.__setModuleDefault||(Object.create?function(a,C){Object.defineProperty(a,"default",{enumerable:!0,value:C})}:function(a,C){a.default=C}),_=He&&He.__importStar||function(){var a=function(C){return a=Object.getOwnPropertyNames||function(u){var o=[];for(var A in u)Object.prototype.hasOwnProperty.call(u,A)&&(o[o.length]=A);return o},a(C)};return function(C){if(C&&C.__esModule)return C;var u={};if(C!=null)for(var o=a(C),A=0;A<o.length;A++)o[A]!=="default"&&r(u,C,o[A]);return G(u,C),u}}();Object.defineProperty(He,"__esModule",{value:!0}),He.assertSingleArgs=He.assertZeroArgs=void 0;const S=_(rt()),t=(a,C)=>{if(a.args.length>0)throw new S.ParseError(C,"Expected 0 arguments")};He.assertZeroArgs=t;const e=(a,C)=>{if(a.args.length!==1)throw new S.ParseError(C,"Expected 1 argument")};return He.assertSingleArgs=e,He}var UC;function YC(){return UC||(UC=1,function(r){var G=rr&&rr.__createBinding||(Object.create?function(I,T,n,i){i===void 0&&(i=n);var X=Object.getOwnPropertyDescriptor(T,n);(!X||("get"in X?!T.__esModule:X.writable||X.configurable))&&(X={enumerable:!0,get:function(){return T[n]}}),Object.defineProperty(I,i,X)}:function(I,T,n,i){i===void 0&&(i=n),I[i]=T[n]}),_=rr&&rr.__setModuleDefault||(Object.create?function(I,T){Object.defineProperty(I,"default",{enumerable:!0,value:T})}:function(I,T){I.default=T}),S=rr&&rr.__importStar||function(){var I=function(T){return I=Object.getOwnPropertyNames||function(n){var i=[];for(var X in n)Object.prototype.hasOwnProperty.call(n,X)&&(i[i.length]=X);return i},I(T)};return function(T){if(T&&T.__esModule)return T;var n={};if(T!=null)for(var i=I(T),X=0;X<i.length;X++)i[X]!=="default"&&G(n,T,i[X]);return _(n,T),n}}();Object.defineProperty(r,"__esModule",{value:!0}),r.ISNAN=r.CMP=r.GEQ=r.NEQ=r.GREATER=r.LEQ=r.EQUAL=r.LESS=r.SGN=r.QABS=r.QMINMAX=r.QMAX=r.QMIN=r.QUBITSIZE=r.QBITSIZE=r.QUFITSX=r.QFITSX=r.QNOT=r.QXOR=r.QOR=r.QAND=r.QPOW2=r.QMUL=r.QDEC=r.QINC=r.QNEGATE=r.QSUBR=r.QSUB=r.QADD=r.ABS=r.MINMAX=r.MAX=r.MIN=r.UBITSIZE=r.BITSIZE=r.UFITSX=r.FITSX=r.NOT=r.XOR=r.OR=r.AND=r.POW2=r.MUL=r.DEC=r.INC=r.NEGATE=r.SUBR=r.SUB=r.ADD=r.PUSHNAN=void 0,r.BREMBITS=r.BBITREFS=r.BREFS=r.BBITS=r.BDEPTH=r.ENDXC=r.STBRQ=r.STSLICERQ=r.STBREFRQ=r.STREFRQ=r.STBQ=r.STSLICEQ=r.STBREFQ=r.STREFQ=r.STBR=r.STSLICER=r.STBREFR=r.STREFR=r.STB=r.STBREF=r.ENDCST=r.ENDC=r.NEWC=r.SDCNTTRAIL1=r.SDCNTTRAIL0=r.SDCNTLEAD1=r.SDCNTLEAD0=r.SDPSFXREV=r.SDPSFX=r.SDSFXREV=r.SDSFX=r.SDPPFXREV=r.SDPPFX=r.SDPFXREV=r.SDPFX=r.SDEQ=r.SDLEXCMP=r.SDFIRST=r.SREMPTY=r.SDEMPTY=r.SEMPTY=r.QCMP=r.QGEQ=r.QNEQ=r.QGREATER=r.QLEQ=r.QEQUAL=r.QLESS=r.QSGN=r.CHKNAN=void 0,r.RET=r.JMPX=r.EXECUTE=r.CDEPTHIX=r.CHASHIX=r.CLEVELMASK=r.CLEVEL=r.CDEPTH=r.SDEPTH=r.LDSAME=r.LDONES=r.LDZEROES=r.SBITREFS=r.SREFS=r.SBITS=r.PLDREFVAR=r.SCHKBITREFSQ=r.SCHKREFSQ=r.SCHKBITSQ=r.SCHKBITREFS=r.SCHKREFS=r.SCHKBITS=r.XLOADQ=r.XLOAD=r.XCTOS=r.SPLITQ=r.SPLIT=r.SUBSLICE=r.SSKIPLAST=r.SCUTLAST=r.SSKIPFIRST=r.SCUTFIRST=r.SDSUBSTR=r.SDSKIPLAST=r.SDCUTLAST=r.SDSKIPFIRST=r.SDCUTFIRST=r.LDREFRTOS=r.LDREF=r.ENDS=r.CTOS=r.STSAME=r.STONES=r.STZEROES=r.BCHKBITREFSQ=r.BCHKREFSQ=r.BCHKBITREFS=r.BCHKREFS=r.BREMBITREFS=r.BREMREFS=void 0,r.ATEXIT=r.COMPOSBOTH=r.BOOLOR=r.BOOLAND=r.SETCONTCTRMANYX=r.SETCONTCTRX=r.POPCTRX=r.PUSHCTRX=r.BLESSVARARGS=r.BLESS=r.SETNUMVARARGS=r.SETCONTVARARGS=r.RETURNVARARGS=r.AGAINENDBRK=r.AGAINBRK=r.WHILEENDBRK=r.WHILEBRK=r.UNTILENDBRK=r.UNTILBRK=r.REPEATENDBRK=r.REPEATBRK=r.AGAINEND=r.AGAIN=r.WHILEEND=r.WHILE=r.UNTILEND=r.UNTIL=r.REPEATEND=r.REPEAT=r.IFNOTRETALT=r.IFRETALT=r.CONDSELCHK=r.CONDSEL=r.IFELSE=r.IFNOTJMP=r.IFJMP=r.IFNOT=r.IF=r.IFNOTRET=r.IFRET=r.RUNVMX=r.RETDATA=r.CALLCCVARARGS=r.JMPXVARARGS=r.RETVARARGS=r.CALLXVARARGS=r.JMPXDATA=r.CALLCC=r.RETBOOL=r.RETALT=void 0,r.NOW=r.COMMIT=r.GASCONSUMED=r.SETGASLIMIT=r.ACCEPT=r.ONLYX=r.ONLYTOPX=r.CHKDEPTH=r.DEPTH=r.XCHGX=r.TUCK=r.DROPX=r.REVX=r.BLKSWX=r.ROLLREV=r.ROLL=r.PICK=r.ROTREV=r.ROT=r.NIP=r.DROP=r.OVER=r.DUP=r.SWAP=r.NOP=r.PFXDICTGETEXEC=r.PFXDICTGETJMP=r.PFXDICTGET=r.PFXDICTGETQ=r.PFXDICTDEL=r.PFXDICTADD=r.PFXDICTREPLACE=r.PFXDICTSET=r.PLDDICTQ=r.LDDICTQ=r.PLDDICT=r.LDDICT=r.PLDDICTS=r.LDDICTS=r.SKIPDICT=r.STDICT=r.TRY=r.SAMEALTSAVE=r.SAMEALT=r.BOOLEVAL=r.INVERT=r.THENRETALT=r.THENRET=r.SETEXITALT=r.ATEXITALT=void 0,r.RIST255_QADD=r.RIST255_QVALIDATE=r.RIST255_PUSHL=r.RIST255_MULBASE=r.RIST255_MUL=r.RIST255_SUB=r.RIST255_ADD=r.RIST255_VALIDATE=r.RIST255_FROMHASH=r.P256_CHKSIGNS=r.P256_CHKSIGNU=r.SECP256K1_XONLY_PUBKEY_TWEAK_ADD=r.ECRECOVER=r.CHKSIGNS=r.CHKSIGNU=r.SHA256U=r.HASHSU=r.HASHCU=r.ADDRAND=r.SETRAND=r.RAND=r.RANDU256=r.SETGLOBVAR=r.GETGLOBVAR=r.GETFORWARDFEESIMPLE=r.GETGASFEESIMPLE=r.GETORIGINALFWDFEE=r.GETPRECOMPILEDGAS=r.GETFORWARDFEE=r.GETSTORAGEFEE=r.GETGASFEE=r.GLOBALID=r.PREVMCBLOCKS_100=r.PREVKEYBLOCK=r.PREVMCBLOCKS=r.CONFIGOPTPARAM=r.CONFIGPARAM=r.CONFIGDICT=r.DUEPAYMENT=r.UNPACKEDCONFIGTUPLE=r.PREVBLOCKSINFOTUPLE=r.STORAGEFEES=r.INCOMINGVALUE=r.MYCODE=r.CONFIGROOT=r.MYADDR=r.BALANCE=r.RANDSEED=r.LTIME=r.BLOCKLT=void 0,r.RAWRESERVEX=r.RAWRESERVE=r.SENDRAWMSG=r.REWRITEVARADDRQ=r.REWRITEVARADDR=r.REWRITESTDADDRQ=r.REWRITESTDADDR=r.PARSEMSGADDRQ=r.PARSEMSGADDR=r.LDMSGADDRQ=r.LDMSGADDR=r.STVARINT32=r.STVARUINT32=r.LDVARINT32=r.LDVARUINT32=r.STVARINT16=r.STGRAMS=r.LDVARINT16=r.LDGRAMS=r.SDATASIZE=r.SDATASIZEQ=r.CDATASIZE=r.CDATASIZEQ=r.BLS_PUSHR=r.BLS_PAIRING=r.BLS_G2_ISZERO=r.BLS_G2_INGROUP=r.BLS_MAP_TO_G2=r.BLS_G2_ZERO=r.BLS_G2_MULTIEXP=r.BLS_G2_MUL=r.BLS_G2_NEG=r.BLS_G2_SUB=r.BLS_G2_ADD=r.BLS_G1_ISZERO=r.BLS_G1_INGROUP=r.BLS_MAP_TO_G1=r.BLS_G1_ZERO=r.BLS_G1_MULTIEXP=r.BLS_G1_MUL=r.BLS_G1_NEG=r.BLS_G1_SUB=r.BLS_G1_ADD=r.BLS_AGGREGATEVERIFY=r.BLS_FASTAGGREGATEVERIFY=r.BLS_AGGREGATE=r.BLS_VERIFY=r.RIST255_QMULBASE=r.RIST255_QMUL=r.RIST255_QSUB=void 0,r.QDIVMOD=r.QMODC=r.QMODR=r.QMOD=r.QDIVC=r.QDIVR=r.QDIV=r.QADDDIVMODC=r.QADDDIVMODR=r.QADDDIVMOD=r.DIVMODC=r.DIVMODR=r.DIVMOD=r.MODC=r.MODR=r.MOD=r.DIVC=r.DIVR=r.DIV=r.ADDDIVMODC=r.ADDDIVMODR=r.ADDDIVMOD=r.NULLROTRIFNOT2=r.NULLROTRIF2=r.NULLSWAPIFNOT2=r.NULLSWAPIF2=r.NULLROTRIFNOT=r.NULLROTRIF=r.NULLSWAPIFNOT=r.NULLSWAPIF=r.TPOP=r.TPUSH=r.LAST=r.ISTUPLE=r.QTLEN=r.TLEN=r.SETINDEXVARQ=r.INDEXVARQ=r.SETINDEXVAR=r.EXPLODEVAR=r.UNPACKFIRSTVAR=r.UNTUPLEVAR=r.INDEXVAR=r.TUPLEVAR=r.ISNULL=r.PUSHNULL=r.SENDMSG=r.CHANGELIB=r.SETLIBCODE=r.SETCODE=void 0,r.MULADDRSHIFTRMOD=r.MULADDRSHIFTMOD=r.QMULDIVMODC=r.QMULDIVMODR=r.QMULDIVMOD=r.QMULMODC=r.QMULMODR=r.QMULMOD=r.QMULDIVC=r.QMULDIVR=r.QMULDIV=r.QMULADDDIVMODC=r.QMULADDDIVMODR=r.QMULADDDIVMOD=r.MULDIVMODC=r.MULDIVMODR=r.MULDIVMOD=r.MULMODC=r.MULMODR=r.MULMOD=r.MULDIVC=r.MULDIVR=r.MULDIV=r.MULADDDIVMODC=r.MULADDDIVMODR=r.MULADDDIVMOD=r.QRSHIFTMODC=r.QRSHIFTMODR=r.QRSHIFTMOD=r.QMODPOW2C=r.QMODPOW2R=r.QMODPOW2=r.QRSHIFTC=r.QRSHIFTR=r.QADDRSHIFTMODC=r.QADDRSHIFTMODR=r.QADDRSHIFTMOD=r.RSHIFTMODC=r.RSHIFTMODR=r.RSHIFTMOD=r.MODPOW2C=r.MODPOW2R=r.MODPOW2=r.RSHIFTC=r.RSHIFTR=r.ADDRSHIFTMODC=r.ADDRSHIFTMODR=r.ADDRSHIFTMOD=r.QDIVMODC=r.QDIVMODR=void 0,r.STUXR=r.STIXR=r.STUX=r.STIX=r.QLSHIFTDIVMODC=r.QLSHIFTDIVMODR=r.QLSHIFTDIVMOD=r.QLSHIFTMODC=r.QLSHIFTMODR=r.QLSHIFTMOD=r.QLSHIFTDIVC=r.QLSHIFTDIVR=r.QLSHIFTDIV=r.QLSHIFTADDDIVMODC=r.QLSHIFTADDDIVMODR=r.QLSHIFTADDDIVMOD=r.LSHIFTDIVMODC=r.LSHIFTDIVMODR=r.LSHIFTDIVMOD=r.LSHIFTMODC=r.LSHIFTMODR=r.LSHIFTMOD=r.LSHIFTDIVC=r.LSHIFTDIVR=r.LSHIFTDIV=r.LSHIFTADDDIVMODC=r.LSHIFTADDDIVMODR=r.LSHIFTADDDIVMOD=r.QMULRSHIFTCMOD=r.QMULRSHIFTRMOD=r.QMULRSHIFTMOD=r.QMULMODPOW2C=r.QMULMODPOW2R=r.QMULMODPOW2=r.QMULRSHIFTC=r.QMULRSHIFTR=r.QMULRSHIFT=r.QMULADDRSHIFTCMOD=r.QMULADDRSHIFTRMOD=r.QMULADDRSHIFTMOD=r.MULRSHIFTCMOD=r.MULRSHIFTRMOD=r.MULRSHIFTMOD=r.MULMODPOW2C=r.MULMODPOW2R=r.MULMODPOW2=r.MULRSHIFTC=r.MULRSHIFTR=r.MULRSHIFT=r.MULADDRSHIFTCMOD=void 0,r.DICTUGETREF=r.DICTUGET=r.DICTIGETREF=r.DICTIGET=r.DICTGETREF=r.DICTGET=r.DICTUGETEXECZ=r.DICTIGETEXECZ=r.DICTUGETJMPZ=r.DICTIGETJMPZ=r.DICTUGETEXEC=r.DICTIGETEXEC=r.DICTUGETJMP=r.DICTIGETJMP=r.PLDULE8Q=r.PLDILE8Q=r.PLDULE4Q=r.PLDILE4Q=r.LDULE8Q=r.LDILE8Q=r.LDULE4Q=r.LDILE4Q=r.PLDULE8=r.PLDILE8=r.PLDULE4=r.PLDILE4=r.LDULE8=r.LDILE8=r.LDULE4=r.LDILE4=r.PLDSLICEXQ=r.LDSLICEXQ=r.PLDSLICEX=r.LDSLICEX=r.PLDUXQ=r.PLDIXQ=r.LDUXQ=r.LDIXQ=r.PLDUX=r.PLDIX=r.LDUX=r.LDIX=r.STULE8=r.STILE8=r.STULE4=r.STILE4=r.STUXRQ=r.STIXRQ=r.STUXQ=r.STIXQ=void 0,r.DICTMAXREF=r.DICTMAX=r.DICTUMINREF=r.DICTUMIN=r.DICTIMINREF=r.DICTIMIN=r.DICTMINREF=r.DICTMIN=r.DICTUDELGETREF=r.DICTUDELGET=r.DICTIDELGETREF=r.DICTIDELGET=r.DICTDELGETREF=r.DICTDELGET=r.DICTUADDGETREF=r.DICTUADDGET=r.DICTIADDGETREF=r.DICTIADDGET=r.DICTADDGETREF=r.DICTADDGET=r.DICTUADDREF=r.DICTUADD=r.DICTIADDREF=r.DICTIADD=r.DICTADDREF=r.DICTADD=r.DICTUREPLACEGETREF=r.DICTUREPLACEGET=r.DICTIREPLACEGETREF=r.DICTIREPLACEGET=r.DICTREPLACEGETREF=r.DICTREPLACEGET=r.DICTUREPLACEREF=r.DICTUREPLACE=r.DICTIREPLACEREF=r.DICTIREPLACE=r.DICTREPLACEREF=r.DICTREPLACE=r.DICTUSETGETREF=r.DICTUSETGET=r.DICTISETGETREF=r.DICTISETGET=r.DICTSETGETREF=r.DICTSETGET=r.DICTUSETREF=r.DICTUSET=r.DICTISETREF=r.DICTISET=r.DICTSETREF=r.DICTSET=void 0,r.THROWANY=r.SUBDICTURPGET=r.SUBDICTIRPGET=r.SUBDICTRPGET=r.SUBDICTUGET=r.SUBDICTIGET=r.SUBDICTGET=r.DICTUSETGETOPTREF=r.DICTISETGETOPTREF=r.DICTSETGETOPTREF=r.DICTUGETOPTREF=r.DICTIGETOPTREF=r.DICTGETOPTREF=r.DICTUDEL=r.DICTIDEL=r.DICTDEL=r.DICTUADDGETB=r.DICTIADDGETB=r.DICTADDGETB=r.DICTUADDB=r.DICTIADDB=r.DICTADDB=r.DICTUREPLACEGETB=r.DICTIREPLACEGETB=r.DICTREPLACEGETB=r.DICTUREPLACEB=r.DICTIREPLACEB=r.DICTREPLACEB=r.DICTUSETGETB=r.DICTISETGETB=r.DICTSETGETB=r.DICTUSETB=r.DICTISETB=r.DICTSETB=r.DICTUREMMAXREF=r.DICTUREMMAX=r.DICTIREMMAXREF=r.DICTIREMMAX=r.DICTREMMAXREF=r.DICTREMMAX=r.DICTUREMMINREF=r.DICTUREMMIN=r.DICTIREMMINREF=r.DICTIREMMIN=r.DICTREMMINREF=r.DICTREMMIN=r.DICTUMAXREF=r.DICTUMAX=r.DICTIMAXREF=r.DICTIMAX=void 0,r.INDEX=r.TUPLE=r.BLKDROP=r.RETURNARGS=r.RETARGS=r.JMPXARGS=r.THROWARGIFNOT=r.THROWARGIF=r.THROWARG=r.PREPAREDICT=r.JMPDICT=r.CDEPTHI=r.CHASHI=r.PLDREFIDX=r.TRYARGS=r.CALLCCARGS=r.SETCONTCTRMANY=r.QUFITS=r.QFITS=r.UFITS=r.FITS=r.PUSHNEGPOW2=r.PUSHPOW2DEC=r.QNEQINT=r.QGTINT=r.QLESSINT=r.QEQINT=r.NEQINT=r.GTINT=r.LESSINT=r.EQINT=r.QMULINT=r.QADDINT=r.MULINT=r.ADDINT=r.DICTUGETPREVEQ=r.DICTUGETPREV=r.DICTUGETNEXTEQ=r.DICTUGETNEXT=r.DICTIGETPREVEQ=r.DICTIGETPREV=r.DICTIGETNEXTEQ=r.DICTIGETNEXT=r.DICTGETPREVEQ=r.DICTGETPREV=r.DICTGETNEXTEQ=r.DICTGETNEXT=r.THROWARGANYIFNOT=r.THROWANYIFNOT=r.THROWARGANY=void 0,r.PUSHREFCONT=r.PUSHREFSLICE=r.PUSHREF=r.GETPARAM=r.SETGLOB=r.GETGLOB=r.BLKDROP2=r.BLKPUSH=r.PUSHPOW2=r.INDEX3=r.INDEX2=r.IFNBITJMP=r.IFBITJMP=r.PLDSLICEQ=r.LDSLICEQ=r.PLDSLICE=r.PLDUZ=r.PLDUQ=r.PLDIQ=r.LDUQ=r.LDIQ=r.PLDU=r.PLDI=r.STURQ=r.STIRQ=r.STUQ=r.STIQ=r.STUR=r.STIR=r.BLESSARGS=r.SETCONTARGS=r.REVERSE=r.BLKSWAP=r.PU2XC=r.PUXCPU=r.PUXC2=r.XCPUXC=r.PUXC=r.PUSH2=r.XCPU=r.XCHG2=r.PUSH3=r.XCPU2=r.XC2PU=r.SETINDEXQ=r.INDEXQ=r.SETINDEX=r.EXPLODE=r.UNPACKFIRST=r.UNTUPLE=void 0,r.MULADDRSHIFTC_MOD=r.MULADDRSHIFTR_MOD=r.MULADDRSHIFT_MOD=r.RSHIFTC_MOD=r.RSHIFTR_MOD=r.RSHIFT_MOD=r.MODPOW2C_=r.MODPOW2R_=r.MODPOW2_=r.RSHIFTC_=r.RSHIFTR_=r.RSHIFT_=r.ADDRSHIFTC_MOD=r.ADDRSHIFTR_MOD=r.ADDRSHIFT_MOD=r.OVER2=r.DUP2=r.DROP2=r.SWAP2=r.RUNVM=r.SAVEBOTHCTR=r.SAVEALTCTR=r.SAVECTR=r.POPSAVE=r.SETALTCTR=r.SETRETCTR=r.SETCONTCTR=r.DEBUGSTR=r.THROWARGANYIF=r.THROWANYIF=r.STREF2CONST=r.STREFCONST=r.SDBEGINSQ=r.SDBEGINS=r.SDBEGINSXQ=r.SDBEGINSX=r.PFXDICTSWITCH=r.DICTPUSHCONST=r.IFNBITJMPREF=r.IFBITJMPREF=r.IFREFELSEREF=r.IFELSEREF=r.IFREFELSE=r.IFNOTJMPREF=r.IFJMPREF=r.IFNOTREF=r.IFREF=r.JMPREFDATA=r.JMPREF=r.CALLREF=void 0,r.RSHIFT_VAR=r.BCHKBITSQ=r.BCHKBITSQ_VAR=r.BCHKBITS=r.BCHKBITS_VAR=r.QLSHIFT=r.QLSHIFT_VAR=r.LSHIFT=r.LSHIFT_VAR=r.LDSLICE_ALT=r.LDSLICE=r.LDU_ALT=r.LDU=r.LDI_ALT=r.LDI=r.STU_ALT=r.STU=r.STI_ALT=r.STI=r.XCHG3_ALT=r.XCHG3=r.STSLICE_ALT=r.STSLICE=r.STREF_ALT=r.STREF=r.HASHEXTAR=r.HASHEXTA=r.HASHEXTR=r.HASHEXT=r.LSHIFT_DIVMODC=r.LSHIFT_DIVMODR=r.LSHIFT_DIVMOD=r.LSHIFT_MODC=r.LSHIFT_MODR=r.LSHIFT_MOD=r.LSHIFT_DIVC=r.LSHIFT_DIVR=r.LSHIFT_DIV=r.LSHIFT_ADDDIVMODC=r.LSHIFT_ADDDIVMODR=r.LSHIFT_ADDDIVMOD=r.MULRSHIFTC_MOD=r.MULRSHIFTR_MOD=r.MULRSHIFT_MOD=r.MULMODPOW2C_=r.MULMODPOW2R_=r.MULMODPOW2_=r.MULRSHIFTC_=r.MULRSHIFTR_=r.MULRSHIFT_=void 0,r.convertInstruction=r.DEBUGMARK=r.SETCP_SHORT=r.SETCPX=r.SETCP=r.STSLICECONST=r.PUSHCONT_SHORT=r.PUSHCONT=r.PUSHSLICE_LONG=r.PUSHSLICE_REFS=r.PUSHSLICE=r.CALLXARGS_1=r.CALLXARGS=r.POP_LONG=r.POP=r.POPCTR=r.PUSH_LONG=r.PUSH=r.PUSHCTR=r.DEBUG_2=r.DUMP=r.DEBUG_1=r.STRDUMP=r.DEBUG=r.DUMPSTK=r.XCHG_1I=r.XCHG_IJ=r.XCHG_0I=r.XCHG_01_LONG=r.PUSHINT_LONG=r.PUSHINT_16=r.PUSHINT_8=r.PUSHINT_4=r.THROWIFNOT=r.THROWIFNOT_SHORT=r.THROWIF=r.THROWIF_SHORT=r.THROW=r.THROW_SHORT=r.CALLDICT_LONG=r.CALLDICT=r.QRSHIFT_ALT=r.QRSHIFT=r.QRSHIFT_VAR=r.RSHIFT_ALT=r.RSHIFT=void 0;const t=S(rt()),e=S(et()),a=S(lA()),C=(I,T,n)=>(a.assertZeroArgs(T,n),e.PUSHNAN(n));r.PUSHNAN=C;const u=(I,T,n)=>(a.assertZeroArgs(T,n),e.ADD(n));r.ADD=u;const o=(I,T,n)=>(a.assertZeroArgs(T,n),e.SUB(n));r.SUB=o;const A=(I,T,n)=>(a.assertZeroArgs(T,n),e.SUBR(n));r.SUBR=A;const c=(I,T,n)=>(a.assertZeroArgs(T,n),e.NEGATE(n));r.NEGATE=c;const l=(I,T,n)=>(a.assertZeroArgs(T,n),e.INC(n));r.INC=l;const K=(I,T,n)=>(a.assertZeroArgs(T,n),e.DEC(n));r.DEC=K;const d=(I,T,n)=>(a.assertZeroArgs(T,n),e.MUL(n));r.MUL=d;const f=(I,T,n)=>(a.assertZeroArgs(T,n),e.POW2(n));r.POW2=f;const p=(I,T,n)=>(a.assertZeroArgs(T,n),e.AND(n));r.AND=p;const v=(I,T,n)=>(a.assertZeroArgs(T,n),e.OR(n));r.OR=v;const B=(I,T,n)=>(a.assertZeroArgs(T,n),e.XOR(n));r.XOR=B;const F=(I,T,n)=>(a.assertZeroArgs(T,n),e.NOT(n));r.NOT=F;const N=(I,T,n)=>(a.assertZeroArgs(T,n),e.FITSX(n));r.FITSX=N;const P=(I,T,n)=>(a.assertZeroArgs(T,n),e.UFITSX(n));r.UFITSX=P;const O=(I,T,n)=>(a.assertZeroArgs(T,n),e.BITSIZE(n));r.BITSIZE=O;const Q=(I,T,n)=>(a.assertZeroArgs(T,n),e.UBITSIZE(n));r.UBITSIZE=Q;const V=(I,T,n)=>(a.assertZeroArgs(T,n),e.MIN(n));r.MIN=V;const w=(I,T,n)=>(a.assertZeroArgs(T,n),e.MAX(n));r.MAX=w;const b=(I,T,n)=>(a.assertZeroArgs(T,n),e.MINMAX(n));r.MINMAX=b;const j=(I,T,n)=>(a.assertZeroArgs(T,n),e.ABS(n));r.ABS=j;const ne=(I,T,n)=>(a.assertZeroArgs(T,n),e.QADD(n));r.QADD=ne;const Ie=(I,T,n)=>(a.assertZeroArgs(T,n),e.QSUB(n));r.QSUB=Ie;const Pe=(I,T,n)=>(a.assertZeroArgs(T,n),e.QSUBR(n));r.QSUBR=Pe;const Se=(I,T,n)=>(a.assertZeroArgs(T,n),e.QNEGATE(n));r.QNEGATE=Se;const Ce=(I,T,n)=>(a.assertZeroArgs(T,n),e.QINC(n));r.QINC=Ce;const h=(I,T,n)=>(a.assertZeroArgs(T,n),e.QDEC(n));r.QDEC=h;const Z=(I,T,n)=>(a.assertZeroArgs(T,n),e.QMUL(n));r.QMUL=Z;const k=(I,T,n)=>(a.assertZeroArgs(T,n),e.QPOW2(n));r.QPOW2=k;const Y=(I,T,n)=>(a.assertZeroArgs(T,n),e.QAND(n));r.QAND=Y;const q=(I,T,n)=>(a.assertZeroArgs(T,n),e.QOR(n));r.QOR=q;const ae=(I,T,n)=>(a.assertZeroArgs(T,n),e.QXOR(n));r.QXOR=ae;const te=(I,T,n)=>(a.assertZeroArgs(T,n),e.QNOT(n));r.QNOT=te;const Ae=(I,T,n)=>(a.assertZeroArgs(T,n),e.QFITSX(n));r.QFITSX=Ae;const Fe=(I,T,n)=>(a.assertZeroArgs(T,n),e.QUFITSX(n));r.QUFITSX=Fe;const Ge=(I,T,n)=>(a.assertZeroArgs(T,n),e.QBITSIZE(n));r.QBITSIZE=Ge;const m=(I,T,n)=>(a.assertZeroArgs(T,n),e.QUBITSIZE(n));r.QUBITSIZE=m;const H=(I,T,n)=>(a.assertZeroArgs(T,n),e.QMIN(n));r.QMIN=H;const $=(I,T,n)=>(a.assertZeroArgs(T,n),e.QMAX(n));r.QMAX=$;const J=(I,T,n)=>(a.assertZeroArgs(T,n),e.QMINMAX(n));r.QMINMAX=J;const re=(I,T,n)=>(a.assertZeroArgs(T,n),e.QABS(n));r.QABS=re;const De=(I,T,n)=>(a.assertZeroArgs(T,n),e.SGN(n));r.SGN=De;const Ee=(I,T,n)=>(a.assertZeroArgs(T,n),e.LESS(n));r.LESS=Ee;const Re=(I,T,n)=>(a.assertZeroArgs(T,n),e.EQUAL(n));r.EQUAL=Re;const oe=(I,T,n)=>(a.assertZeroArgs(T,n),e.LEQ(n));r.LEQ=oe;const Oe=(I,T,n)=>(a.assertZeroArgs(T,n),e.GREATER(n));r.GREATER=Oe;const ge=(I,T,n)=>(a.assertZeroArgs(T,n),e.NEQ(n));r.NEQ=ge;const de=(I,T,n)=>(a.assertZeroArgs(T,n),e.GEQ(n));r.GEQ=de;const Rr=(I,T,n)=>(a.assertZeroArgs(T,n),e.CMP(n));r.CMP=Rr;const ur=(I,T,n)=>(a.assertZeroArgs(T,n),e.ISNAN(n));r.ISNAN=ur;const Cr=(I,T,n)=>(a.assertZeroArgs(T,n),e.CHKNAN(n));r.CHKNAN=Cr;const Ur=(I,T,n)=>(a.assertZeroArgs(T,n),e.QSGN(n));r.QSGN=Ur;const lr=(I,T,n)=>(a.assertZeroArgs(T,n),e.QLESS(n));r.QLESS=lr;const Nr=(I,T,n)=>(a.assertZeroArgs(T,n),e.QEQUAL(n));r.QEQUAL=Nr;const Hr=(I,T,n)=>(a.assertZeroArgs(T,n),e.QLEQ(n));r.QLEQ=Hr;const Gr=(I,T,n)=>(a.assertZeroArgs(T,n),e.QGREATER(n));r.QGREATER=Gr;const Qr=(I,T,n)=>(a.assertZeroArgs(T,n),e.QNEQ(n));r.QNEQ=Qr;const pe=(I,T,n)=>(a.assertZeroArgs(T,n),e.QGEQ(n));r.QGEQ=pe;const _r=(I,T,n)=>(a.assertZeroArgs(T,n),e.QCMP(n));r.QCMP=_r;const Ar=(I,T,n)=>(a.assertZeroArgs(T,n),e.SEMPTY(n));r.SEMPTY=Ar;const Br=(I,T,n)=>(a.assertZeroArgs(T,n),e.SDEMPTY(n));r.SDEMPTY=Br;const fr=(I,T,n)=>(a.assertZeroArgs(T,n),e.SREMPTY(n));r.SREMPTY=fr;const Xr=(I,T,n)=>(a.assertZeroArgs(T,n),e.SDFIRST(n));r.SDFIRST=Xr;const Vr=(I,T,n)=>(a.assertZeroArgs(T,n),e.SDLEXCMP(n));r.SDLEXCMP=Vr;const $r=(I,T,n)=>(a.assertZeroArgs(T,n),e.SDEQ(n));r.SDEQ=$r;const Wr=(I,T,n)=>(a.assertZeroArgs(T,n),e.SDPFX(n));r.SDPFX=Wr;const Mr=(I,T,n)=>(a.assertZeroArgs(T,n),e.SDPFXREV(n));r.SDPFXREV=Mr;const Kr=(I,T,n)=>(a.assertZeroArgs(T,n),e.SDPPFX(n));r.SDPPFX=Kr;const Zr=(I,T,n)=>(a.assertZeroArgs(T,n),e.SDPPFXREV(n));r.SDPPFXREV=Zr;const cr=(I,T,n)=>(a.assertZeroArgs(T,n),e.SDSFX(n));r.SDSFX=cr;const Pr=(I,T,n)=>(a.assertZeroArgs(T,n),e.SDSFXREV(n));r.SDSFXREV=Pr;const kr=(I,T,n)=>(a.assertZeroArgs(T,n),e.SDPSFX(n));r.SDPSFX=kr;const hr=(I,T,n)=>(a.assertZeroArgs(T,n),e.SDPSFXREV(n));r.SDPSFXREV=hr;const yr=(I,T,n)=>(a.assertZeroArgs(T,n),e.SDCNTLEAD0(n));r.SDCNTLEAD0=yr;const wr=(I,T,n)=>(a.assertZeroArgs(T,n),e.SDCNTLEAD1(n));r.SDCNTLEAD1=wr;const pr=(I,T,n)=>(a.assertZeroArgs(T,n),e.SDCNTTRAIL0(n));r.SDCNTTRAIL0=pr;const Yr=(I,T,n)=>(a.assertZeroArgs(T,n),e.SDCNTTRAIL1(n));r.SDCNTTRAIL1=Yr;const br=(I,T,n)=>(a.assertZeroArgs(T,n),e.NEWC(n));r.NEWC=br;const Jr=(I,T,n)=>(a.assertZeroArgs(T,n),e.ENDC(n));r.ENDC=Jr;const vr=(I,T,n)=>(a.assertZeroArgs(T,n),e.ENDCST(n));r.ENDCST=vr;const jr=(I,T,n)=>(a.assertZeroArgs(T,n),e.STBREF(n));r.STBREF=jr;const zr=(I,T,n)=>(a.assertZeroArgs(T,n),e.STB(n));r.STB=zr;const qr=(I,T,n)=>(a.assertZeroArgs(T,n),e.STREFR(n));r.STREFR=qr;const xr=(I,T,n)=>(a.assertZeroArgs(T,n),e.STBREFR(n));r.STBREFR=xr;const en=(I,T,n)=>(a.assertZeroArgs(T,n),e.STSLICER(n));r.STSLICER=en;const rn=(I,T,n)=>(a.assertZeroArgs(T,n),e.STBR(n));r.STBR=rn;const nn=(I,T,n)=>(a.assertZeroArgs(T,n),e.STREFQ(n));r.STREFQ=nn;const tn=(I,T,n)=>(a.assertZeroArgs(T,n),e.STBREFQ(n));r.STBREFQ=tn;const an=(I,T,n)=>(a.assertZeroArgs(T,n),e.STSLICEQ(n));r.STSLICEQ=an;const Tn=(I,T,n)=>(a.assertZeroArgs(T,n),e.STBQ(n));r.STBQ=Tn;const In=(I,T,n)=>(a.assertZeroArgs(T,n),e.STREFRQ(n));r.STREFRQ=In;const Dn=(I,T,n)=>(a.assertZeroArgs(T,n),e.STBREFRQ(n));r.STBREFRQ=Dn;const En=(I,T,n)=>(a.assertZeroArgs(T,n),e.STSLICERQ(n));r.STSLICERQ=En;const sn=(I,T,n)=>(a.assertZeroArgs(T,n),e.STBRQ(n));r.STBRQ=sn;const Sn=(I,T,n)=>(a.assertZeroArgs(T,n),e.ENDXC(n));r.ENDXC=Sn;const Rn=(I,T,n)=>(a.assertZeroArgs(T,n),e.BDEPTH(n));r.BDEPTH=Rn;const on=(I,T,n)=>(a.assertZeroArgs(T,n),e.BBITS(n));r.BBITS=on;const Ln=(I,T,n)=>(a.assertZeroArgs(T,n),e.BREFS(n));r.BREFS=Ln;const M=(I,T,n)=>(a.assertZeroArgs(T,n),e.BBITREFS(n));r.BBITREFS=M;const Ze=(I,T,n)=>(a.assertZeroArgs(T,n),e.BREMBITS(n));r.BREMBITS=Ze;const me=(I,T,n)=>(a.assertZeroArgs(T,n),e.BREMREFS(n));r.BREMREFS=me;const Dr=(I,T,n)=>(a.assertZeroArgs(T,n),e.BREMBITREFS(n));r.BREMBITREFS=Dr;const x=(I,T,n)=>(a.assertZeroArgs(T,n),e.BCHKREFS(n));r.BCHKREFS=x;const Ye=(I,T,n)=>(a.assertZeroArgs(T,n),e.BCHKBITREFS(n));r.BCHKBITREFS=Ye;const un=(I,T,n)=>(a.assertZeroArgs(T,n),e.BCHKREFSQ(n));r.BCHKREFSQ=un;const Te=(I,T,n)=>(a.assertZeroArgs(T,n),e.BCHKBITREFSQ(n));r.BCHKBITREFSQ=Te;const be=(I,T,n)=>(a.assertZeroArgs(T,n),e.STZEROES(n));r.STZEROES=be;const Cn=(I,T,n)=>(a.assertZeroArgs(T,n),e.STONES(n));r.STONES=Cn;const Or=(I,T,n)=>(a.assertZeroArgs(T,n),e.STSAME(n));r.STSAME=Or;const dr=(I,T,n)=>(a.assertZeroArgs(T,n),e.CTOS(n));r.CTOS=dr;const ee=(I,T,n)=>(a.assertZeroArgs(T,n),e.ENDS(n));r.ENDS=ee;const An=(I,T,n)=>(a.assertZeroArgs(T,n),e.LDREF(n));r.LDREF=An;const Fr=(I,T,n)=>(a.assertZeroArgs(T,n),e.LDREFRTOS(n));r.LDREFRTOS=Fr;const Mn=(I,T,n)=>(a.assertZeroArgs(T,n),e.SDCUTFIRST(n));r.SDCUTFIRST=Mn;const cn=(I,T,n)=>(a.assertZeroArgs(T,n),e.SDSKIPFIRST(n));r.SDSKIPFIRST=cn;const Pn=(I,T,n)=>(a.assertZeroArgs(T,n),e.SDCUTLAST(n));r.SDCUTLAST=Pn;const On=(I,T,n)=>(a.assertZeroArgs(T,n),e.SDSKIPLAST(n));r.SDSKIPLAST=On;const dn=(I,T,n)=>(a.assertZeroArgs(T,n),e.SDSUBSTR(n));r.SDSUBSTR=dn;const Fn=(I,T,n)=>(a.assertZeroArgs(T,n),e.SCUTFIRST(n));r.SCUTFIRST=Fn;const mn=(I,T,n)=>(a.assertZeroArgs(T,n),e.SSKIPFIRST(n));r.SSKIPFIRST=mn;const gn=(I,T,n)=>(a.assertZeroArgs(T,n),e.SCUTLAST(n));r.SCUTLAST=gn;const Un=(I,T,n)=>(a.assertZeroArgs(T,n),e.SSKIPLAST(n));r.SSKIPLAST=Un;const ln=(I,T,n)=>(a.assertZeroArgs(T,n),e.SUBSLICE(n));r.SUBSLICE=ln;const ke=(I,T,n)=>(a.assertZeroArgs(T,n),e.SPLIT(n));r.SPLIT=ke;const Nn=(I,T,n)=>(a.assertZeroArgs(T,n),e.SPLITQ(n));r.SPLITQ=Nn;const Hn=(I,T,n)=>(a.assertZeroArgs(T,n),e.XCTOS(n));r.XCTOS=Hn;const Gn=(I,T,n)=>(a.assertZeroArgs(T,n),e.XLOAD(n));r.XLOAD=Gn;const Qn=(I,T,n)=>(a.assertZeroArgs(T,n),e.XLOADQ(n));r.XLOADQ=Qn;const _n=(I,T,n)=>(a.assertZeroArgs(T,n),e.SCHKBITS(n));r.SCHKBITS=_n;const mr=(I,T,n)=>(a.assertZeroArgs(T,n),e.SCHKREFS(n));r.SCHKREFS=mr;const Bn=(I,T,n)=>(a.assertZeroArgs(T,n),e.SCHKBITREFS(n));r.SCHKBITREFS=Bn;const fn=(I,T,n)=>(a.assertZeroArgs(T,n),e.SCHKBITSQ(n));r.SCHKBITSQ=fn;const Xn=(I,T,n)=>(a.assertZeroArgs(T,n),e.SCHKREFSQ(n));r.SCHKREFSQ=Xn;const Vn=(I,T,n)=>(a.assertZeroArgs(T,n),e.SCHKBITREFSQ(n));r.SCHKBITREFSQ=Vn;const $n=(I,T,n)=>(a.assertZeroArgs(T,n),e.PLDREFVAR(n));r.PLDREFVAR=$n;const Wn=(I,T,n)=>(a.assertZeroArgs(T,n),e.SBITS(n));r.SBITS=Wn;const Kn=(I,T,n)=>(a.assertZeroArgs(T,n),e.SREFS(n));r.SREFS=Kn;const Zn=(I,T,n)=>(a.assertZeroArgs(T,n),e.SBITREFS(n));r.SBITREFS=Zn;const Ue=(I,T,n)=>(a.assertZeroArgs(T,n),e.LDZEROES(n));r.LDZEROES=Ue;const Je=(I,T,n)=>(a.assertZeroArgs(T,n),e.LDONES(n));r.LDONES=Je;const Le=(I,T,n)=>(a.assertZeroArgs(T,n),e.LDSAME(n));r.LDSAME=Le;const ir=(I,T,n)=>(a.assertZeroArgs(T,n),e.SDEPTH(n));r.SDEPTH=ir;const gr=(I,T,n)=>(a.assertZeroArgs(T,n),e.CDEPTH(n));r.CDEPTH=gr;const L=(I,T,n)=>(a.assertZeroArgs(T,n),e.CLEVEL(n));r.CLEVEL=L;const g=(I,T,n)=>(a.assertZeroArgs(T,n),e.CLEVELMASK(n));r.CLEVELMASK=g;const U=(I,T,n)=>(a.assertZeroArgs(T,n),e.CHASHIX(n));r.CHASHIX=U;const y=(I,T,n)=>(a.assertZeroArgs(T,n),e.CDEPTHIX(n));r.CDEPTHIX=y;const W=(I,T,n)=>(a.assertZeroArgs(T,n),e.EXECUTE(n));r.EXECUTE=W;const ue=(I,T,n)=>(a.assertZeroArgs(T,n),e.JMPX(n));r.JMPX=ue;const Me=(I,T,n)=>(a.assertZeroArgs(T,n),e.RET(n));r.RET=Me;const Qe=(I,T,n)=>(a.assertZeroArgs(T,n),e.RETALT(n));r.RETALT=Qe;const nt=(I,T,n)=>(a.assertZeroArgs(T,n),e.RETBOOL(n));r.RETBOOL=nt;const tt=(I,T,n)=>(a.assertZeroArgs(T,n),e.CALLCC(n));r.CALLCC=tt;const at=(I,T,n)=>(a.assertZeroArgs(T,n),e.JMPXDATA(n));r.JMPXDATA=at;const Tt=(I,T,n)=>(a.assertZeroArgs(T,n),e.CALLXVARARGS(n));r.CALLXVARARGS=Tt;const It=(I,T,n)=>(a.assertZeroArgs(T,n),e.RETVARARGS(n));r.RETVARARGS=It;const Dt=(I,T,n)=>(a.assertZeroArgs(T,n),e.JMPXVARARGS(n));r.JMPXVARARGS=Dt;const Et=(I,T,n)=>(a.assertZeroArgs(T,n),e.CALLCCVARARGS(n));r.CALLCCVARARGS=Et;const st=(I,T,n)=>(a.assertZeroArgs(T,n),e.RETDATA(n));r.RETDATA=st;const St=(I,T,n)=>(a.assertZeroArgs(T,n),e.RUNVMX(n));r.RUNVMX=St;const Rt=(I,T,n)=>(a.assertZeroArgs(T,n),e.IFRET(n));r.IFRET=Rt;const it=(I,T,n)=>(a.assertZeroArgs(T,n),e.IFNOTRET(n));r.IFNOTRET=it;const ot=(I,T,n)=>(a.assertZeroArgs(T,n),e.IF(n));r.IF=ot;const Lt=(I,T,n)=>(a.assertZeroArgs(T,n),e.IFNOT(n));r.IFNOT=Lt;const ut=(I,T,n)=>(a.assertZeroArgs(T,n),e.IFJMP(n));r.IFJMP=ut;const Ct=(I,T,n)=>(a.assertZeroArgs(T,n),e.IFNOTJMP(n));r.IFNOTJMP=Ct;const At=(I,T,n)=>(a.assertZeroArgs(T,n),e.IFELSE(n));r.IFELSE=At;const Mt=(I,T,n)=>(a.assertZeroArgs(T,n),e.CONDSEL(n));r.CONDSEL=Mt;const ct=(I,T,n)=>(a.assertZeroArgs(T,n),e.CONDSELCHK(n));r.CONDSELCHK=ct;const Pt=(I,T,n)=>(a.assertZeroArgs(T,n),e.IFRETALT(n));r.IFRETALT=Pt;const Ot=(I,T,n)=>(a.assertZeroArgs(T,n),e.IFNOTRETALT(n));r.IFNOTRETALT=Ot;const dt=(I,T,n)=>(a.assertZeroArgs(T,n),e.REPEAT(n));r.REPEAT=dt;const Ft=(I,T,n)=>(a.assertZeroArgs(T,n),e.REPEATEND(n));r.REPEATEND=Ft;const mt=(I,T,n)=>(a.assertZeroArgs(T,n),e.UNTIL(n));r.UNTIL=mt;const gt=(I,T,n)=>(a.assertZeroArgs(T,n),e.UNTILEND(n));r.UNTILEND=gt;const Ut=(I,T,n)=>(a.assertZeroArgs(T,n),e.WHILE(n));r.WHILE=Ut;const lt=(I,T,n)=>(a.assertZeroArgs(T,n),e.WHILEEND(n));r.WHILEEND=lt;const Nt=(I,T,n)=>(a.assertZeroArgs(T,n),e.AGAIN(n));r.AGAIN=Nt;const Ht=(I,T,n)=>(a.assertZeroArgs(T,n),e.AGAINEND(n));r.AGAINEND=Ht;const Gt=(I,T,n)=>(a.assertZeroArgs(T,n),e.REPEATBRK(n));r.REPEATBRK=Gt;const Qt=(I,T,n)=>(a.assertZeroArgs(T,n),e.REPEATENDBRK(n));r.REPEATENDBRK=Qt;const _t=(I,T,n)=>(a.assertZeroArgs(T,n),e.UNTILBRK(n));r.UNTILBRK=_t;const Bt=(I,T,n)=>(a.assertZeroArgs(T,n),e.UNTILENDBRK(n));r.UNTILENDBRK=Bt;const ft=(I,T,n)=>(a.assertZeroArgs(T,n),e.WHILEBRK(n));r.WHILEBRK=ft;const Xt=(I,T,n)=>(a.assertZeroArgs(T,n),e.WHILEENDBRK(n));r.WHILEENDBRK=Xt;const Vt=(I,T,n)=>(a.assertZeroArgs(T,n),e.AGAINBRK(n));r.AGAINBRK=Vt;const $t=(I,T,n)=>(a.assertZeroArgs(T,n),e.AGAINENDBRK(n));r.AGAINENDBRK=$t;const Wt=(I,T,n)=>(a.assertZeroArgs(T,n),e.RETURNVARARGS(n));r.RETURNVARARGS=Wt;const Kt=(I,T,n)=>(a.assertZeroArgs(T,n),e.SETCONTVARARGS(n));r.SETCONTVARARGS=Kt;const Zt=(I,T,n)=>(a.assertZeroArgs(T,n),e.SETNUMVARARGS(n));r.SETNUMVARARGS=Zt;const kt=(I,T,n)=>(a.assertZeroArgs(T,n),e.BLESS(n));r.BLESS=kt;const ht=(I,T,n)=>(a.assertZeroArgs(T,n),e.BLESSVARARGS(n));r.BLESSVARARGS=ht;const yt=(I,T,n)=>(a.assertZeroArgs(T,n),e.PUSHCTRX(n));r.PUSHCTRX=yt;const wt=(I,T,n)=>(a.assertZeroArgs(T,n),e.POPCTRX(n));r.POPCTRX=wt;const pt=(I,T,n)=>(a.assertZeroArgs(T,n),e.SETCONTCTRX(n));r.SETCONTCTRX=pt;const Yt=(I,T,n)=>(a.assertZeroArgs(T,n),e.SETCONTCTRMANYX(n));r.SETCONTCTRMANYX=Yt;const bt=(I,T,n)=>(a.assertZeroArgs(T,n),e.BOOLAND(n));r.BOOLAND=bt;const Jt=(I,T,n)=>(a.assertZeroArgs(T,n),e.BOOLOR(n));r.BOOLOR=Jt;const vt=(I,T,n)=>(a.assertZeroArgs(T,n),e.COMPOSBOTH(n));r.COMPOSBOTH=vt;const jt=(I,T,n)=>(a.assertZeroArgs(T,n),e.ATEXIT(n));r.ATEXIT=jt;const zt=(I,T,n)=>(a.assertZeroArgs(T,n),e.ATEXITALT(n));r.ATEXITALT=zt;const qt=(I,T,n)=>(a.assertZeroArgs(T,n),e.SETEXITALT(n));r.SETEXITALT=qt;const xt=(I,T,n)=>(a.assertZeroArgs(T,n),e.THENRET(n));r.THENRET=xt;const ea=(I,T,n)=>(a.assertZeroArgs(T,n),e.THENRETALT(n));r.THENRETALT=ea;const ra=(I,T,n)=>(a.assertZeroArgs(T,n),e.INVERT(n));r.INVERT=ra;const na=(I,T,n)=>(a.assertZeroArgs(T,n),e.BOOLEVAL(n));r.BOOLEVAL=na;const ta=(I,T,n)=>(a.assertZeroArgs(T,n),e.SAMEALT(n));r.SAMEALT=ta;const aa=(I,T,n)=>(a.assertZeroArgs(T,n),e.SAMEALTSAVE(n));r.SAMEALTSAVE=aa;const Ta=(I,T,n)=>(a.assertZeroArgs(T,n),e.TRY(n));r.TRY=Ta;const Ia=(I,T,n)=>(a.assertZeroArgs(T,n),e.STDICT(n));r.STDICT=Ia;const Da=(I,T,n)=>(a.assertZeroArgs(T,n),e.SKIPDICT(n));r.SKIPDICT=Da;const Ea=(I,T,n)=>(a.assertZeroArgs(T,n),e.LDDICTS(n));r.LDDICTS=Ea;const sa=(I,T,n)=>(a.assertZeroArgs(T,n),e.PLDDICTS(n));r.PLDDICTS=sa;const Sa=(I,T,n)=>(a.assertZeroArgs(T,n),e.LDDICT(n));r.LDDICT=Sa;const Ra=(I,T,n)=>(a.assertZeroArgs(T,n),e.PLDDICT(n));r.PLDDICT=Ra;const ia=(I,T,n)=>(a.assertZeroArgs(T,n),e.LDDICTQ(n));r.LDDICTQ=ia;const oa=(I,T,n)=>(a.assertZeroArgs(T,n),e.PLDDICTQ(n));r.PLDDICTQ=oa;const La=(I,T,n)=>(a.assertZeroArgs(T,n),e.PFXDICTSET(n));r.PFXDICTSET=La;const ua=(I,T,n)=>(a.assertZeroArgs(T,n),e.PFXDICTREPLACE(n));r.PFXDICTREPLACE=ua;const Ca=(I,T,n)=>(a.assertZeroArgs(T,n),e.PFXDICTADD(n));r.PFXDICTADD=Ca;const Aa=(I,T,n)=>(a.assertZeroArgs(T,n),e.PFXDICTDEL(n));r.PFXDICTDEL=Aa;const Ma=(I,T,n)=>(a.assertZeroArgs(T,n),e.PFXDICTGETQ(n));r.PFXDICTGETQ=Ma;const ca=(I,T,n)=>(a.assertZeroArgs(T,n),e.PFXDICTGET(n));r.PFXDICTGET=ca;const Pa=(I,T,n)=>(a.assertZeroArgs(T,n),e.PFXDICTGETJMP(n));r.PFXDICTGETJMP=Pa;const Oa=(I,T,n)=>(a.assertZeroArgs(T,n),e.PFXDICTGETEXEC(n));r.PFXDICTGETEXEC=Oa;const da=(I,T,n)=>(a.assertZeroArgs(T,n),e.NOP(n));r.NOP=da;const Fa=(I,T,n)=>(a.assertZeroArgs(T,n),e.SWAP(n));r.SWAP=Fa;const ma=(I,T,n)=>(a.assertZeroArgs(T,n),e.DUP(n));r.DUP=ma;const ga=(I,T,n)=>(a.assertZeroArgs(T,n),e.OVER(n));r.OVER=ga;const Ua=(I,T,n)=>(a.assertZeroArgs(T,n),e.DROP(n));r.DROP=Ua;const la=(I,T,n)=>(a.assertZeroArgs(T,n),e.NIP(n));r.NIP=la;const Na=(I,T,n)=>(a.assertZeroArgs(T,n),e.ROT(n));r.ROT=Na;const Ha=(I,T,n)=>(a.assertZeroArgs(T,n),e.ROTREV(n));r.ROTREV=Ha;const Ga=(I,T,n)=>(a.assertZeroArgs(T,n),e.PICK(n));r.PICK=Ga;const Qa=(I,T,n)=>(a.assertZeroArgs(T,n),e.ROLL(n));r.ROLL=Qa;const _a=(I,T,n)=>(a.assertZeroArgs(T,n),e.ROLLREV(n));r.ROLLREV=_a;const Ba=(I,T,n)=>(a.assertZeroArgs(T,n),e.BLKSWX(n));r.BLKSWX=Ba;const fa=(I,T,n)=>(a.assertZeroArgs(T,n),e.REVX(n));r.REVX=fa;const Xa=(I,T,n)=>(a.assertZeroArgs(T,n),e.DROPX(n));r.DROPX=Xa;const Va=(I,T,n)=>(a.assertZeroArgs(T,n),e.TUCK(n));r.TUCK=Va;const $a=(I,T,n)=>(a.assertZeroArgs(T,n),e.XCHGX(n));r.XCHGX=$a;const Wa=(I,T,n)=>(a.assertZeroArgs(T,n),e.DEPTH(n));r.DEPTH=Wa;const Ka=(I,T,n)=>(a.assertZeroArgs(T,n),e.CHKDEPTH(n));r.CHKDEPTH=Ka;const Za=(I,T,n)=>(a.assertZeroArgs(T,n),e.ONLYTOPX(n));r.ONLYTOPX=Za;const ka=(I,T,n)=>(a.assertZeroArgs(T,n),e.ONLYX(n));r.ONLYX=ka;const ha=(I,T,n)=>(a.assertZeroArgs(T,n),e.ACCEPT(n));r.ACCEPT=ha;const ya=(I,T,n)=>(a.assertZeroArgs(T,n),e.SETGASLIMIT(n));r.SETGASLIMIT=ya;const wa=(I,T,n)=>(a.assertZeroArgs(T,n),e.GASCONSUMED(n));r.GASCONSUMED=wa;const pa=(I,T,n)=>(a.assertZeroArgs(T,n),e.COMMIT(n));r.COMMIT=pa;const Ya=(I,T,n)=>(a.assertZeroArgs(T,n),e.NOW(n));r.NOW=Ya;const ba=(I,T,n)=>(a.assertZeroArgs(T,n),e.BLOCKLT(n));r.BLOCKLT=ba;const Ja=(I,T,n)=>(a.assertZeroArgs(T,n),e.LTIME(n));r.LTIME=Ja;const va=(I,T,n)=>(a.assertZeroArgs(T,n),e.RANDSEED(n));r.RANDSEED=va;const ja=(I,T,n)=>(a.assertZeroArgs(T,n),e.BALANCE(n));r.BALANCE=ja;const za=(I,T,n)=>(a.assertZeroArgs(T,n),e.MYADDR(n));r.MYADDR=za;const qa=(I,T,n)=>(a.assertZeroArgs(T,n),e.CONFIGROOT(n));r.CONFIGROOT=qa;const xa=(I,T,n)=>(a.assertZeroArgs(T,n),e.MYCODE(n));r.MYCODE=xa;const eT=(I,T,n)=>(a.assertZeroArgs(T,n),e.INCOMINGVALUE(n));r.INCOMINGVALUE=eT;const rT=(I,T,n)=>(a.assertZeroArgs(T,n),e.STORAGEFEES(n));r.STORAGEFEES=rT;const nT=(I,T,n)=>(a.assertZeroArgs(T,n),e.PREVBLOCKSINFOTUPLE(n));r.PREVBLOCKSINFOTUPLE=nT;const tT=(I,T,n)=>(a.assertZeroArgs(T,n),e.UNPACKEDCONFIGTUPLE(n));r.UNPACKEDCONFIGTUPLE=tT;const aT=(I,T,n)=>(a.assertZeroArgs(T,n),e.DUEPAYMENT(n));r.DUEPAYMENT=aT;const TT=(I,T,n)=>(a.assertZeroArgs(T,n),e.CONFIGDICT(n));r.CONFIGDICT=TT;const IT=(I,T,n)=>(a.assertZeroArgs(T,n),e.CONFIGPARAM(n));r.CONFIGPARAM=IT;const DT=(I,T,n)=>(a.assertZeroArgs(T,n),e.CONFIGOPTPARAM(n));r.CONFIGOPTPARAM=DT;const ET=(I,T,n)=>(a.assertZeroArgs(T,n),e.PREVMCBLOCKS(n));r.PREVMCBLOCKS=ET;const sT=(I,T,n)=>(a.assertZeroArgs(T,n),e.PREVKEYBLOCK(n));r.PREVKEYBLOCK=sT;const ST=(I,T,n)=>(a.assertZeroArgs(T,n),e.PREVMCBLOCKS_100(n));r.PREVMCBLOCKS_100=ST;const RT=(I,T,n)=>(a.assertZeroArgs(T,n),e.GLOBALID(n));r.GLOBALID=RT;const iT=(I,T,n)=>(a.assertZeroArgs(T,n),e.GETGASFEE(n));r.GETGASFEE=iT;const oT=(I,T,n)=>(a.assertZeroArgs(T,n),e.GETSTORAGEFEE(n));r.GETSTORAGEFEE=oT;const LT=(I,T,n)=>(a.assertZeroArgs(T,n),e.GETFORWARDFEE(n));r.GETFORWARDFEE=LT;const uT=(I,T,n)=>(a.assertZeroArgs(T,n),e.GETPRECOMPILEDGAS(n));r.GETPRECOMPILEDGAS=uT;const CT=(I,T,n)=>(a.assertZeroArgs(T,n),e.GETORIGINALFWDFEE(n));r.GETORIGINALFWDFEE=CT;const AT=(I,T,n)=>(a.assertZeroArgs(T,n),e.GETGASFEESIMPLE(n));r.GETGASFEESIMPLE=AT;const MT=(I,T,n)=>(a.assertZeroArgs(T,n),e.GETFORWARDFEESIMPLE(n));r.GETFORWARDFEESIMPLE=MT;const cT=(I,T,n)=>(a.assertZeroArgs(T,n),e.GETGLOBVAR(n));r.GETGLOBVAR=cT;const PT=(I,T,n)=>(a.assertZeroArgs(T,n),e.SETGLOBVAR(n));r.SETGLOBVAR=PT;const OT=(I,T,n)=>(a.assertZeroArgs(T,n),e.RANDU256(n));r.RANDU256=OT;const dT=(I,T,n)=>(a.assertZeroArgs(T,n),e.RAND(n));r.RAND=dT;const FT=(I,T,n)=>(a.assertZeroArgs(T,n),e.SETRAND(n));r.SETRAND=FT;const mT=(I,T,n)=>(a.assertZeroArgs(T,n),e.ADDRAND(n));r.ADDRAND=mT;const gT=(I,T,n)=>(a.assertZeroArgs(T,n),e.HASHCU(n));r.HASHCU=gT;const UT=(I,T,n)=>(a.assertZeroArgs(T,n),e.HASHSU(n));r.HASHSU=UT;const lT=(I,T,n)=>(a.assertZeroArgs(T,n),e.SHA256U(n));r.SHA256U=lT;const NT=(I,T,n)=>(a.assertZeroArgs(T,n),e.CHKSIGNU(n));r.CHKSIGNU=NT;const HT=(I,T,n)=>(a.assertZeroArgs(T,n),e.CHKSIGNS(n));r.CHKSIGNS=HT;const GT=(I,T,n)=>(a.assertZeroArgs(T,n),e.ECRECOVER(n));r.ECRECOVER=GT;const QT=(I,T,n)=>(a.assertZeroArgs(T,n),e.SECP256K1_XONLY_PUBKEY_TWEAK_ADD(n));r.SECP256K1_XONLY_PUBKEY_TWEAK_ADD=QT;const _T=(I,T,n)=>(a.assertZeroArgs(T,n),e.P256_CHKSIGNU(n));r.P256_CHKSIGNU=_T;const BT=(I,T,n)=>(a.assertZeroArgs(T,n),e.P256_CHKSIGNS(n));r.P256_CHKSIGNS=BT;const fT=(I,T,n)=>(a.assertZeroArgs(T,n),e.RIST255_FROMHASH(n));r.RIST255_FROMHASH=fT;const XT=(I,T,n)=>(a.assertZeroArgs(T,n),e.RIST255_VALIDATE(n));r.RIST255_VALIDATE=XT;const VT=(I,T,n)=>(a.assertZeroArgs(T,n),e.RIST255_ADD(n));r.RIST255_ADD=VT;const $T=(I,T,n)=>(a.assertZeroArgs(T,n),e.RIST255_SUB(n));r.RIST255_SUB=$T;const WT=(I,T,n)=>(a.assertZeroArgs(T,n),e.RIST255_MUL(n));r.RIST255_MUL=WT;const KT=(I,T,n)=>(a.assertZeroArgs(T,n),e.RIST255_MULBASE(n));r.RIST255_MULBASE=KT;const ZT=(I,T,n)=>(a.assertZeroArgs(T,n),e.RIST255_PUSHL(n));r.RIST255_PUSHL=ZT;const kT=(I,T,n)=>(a.assertZeroArgs(T,n),e.RIST255_QVALIDATE(n));r.RIST255_QVALIDATE=kT;const hT=(I,T,n)=>(a.assertZeroArgs(T,n),e.RIST255_QADD(n));r.RIST255_QADD=hT;const yT=(I,T,n)=>(a.assertZeroArgs(T,n),e.RIST255_QSUB(n));r.RIST255_QSUB=yT;const wT=(I,T,n)=>(a.assertZeroArgs(T,n),e.RIST255_QMUL(n));r.RIST255_QMUL=wT;const pT=(I,T,n)=>(a.assertZeroArgs(T,n),e.RIST255_QMULBASE(n));r.RIST255_QMULBASE=pT;const YT=(I,T,n)=>(a.assertZeroArgs(T,n),e.BLS_VERIFY(n));r.BLS_VERIFY=YT;const bT=(I,T,n)=>(a.assertZeroArgs(T,n),e.BLS_AGGREGATE(n));r.BLS_AGGREGATE=bT;const JT=(I,T,n)=>(a.assertZeroArgs(T,n),e.BLS_FASTAGGREGATEVERIFY(n));r.BLS_FASTAGGREGATEVERIFY=JT;const vT=(I,T,n)=>(a.assertZeroArgs(T,n),e.BLS_AGGREGATEVERIFY(n));r.BLS_AGGREGATEVERIFY=vT;const jT=(I,T,n)=>(a.assertZeroArgs(T,n),e.BLS_G1_ADD(n));r.BLS_G1_ADD=jT;const zT=(I,T,n)=>(a.assertZeroArgs(T,n),e.BLS_G1_SUB(n));r.BLS_G1_SUB=zT;const qT=(I,T,n)=>(a.assertZeroArgs(T,n),e.BLS_G1_NEG(n));r.BLS_G1_NEG=qT;const xT=(I,T,n)=>(a.assertZeroArgs(T,n),e.BLS_G1_MUL(n));r.BLS_G1_MUL=xT;const eI=(I,T,n)=>(a.assertZeroArgs(T,n),e.BLS_G1_MULTIEXP(n));r.BLS_G1_MULTIEXP=eI;const rI=(I,T,n)=>(a.assertZeroArgs(T,n),e.BLS_G1_ZERO(n));r.BLS_G1_ZERO=rI;const nI=(I,T,n)=>(a.assertZeroArgs(T,n),e.BLS_MAP_TO_G1(n));r.BLS_MAP_TO_G1=nI;const tI=(I,T,n)=>(a.assertZeroArgs(T,n),e.BLS_G1_INGROUP(n));r.BLS_G1_INGROUP=tI;const aI=(I,T,n)=>(a.assertZeroArgs(T,n),e.BLS_G1_ISZERO(n));r.BLS_G1_ISZERO=aI;const TI=(I,T,n)=>(a.assertZeroArgs(T,n),e.BLS_G2_ADD(n));r.BLS_G2_ADD=TI;const II=(I,T,n)=>(a.assertZeroArgs(T,n),e.BLS_G2_SUB(n));r.BLS_G2_SUB=II;const DI=(I,T,n)=>(a.assertZeroArgs(T,n),e.BLS_G2_NEG(n));r.BLS_G2_NEG=DI;const EI=(I,T,n)=>(a.assertZeroArgs(T,n),e.BLS_G2_MUL(n));r.BLS_G2_MUL=EI;const sI=(I,T,n)=>(a.assertZeroArgs(T,n),e.BLS_G2_MULTIEXP(n));r.BLS_G2_MULTIEXP=sI;const SI=(I,T,n)=>(a.assertZeroArgs(T,n),e.BLS_G2_ZERO(n));r.BLS_G2_ZERO=SI;const RI=(I,T,n)=>(a.assertZeroArgs(T,n),e.BLS_MAP_TO_G2(n));r.BLS_MAP_TO_G2=RI;const iI=(I,T,n)=>(a.assertZeroArgs(T,n),e.BLS_G2_INGROUP(n));r.BLS_G2_INGROUP=iI;const oI=(I,T,n)=>(a.assertZeroArgs(T,n),e.BLS_G2_ISZERO(n));r.BLS_G2_ISZERO=oI;const LI=(I,T,n)=>(a.assertZeroArgs(T,n),e.BLS_PAIRING(n));r.BLS_PAIRING=LI;const uI=(I,T,n)=>(a.assertZeroArgs(T,n),e.BLS_PUSHR(n));r.BLS_PUSHR=uI;const CI=(I,T,n)=>(a.assertZeroArgs(T,n),e.CDATASIZEQ(n));r.CDATASIZEQ=CI;const AI=(I,T,n)=>(a.assertZeroArgs(T,n),e.CDATASIZE(n));r.CDATASIZE=AI;const MI=(I,T,n)=>(a.assertZeroArgs(T,n),e.SDATASIZEQ(n));r.SDATASIZEQ=MI;const cI=(I,T,n)=>(a.assertZeroArgs(T,n),e.SDATASIZE(n));r.SDATASIZE=cI;const PI=(I,T,n)=>(a.assertZeroArgs(T,n),e.LDGRAMS(n));r.LDGRAMS=PI;const OI=(I,T,n)=>(a.assertZeroArgs(T,n),e.LDVARINT16(n));r.LDVARINT16=OI;const dI=(I,T,n)=>(a.assertZeroArgs(T,n),e.STGRAMS(n));r.STGRAMS=dI;const FI=(I,T,n)=>(a.assertZeroArgs(T,n),e.STVARINT16(n));r.STVARINT16=FI;const mI=(I,T,n)=>(a.assertZeroArgs(T,n),e.LDVARUINT32(n));r.LDVARUINT32=mI;const gI=(I,T,n)=>(a.assertZeroArgs(T,n),e.LDVARINT32(n));r.LDVARINT32=gI;const UI=(I,T,n)=>(a.assertZeroArgs(T,n),e.STVARUINT32(n));r.STVARUINT32=UI;const lI=(I,T,n)=>(a.assertZeroArgs(T,n),e.STVARINT32(n));r.STVARINT32=lI;const NI=(I,T,n)=>(a.assertZeroArgs(T,n),e.LDMSGADDR(n));r.LDMSGADDR=NI;const HI=(I,T,n)=>(a.assertZeroArgs(T,n),e.LDMSGADDRQ(n));r.LDMSGADDRQ=HI;const GI=(I,T,n)=>(a.assertZeroArgs(T,n),e.PARSEMSGADDR(n));r.PARSEMSGADDR=GI;const QI=(I,T,n)=>(a.assertZeroArgs(T,n),e.PARSEMSGADDRQ(n));r.PARSEMSGADDRQ=QI;const _I=(I,T,n)=>(a.assertZeroArgs(T,n),e.REWRITESTDADDR(n));r.REWRITESTDADDR=_I;const BI=(I,T,n)=>(a.assertZeroArgs(T,n),e.REWRITESTDADDRQ(n));r.REWRITESTDADDRQ=BI;const fI=(I,T,n)=>(a.assertZeroArgs(T,n),e.REWRITEVARADDR(n));r.REWRITEVARADDR=fI;const XI=(I,T,n)=>(a.assertZeroArgs(T,n),e.REWRITEVARADDRQ(n));r.REWRITEVARADDRQ=XI;const VI=(I,T,n)=>(a.assertZeroArgs(T,n),e.SENDRAWMSG(n));r.SENDRAWMSG=VI;const $I=(I,T,n)=>(a.assertZeroArgs(T,n),e.RAWRESERVE(n));r.RAWRESERVE=$I;const WI=(I,T,n)=>(a.assertZeroArgs(T,n),e.RAWRESERVEX(n));r.RAWRESERVEX=WI;const KI=(I,T,n)=>(a.assertZeroArgs(T,n),e.SETCODE(n));r.SETCODE=KI;const ZI=(I,T,n)=>(a.assertZeroArgs(T,n),e.SETLIBCODE(n));r.SETLIBCODE=ZI;const kI=(I,T,n)=>(a.assertZeroArgs(T,n),e.CHANGELIB(n));r.CHANGELIB=kI;const hI=(I,T,n)=>(a.assertZeroArgs(T,n),e.SENDMSG(n));r.SENDMSG=hI;const yI=(I,T,n)=>(a.assertZeroArgs(T,n),e.PUSHNULL(n));r.PUSHNULL=yI;const wI=(I,T,n)=>(a.assertZeroArgs(T,n),e.ISNULL(n));r.ISNULL=wI;const pI=(I,T,n)=>(a.assertZeroArgs(T,n),e.TUPLEVAR(n));r.TUPLEVAR=pI;const YI=(I,T,n)=>(a.assertZeroArgs(T,n),e.INDEXVAR(n));r.INDEXVAR=YI;const bI=(I,T,n)=>(a.assertZeroArgs(T,n),e.UNTUPLEVAR(n));r.UNTUPLEVAR=bI;const JI=(I,T,n)=>(a.assertZeroArgs(T,n),e.UNPACKFIRSTVAR(n));r.UNPACKFIRSTVAR=JI;const vI=(I,T,n)=>(a.assertZeroArgs(T,n),e.EXPLODEVAR(n));r.EXPLODEVAR=vI;const jI=(I,T,n)=>(a.assertZeroArgs(T,n),e.SETINDEXVAR(n));r.SETINDEXVAR=jI;const zI=(I,T,n)=>(a.assertZeroArgs(T,n),e.INDEXVARQ(n));r.INDEXVARQ=zI;const qI=(I,T,n)=>(a.assertZeroArgs(T,n),e.SETINDEXVARQ(n));r.SETINDEXVARQ=qI;const xI=(I,T,n)=>(a.assertZeroArgs(T,n),e.TLEN(n));r.TLEN=xI;const eD=(I,T,n)=>(a.assertZeroArgs(T,n),e.QTLEN(n));r.QTLEN=eD;const rD=(I,T,n)=>(a.assertZeroArgs(T,n),e.ISTUPLE(n));r.ISTUPLE=rD;const nD=(I,T,n)=>(a.assertZeroArgs(T,n),e.LAST(n));r.LAST=nD;const tD=(I,T,n)=>(a.assertZeroArgs(T,n),e.TPUSH(n));r.TPUSH=tD;const aD=(I,T,n)=>(a.assertZeroArgs(T,n),e.TPOP(n));r.TPOP=aD;const TD=(I,T,n)=>(a.assertZeroArgs(T,n),e.NULLSWAPIF(n));r.NULLSWAPIF=TD;const ID=(I,T,n)=>(a.assertZeroArgs(T,n),e.NULLSWAPIFNOT(n));r.NULLSWAPIFNOT=ID;const DD=(I,T,n)=>(a.assertZeroArgs(T,n),e.NULLROTRIF(n));r.NULLROTRIF=DD;const ED=(I,T,n)=>(a.assertZeroArgs(T,n),e.NULLROTRIFNOT(n));r.NULLROTRIFNOT=ED;const sD=(I,T,n)=>(a.assertZeroArgs(T,n),e.NULLSWAPIF2(n));r.NULLSWAPIF2=sD;const SD=(I,T,n)=>(a.assertZeroArgs(T,n),e.NULLSWAPIFNOT2(n));r.NULLSWAPIFNOT2=SD;const RD=(I,T,n)=>(a.assertZeroArgs(T,n),e.NULLROTRIF2(n));r.NULLROTRIF2=RD;const iD=(I,T,n)=>(a.assertZeroArgs(T,n),e.NULLROTRIFNOT2(n));r.NULLROTRIFNOT2=iD;const oD=(I,T,n)=>(a.assertZeroArgs(T,n),e.ADDDIVMOD(n));r.ADDDIVMOD=oD;const LD=(I,T,n)=>(a.assertZeroArgs(T,n),e.ADDDIVMODR(n));r.ADDDIVMODR=LD;const uD=(I,T,n)=>(a.assertZeroArgs(T,n),e.ADDDIVMODC(n));r.ADDDIVMODC=uD;const CD=(I,T,n)=>(a.assertZeroArgs(T,n),e.DIV(n));r.DIV=CD;const AD=(I,T,n)=>(a.assertZeroArgs(T,n),e.DIVR(n));r.DIVR=AD;const MD=(I,T,n)=>(a.assertZeroArgs(T,n),e.DIVC(n));r.DIVC=MD;const cD=(I,T,n)=>(a.assertZeroArgs(T,n),e.MOD(n));r.MOD=cD;const PD=(I,T,n)=>(a.assertZeroArgs(T,n),e.MODR(n));r.MODR=PD;const OD=(I,T,n)=>(a.assertZeroArgs(T,n),e.MODC(n));r.MODC=OD;const dD=(I,T,n)=>(a.assertZeroArgs(T,n),e.DIVMOD(n));r.DIVMOD=dD;const FD=(I,T,n)=>(a.assertZeroArgs(T,n),e.DIVMODR(n));r.DIVMODR=FD;const mD=(I,T,n)=>(a.assertZeroArgs(T,n),e.DIVMODC(n));r.DIVMODC=mD;const gD=(I,T,n)=>(a.assertZeroArgs(T,n),e.QADDDIVMOD(n));r.QADDDIVMOD=gD;const UD=(I,T,n)=>(a.assertZeroArgs(T,n),e.QADDDIVMODR(n));r.QADDDIVMODR=UD;const lD=(I,T,n)=>(a.assertZeroArgs(T,n),e.QADDDIVMODC(n));r.QADDDIVMODC=lD;const ND=(I,T,n)=>(a.assertZeroArgs(T,n),e.QDIV(n));r.QDIV=ND;const HD=(I,T,n)=>(a.assertZeroArgs(T,n),e.QDIVR(n));r.QDIVR=HD;const GD=(I,T,n)=>(a.assertZeroArgs(T,n),e.QDIVC(n));r.QDIVC=GD;const QD=(I,T,n)=>(a.assertZeroArgs(T,n),e.QMOD(n));r.QMOD=QD;const _D=(I,T,n)=>(a.assertZeroArgs(T,n),e.QMODR(n));r.QMODR=_D;const BD=(I,T,n)=>(a.assertZeroArgs(T,n),e.QMODC(n));r.QMODC=BD;const fD=(I,T,n)=>(a.assertZeroArgs(T,n),e.QDIVMOD(n));r.QDIVMOD=fD;const XD=(I,T,n)=>(a.assertZeroArgs(T,n),e.QDIVMODR(n));r.QDIVMODR=XD;const VD=(I,T,n)=>(a.assertZeroArgs(T,n),e.QDIVMODC(n));r.QDIVMODC=VD;const $D=(I,T,n)=>(a.assertZeroArgs(T,n),e.ADDRSHIFTMOD(n));r.ADDRSHIFTMOD=$D;const WD=(I,T,n)=>(a.assertZeroArgs(T,n),e.ADDRSHIFTMODR(n));r.ADDRSHIFTMODR=WD;const KD=(I,T,n)=>(a.assertZeroArgs(T,n),e.ADDRSHIFTMODC(n));r.ADDRSHIFTMODC=KD;const ZD=(I,T,n)=>(a.assertZeroArgs(T,n),e.RSHIFTR(n));r.RSHIFTR=ZD;const kD=(I,T,n)=>(a.assertZeroArgs(T,n),e.RSHIFTC(n));r.RSHIFTC=kD;const hD=(I,T,n)=>(a.assertZeroArgs(T,n),e.MODPOW2(n));r.MODPOW2=hD;const yD=(I,T,n)=>(a.assertZeroArgs(T,n),e.MODPOW2R(n));r.MODPOW2R=yD;const wD=(I,T,n)=>(a.assertZeroArgs(T,n),e.MODPOW2C(n));r.MODPOW2C=wD;const pD=(I,T,n)=>(a.assertZeroArgs(T,n),e.RSHIFTMOD(n));r.RSHIFTMOD=pD;const YD=(I,T,n)=>(a.assertZeroArgs(T,n),e.RSHIFTMODR(n));r.RSHIFTMODR=YD;const bD=(I,T,n)=>(a.assertZeroArgs(T,n),e.RSHIFTMODC(n));r.RSHIFTMODC=bD;const JD=(I,T,n)=>(a.assertZeroArgs(T,n),e.QADDRSHIFTMOD(n));r.QADDRSHIFTMOD=JD;const vD=(I,T,n)=>(a.assertZeroArgs(T,n),e.QADDRSHIFTMODR(n));r.QADDRSHIFTMODR=vD;const jD=(I,T,n)=>(a.assertZeroArgs(T,n),e.QADDRSHIFTMODC(n));r.QADDRSHIFTMODC=jD;const zD=(I,T,n)=>(a.assertZeroArgs(T,n),e.QRSHIFTR(n));r.QRSHIFTR=zD;const qD=(I,T,n)=>(a.assertZeroArgs(T,n),e.QRSHIFTC(n));r.QRSHIFTC=qD;const xD=(I,T,n)=>(a.assertZeroArgs(T,n),e.QMODPOW2(n));r.QMODPOW2=xD;const eE=(I,T,n)=>(a.assertZeroArgs(T,n),e.QMODPOW2R(n));r.QMODPOW2R=eE;const rE=(I,T,n)=>(a.assertZeroArgs(T,n),e.QMODPOW2C(n));r.QMODPOW2C=rE;const nE=(I,T,n)=>(a.assertZeroArgs(T,n),e.QRSHIFTMOD(n));r.QRSHIFTMOD=nE;const tE=(I,T,n)=>(a.assertZeroArgs(T,n),e.QRSHIFTMODR(n));r.QRSHIFTMODR=tE;const aE=(I,T,n)=>(a.assertZeroArgs(T,n),e.QRSHIFTMODC(n));r.QRSHIFTMODC=aE;const TE=(I,T,n)=>(a.assertZeroArgs(T,n),e.MULADDDIVMOD(n));r.MULADDDIVMOD=TE;const IE=(I,T,n)=>(a.assertZeroArgs(T,n),e.MULADDDIVMODR(n));r.MULADDDIVMODR=IE;const DE=(I,T,n)=>(a.assertZeroArgs(T,n),e.MULADDDIVMODC(n));r.MULADDDIVMODC=DE;const EE=(I,T,n)=>(a.assertZeroArgs(T,n),e.MULDIV(n));r.MULDIV=EE;const sE=(I,T,n)=>(a.assertZeroArgs(T,n),e.MULDIVR(n));r.MULDIVR=sE;const SE=(I,T,n)=>(a.assertZeroArgs(T,n),e.MULDIVC(n));r.MULDIVC=SE;const RE=(I,T,n)=>(a.assertZeroArgs(T,n),e.MULMOD(n));r.MULMOD=RE;const iE=(I,T,n)=>(a.assertZeroArgs(T,n),e.MULMODR(n));r.MULMODR=iE;const oE=(I,T,n)=>(a.assertZeroArgs(T,n),e.MULMODC(n));r.MULMODC=oE;const LE=(I,T,n)=>(a.assertZeroArgs(T,n),e.MULDIVMOD(n));r.MULDIVMOD=LE;const uE=(I,T,n)=>(a.assertZeroArgs(T,n),e.MULDIVMODR(n));r.MULDIVMODR=uE;const CE=(I,T,n)=>(a.assertZeroArgs(T,n),e.MULDIVMODC(n));r.MULDIVMODC=CE;const AE=(I,T,n)=>(a.assertZeroArgs(T,n),e.QMULADDDIVMOD(n));r.QMULADDDIVMOD=AE;const ME=(I,T,n)=>(a.assertZeroArgs(T,n),e.QMULADDDIVMODR(n));r.QMULADDDIVMODR=ME;const cE=(I,T,n)=>(a.assertZeroArgs(T,n),e.QMULADDDIVMODC(n));r.QMULADDDIVMODC=cE;const PE=(I,T,n)=>(a.assertZeroArgs(T,n),e.QMULDIV(n));r.QMULDIV=PE;const OE=(I,T,n)=>(a.assertZeroArgs(T,n),e.QMULDIVR(n));r.QMULDIVR=OE;const dE=(I,T,n)=>(a.assertZeroArgs(T,n),e.QMULDIVC(n));r.QMULDIVC=dE;const FE=(I,T,n)=>(a.assertZeroArgs(T,n),e.QMULMOD(n));r.QMULMOD=FE;const mE=(I,T,n)=>(a.assertZeroArgs(T,n),e.QMULMODR(n));r.QMULMODR=mE;const gE=(I,T,n)=>(a.assertZeroArgs(T,n),e.QMULMODC(n));r.QMULMODC=gE;const UE=(I,T,n)=>(a.assertZeroArgs(T,n),e.QMULDIVMOD(n));r.QMULDIVMOD=UE;const lE=(I,T,n)=>(a.assertZeroArgs(T,n),e.QMULDIVMODR(n));r.QMULDIVMODR=lE;const NE=(I,T,n)=>(a.assertZeroArgs(T,n),e.QMULDIVMODC(n));r.QMULDIVMODC=NE;const HE=(I,T,n)=>(a.assertZeroArgs(T,n),e.MULADDRSHIFTMOD(n));r.MULADDRSHIFTMOD=HE;const GE=(I,T,n)=>(a.assertZeroArgs(T,n),e.MULADDRSHIFTRMOD(n));r.MULADDRSHIFTRMOD=GE;const QE=(I,T,n)=>(a.assertZeroArgs(T,n),e.MULADDRSHIFTCMOD(n));r.MULADDRSHIFTCMOD=QE;const _E=(I,T,n)=>(a.assertZeroArgs(T,n),e.MULRSHIFT(n));r.MULRSHIFT=_E;const BE=(I,T,n)=>(a.assertZeroArgs(T,n),e.MULRSHIFTR(n));r.MULRSHIFTR=BE;const fE=(I,T,n)=>(a.assertZeroArgs(T,n),e.MULRSHIFTC(n));r.MULRSHIFTC=fE;const XE=(I,T,n)=>(a.assertZeroArgs(T,n),e.MULMODPOW2(n));r.MULMODPOW2=XE;const VE=(I,T,n)=>(a.assertZeroArgs(T,n),e.MULMODPOW2R(n));r.MULMODPOW2R=VE;const $E=(I,T,n)=>(a.assertZeroArgs(T,n),e.MULMODPOW2C(n));r.MULMODPOW2C=$E;const WE=(I,T,n)=>(a.assertZeroArgs(T,n),e.MULRSHIFTMOD(n));r.MULRSHIFTMOD=WE;const KE=(I,T,n)=>(a.assertZeroArgs(T,n),e.MULRSHIFTRMOD(n));r.MULRSHIFTRMOD=KE;const ZE=(I,T,n)=>(a.assertZeroArgs(T,n),e.MULRSHIFTCMOD(n));r.MULRSHIFTCMOD=ZE;const kE=(I,T,n)=>(a.assertZeroArgs(T,n),e.QMULADDRSHIFTMOD(n));r.QMULADDRSHIFTMOD=kE;const hE=(I,T,n)=>(a.assertZeroArgs(T,n),e.QMULADDRSHIFTRMOD(n));r.QMULADDRSHIFTRMOD=hE;const yE=(I,T,n)=>(a.assertZeroArgs(T,n),e.QMULADDRSHIFTCMOD(n));r.QMULADDRSHIFTCMOD=yE;const wE=(I,T,n)=>(a.assertZeroArgs(T,n),e.QMULRSHIFT(n));r.QMULRSHIFT=wE;const pE=(I,T,n)=>(a.assertZeroArgs(T,n),e.QMULRSHIFTR(n));r.QMULRSHIFTR=pE;const YE=(I,T,n)=>(a.assertZeroArgs(T,n),e.QMULRSHIFTC(n));r.QMULRSHIFTC=YE;const bE=(I,T,n)=>(a.assertZeroArgs(T,n),e.QMULMODPOW2(n));r.QMULMODPOW2=bE;const JE=(I,T,n)=>(a.assertZeroArgs(T,n),e.QMULMODPOW2R(n));r.QMULMODPOW2R=JE;const vE=(I,T,n)=>(a.assertZeroArgs(T,n),e.QMULMODPOW2C(n));r.QMULMODPOW2C=vE;const jE=(I,T,n)=>(a.assertZeroArgs(T,n),e.QMULRSHIFTMOD(n));r.QMULRSHIFTMOD=jE;const zE=(I,T,n)=>(a.assertZeroArgs(T,n),e.QMULRSHIFTRMOD(n));r.QMULRSHIFTRMOD=zE;const qE=(I,T,n)=>(a.assertZeroArgs(T,n),e.QMULRSHIFTCMOD(n));r.QMULRSHIFTCMOD=qE;const xE=(I,T,n)=>(a.assertZeroArgs(T,n),e.LSHIFTADDDIVMOD(n));r.LSHIFTADDDIVMOD=xE;const es=(I,T,n)=>(a.assertZeroArgs(T,n),e.LSHIFTADDDIVMODR(n));r.LSHIFTADDDIVMODR=es;const rs=(I,T,n)=>(a.assertZeroArgs(T,n),e.LSHIFTADDDIVMODC(n));r.LSHIFTADDDIVMODC=rs;const ns=(I,T,n)=>(a.assertZeroArgs(T,n),e.LSHIFTDIV(n));r.LSHIFTDIV=ns;const ts=(I,T,n)=>(a.assertZeroArgs(T,n),e.LSHIFTDIVR(n));r.LSHIFTDIVR=ts;const as=(I,T,n)=>(a.assertZeroArgs(T,n),e.LSHIFTDIVC(n));r.LSHIFTDIVC=as;const Ts=(I,T,n)=>(a.assertZeroArgs(T,n),e.LSHIFTMOD(n));r.LSHIFTMOD=Ts;const Is=(I,T,n)=>(a.assertZeroArgs(T,n),e.LSHIFTMODR(n));r.LSHIFTMODR=Is;const Ds=(I,T,n)=>(a.assertZeroArgs(T,n),e.LSHIFTMODC(n));r.LSHIFTMODC=Ds;const Es=(I,T,n)=>(a.assertZeroArgs(T,n),e.LSHIFTDIVMOD(n));r.LSHIFTDIVMOD=Es;const ss=(I,T,n)=>(a.assertZeroArgs(T,n),e.LSHIFTDIVMODR(n));r.LSHIFTDIVMODR=ss;const Ss=(I,T,n)=>(a.assertZeroArgs(T,n),e.LSHIFTDIVMODC(n));r.LSHIFTDIVMODC=Ss;const Rs=(I,T,n)=>(a.assertZeroArgs(T,n),e.QLSHIFTADDDIVMOD(n));r.QLSHIFTADDDIVMOD=Rs;const is=(I,T,n)=>(a.assertZeroArgs(T,n),e.QLSHIFTADDDIVMODR(n));r.QLSHIFTADDDIVMODR=is;const os=(I,T,n)=>(a.assertZeroArgs(T,n),e.QLSHIFTADDDIVMODC(n));r.QLSHIFTADDDIVMODC=os;const Ls=(I,T,n)=>(a.assertZeroArgs(T,n),e.QLSHIFTDIV(n));r.QLSHIFTDIV=Ls;const us=(I,T,n)=>(a.assertZeroArgs(T,n),e.QLSHIFTDIVR(n));r.QLSHIFTDIVR=us;const Cs=(I,T,n)=>(a.assertZeroArgs(T,n),e.QLSHIFTDIVC(n));r.QLSHIFTDIVC=Cs;const As=(I,T,n)=>(a.assertZeroArgs(T,n),e.QLSHIFTMOD(n));r.QLSHIFTMOD=As;const Ms=(I,T,n)=>(a.assertZeroArgs(T,n),e.QLSHIFTMODR(n));r.QLSHIFTMODR=Ms;const cs=(I,T,n)=>(a.assertZeroArgs(T,n),e.QLSHIFTMODC(n));r.QLSHIFTMODC=cs;const Ps=(I,T,n)=>(a.assertZeroArgs(T,n),e.QLSHIFTDIVMOD(n));r.QLSHIFTDIVMOD=Ps;const Os=(I,T,n)=>(a.assertZeroArgs(T,n),e.QLSHIFTDIVMODR(n));r.QLSHIFTDIVMODR=Os;const ds=(I,T,n)=>(a.assertZeroArgs(T,n),e.QLSHIFTDIVMODC(n));r.QLSHIFTDIVMODC=ds;const Fs=(I,T,n)=>(a.assertZeroArgs(T,n),e.STIX(n));r.STIX=Fs;const ms=(I,T,n)=>(a.assertZeroArgs(T,n),e.STUX(n));r.STUX=ms;const gs=(I,T,n)=>(a.assertZeroArgs(T,n),e.STIXR(n));r.STIXR=gs;const Us=(I,T,n)=>(a.assertZeroArgs(T,n),e.STUXR(n));r.STUXR=Us;const ls=(I,T,n)=>(a.assertZeroArgs(T,n),e.STIXQ(n));r.STIXQ=ls;const Ns=(I,T,n)=>(a.assertZeroArgs(T,n),e.STUXQ(n));r.STUXQ=Ns;const Hs=(I,T,n)=>(a.assertZeroArgs(T,n),e.STIXRQ(n));r.STIXRQ=Hs;const Gs=(I,T,n)=>(a.assertZeroArgs(T,n),e.STUXRQ(n));r.STUXRQ=Gs;const Qs=(I,T,n)=>(a.assertZeroArgs(T,n),e.STILE4(n));r.STILE4=Qs;const _s=(I,T,n)=>(a.assertZeroArgs(T,n),e.STULE4(n));r.STULE4=_s;const Bs=(I,T,n)=>(a.assertZeroArgs(T,n),e.STILE8(n));r.STILE8=Bs;const fs=(I,T,n)=>(a.assertZeroArgs(T,n),e.STULE8(n));r.STULE8=fs;const Xs=(I,T,n)=>(a.assertZeroArgs(T,n),e.LDIX(n));r.LDIX=Xs;const Vs=(I,T,n)=>(a.assertZeroArgs(T,n),e.LDUX(n));r.LDUX=Vs;const $s=(I,T,n)=>(a.assertZeroArgs(T,n),e.PLDIX(n));r.PLDIX=$s;const Ws=(I,T,n)=>(a.assertZeroArgs(T,n),e.PLDUX(n));r.PLDUX=Ws;const Ks=(I,T,n)=>(a.assertZeroArgs(T,n),e.LDIXQ(n));r.LDIXQ=Ks;const Zs=(I,T,n)=>(a.assertZeroArgs(T,n),e.LDUXQ(n));r.LDUXQ=Zs;const ks=(I,T,n)=>(a.assertZeroArgs(T,n),e.PLDIXQ(n));r.PLDIXQ=ks;const hs=(I,T,n)=>(a.assertZeroArgs(T,n),e.PLDUXQ(n));r.PLDUXQ=hs;const ys=(I,T,n)=>(a.assertZeroArgs(T,n),e.LDSLICEX(n));r.LDSLICEX=ys;const ws=(I,T,n)=>(a.assertZeroArgs(T,n),e.PLDSLICEX(n));r.PLDSLICEX=ws;const ps=(I,T,n)=>(a.assertZeroArgs(T,n),e.LDSLICEXQ(n));r.LDSLICEXQ=ps;const Ys=(I,T,n)=>(a.assertZeroArgs(T,n),e.PLDSLICEXQ(n));r.PLDSLICEXQ=Ys;const bs=(I,T,n)=>(a.assertZeroArgs(T,n),e.LDILE4(n));r.LDILE4=bs;const Js=(I,T,n)=>(a.assertZeroArgs(T,n),e.LDULE4(n));r.LDULE4=Js;const vs=(I,T,n)=>(a.assertZeroArgs(T,n),e.LDILE8(n));r.LDILE8=vs;const js=(I,T,n)=>(a.assertZeroArgs(T,n),e.LDULE8(n));r.LDULE8=js;const zs=(I,T,n)=>(a.assertZeroArgs(T,n),e.PLDILE4(n));r.PLDILE4=zs;const qs=(I,T,n)=>(a.assertZeroArgs(T,n),e.PLDULE4(n));r.PLDULE4=qs;const xs=(I,T,n)=>(a.assertZeroArgs(T,n),e.PLDILE8(n));r.PLDILE8=xs;const eS=(I,T,n)=>(a.assertZeroArgs(T,n),e.PLDULE8(n));r.PLDULE8=eS;const rS=(I,T,n)=>(a.assertZeroArgs(T,n),e.LDILE4Q(n));r.LDILE4Q=rS;const nS=(I,T,n)=>(a.assertZeroArgs(T,n),e.LDULE4Q(n));r.LDULE4Q=nS;const tS=(I,T,n)=>(a.assertZeroArgs(T,n),e.LDILE8Q(n));r.LDILE8Q=tS;const aS=(I,T,n)=>(a.assertZeroArgs(T,n),e.LDULE8Q(n));r.LDULE8Q=aS;const TS=(I,T,n)=>(a.assertZeroArgs(T,n),e.PLDILE4Q(n));r.PLDILE4Q=TS;const IS=(I,T,n)=>(a.assertZeroArgs(T,n),e.PLDULE4Q(n));r.PLDULE4Q=IS;const DS=(I,T,n)=>(a.assertZeroArgs(T,n),e.PLDILE8Q(n));r.PLDILE8Q=DS;const ES=(I,T,n)=>(a.assertZeroArgs(T,n),e.PLDULE8Q(n));r.PLDULE8Q=ES;const sS=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTIGETJMP(n));r.DICTIGETJMP=sS;const SS=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTUGETJMP(n));r.DICTUGETJMP=SS;const RS=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTIGETEXEC(n));r.DICTIGETEXEC=RS;const iS=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTUGETEXEC(n));r.DICTUGETEXEC=iS;const oS=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTIGETJMPZ(n));r.DICTIGETJMPZ=oS;const LS=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTUGETJMPZ(n));r.DICTUGETJMPZ=LS;const uS=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTIGETEXECZ(n));r.DICTIGETEXECZ=uS;const CS=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTUGETEXECZ(n));r.DICTUGETEXECZ=CS;const AS=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTGET(n));r.DICTGET=AS;const MS=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTGETREF(n));r.DICTGETREF=MS;const cS=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTIGET(n));r.DICTIGET=cS;const PS=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTIGETREF(n));r.DICTIGETREF=PS;const OS=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTUGET(n));r.DICTUGET=OS;const dS=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTUGETREF(n));r.DICTUGETREF=dS;const FS=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTSET(n));r.DICTSET=FS;const mS=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTSETREF(n));r.DICTSETREF=mS;const gS=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTISET(n));r.DICTISET=gS;const US=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTISETREF(n));r.DICTISETREF=US;const lS=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTUSET(n));r.DICTUSET=lS;const NS=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTUSETREF(n));r.DICTUSETREF=NS;const HS=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTSETGET(n));r.DICTSETGET=HS;const GS=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTSETGETREF(n));r.DICTSETGETREF=GS;const QS=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTISETGET(n));r.DICTISETGET=QS;const _S=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTISETGETREF(n));r.DICTISETGETREF=_S;const BS=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTUSETGET(n));r.DICTUSETGET=BS;const fS=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTUSETGETREF(n));r.DICTUSETGETREF=fS;const XS=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTREPLACE(n));r.DICTREPLACE=XS;const VS=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTREPLACEREF(n));r.DICTREPLACEREF=VS;const $S=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTIREPLACE(n));r.DICTIREPLACE=$S;const WS=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTIREPLACEREF(n));r.DICTIREPLACEREF=WS;const KS=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTUREPLACE(n));r.DICTUREPLACE=KS;const ZS=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTUREPLACEREF(n));r.DICTUREPLACEREF=ZS;const kS=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTREPLACEGET(n));r.DICTREPLACEGET=kS;const hS=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTREPLACEGETREF(n));r.DICTREPLACEGETREF=hS;const yS=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTIREPLACEGET(n));r.DICTIREPLACEGET=yS;const wS=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTIREPLACEGETREF(n));r.DICTIREPLACEGETREF=wS;const pS=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTUREPLACEGET(n));r.DICTUREPLACEGET=pS;const YS=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTUREPLACEGETREF(n));r.DICTUREPLACEGETREF=YS;const bS=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTADD(n));r.DICTADD=bS;const JS=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTADDREF(n));r.DICTADDREF=JS;const vS=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTIADD(n));r.DICTIADD=vS;const jS=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTIADDREF(n));r.DICTIADDREF=jS;const zS=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTUADD(n));r.DICTUADD=zS;const qS=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTUADDREF(n));r.DICTUADDREF=qS;const xS=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTADDGET(n));r.DICTADDGET=xS;const eR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTADDGETREF(n));r.DICTADDGETREF=eR;const rR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTIADDGET(n));r.DICTIADDGET=rR;const nR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTIADDGETREF(n));r.DICTIADDGETREF=nR;const tR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTUADDGET(n));r.DICTUADDGET=tR;const aR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTUADDGETREF(n));r.DICTUADDGETREF=aR;const TR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTDELGET(n));r.DICTDELGET=TR;const IR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTDELGETREF(n));r.DICTDELGETREF=IR;const DR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTIDELGET(n));r.DICTIDELGET=DR;const ER=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTIDELGETREF(n));r.DICTIDELGETREF=ER;const sR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTUDELGET(n));r.DICTUDELGET=sR;const SR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTUDELGETREF(n));r.DICTUDELGETREF=SR;const RR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTMIN(n));r.DICTMIN=RR;const iR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTMINREF(n));r.DICTMINREF=iR;const oR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTIMIN(n));r.DICTIMIN=oR;const LR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTIMINREF(n));r.DICTIMINREF=LR;const uR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTUMIN(n));r.DICTUMIN=uR;const CR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTUMINREF(n));r.DICTUMINREF=CR;const AR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTMAX(n));r.DICTMAX=AR;const MR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTMAXREF(n));r.DICTMAXREF=MR;const cR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTIMAX(n));r.DICTIMAX=cR;const PR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTIMAXREF(n));r.DICTIMAXREF=PR;const OR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTUMAX(n));r.DICTUMAX=OR;const dR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTUMAXREF(n));r.DICTUMAXREF=dR;const FR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTREMMIN(n));r.DICTREMMIN=FR;const mR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTREMMINREF(n));r.DICTREMMINREF=mR;const gR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTIREMMIN(n));r.DICTIREMMIN=gR;const UR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTIREMMINREF(n));r.DICTIREMMINREF=UR;const lR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTUREMMIN(n));r.DICTUREMMIN=lR;const NR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTUREMMINREF(n));r.DICTUREMMINREF=NR;const HR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTREMMAX(n));r.DICTREMMAX=HR;const GR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTREMMAXREF(n));r.DICTREMMAXREF=GR;const QR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTIREMMAX(n));r.DICTIREMMAX=QR;const _R=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTIREMMAXREF(n));r.DICTIREMMAXREF=_R;const BR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTUREMMAX(n));r.DICTUREMMAX=BR;const fR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTUREMMAXREF(n));r.DICTUREMMAXREF=fR;const XR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTSETB(n));r.DICTSETB=XR;const VR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTISETB(n));r.DICTISETB=VR;const $R=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTUSETB(n));r.DICTUSETB=$R;const WR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTSETGETB(n));r.DICTSETGETB=WR;const KR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTISETGETB(n));r.DICTISETGETB=KR;const ZR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTUSETGETB(n));r.DICTUSETGETB=ZR;const kR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTREPLACEB(n));r.DICTREPLACEB=kR;const hR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTIREPLACEB(n));r.DICTIREPLACEB=hR;const yR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTUREPLACEB(n));r.DICTUREPLACEB=yR;const wR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTREPLACEGETB(n));r.DICTREPLACEGETB=wR;const pR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTIREPLACEGETB(n));r.DICTIREPLACEGETB=pR;const YR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTUREPLACEGETB(n));r.DICTUREPLACEGETB=YR;const bR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTADDB(n));r.DICTADDB=bR;const JR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTIADDB(n));r.DICTIADDB=JR;const vR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTUADDB(n));r.DICTUADDB=vR;const jR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTADDGETB(n));r.DICTADDGETB=jR;const zR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTIADDGETB(n));r.DICTIADDGETB=zR;const qR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTUADDGETB(n));r.DICTUADDGETB=qR;const xR=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTDEL(n));r.DICTDEL=xR;const ei=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTIDEL(n));r.DICTIDEL=ei;const ri=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTUDEL(n));r.DICTUDEL=ri;const ni=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTGETOPTREF(n));r.DICTGETOPTREF=ni;const ti=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTIGETOPTREF(n));r.DICTIGETOPTREF=ti;const ai=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTUGETOPTREF(n));r.DICTUGETOPTREF=ai;const Ti=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTSETGETOPTREF(n));r.DICTSETGETOPTREF=Ti;const Ii=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTISETGETOPTREF(n));r.DICTISETGETOPTREF=Ii;const Di=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTUSETGETOPTREF(n));r.DICTUSETGETOPTREF=Di;const Ei=(I,T,n)=>(a.assertZeroArgs(T,n),e.SUBDICTGET(n));r.SUBDICTGET=Ei;const si=(I,T,n)=>(a.assertZeroArgs(T,n),e.SUBDICTIGET(n));r.SUBDICTIGET=si;const Si=(I,T,n)=>(a.assertZeroArgs(T,n),e.SUBDICTUGET(n));r.SUBDICTUGET=Si;const Ri=(I,T,n)=>(a.assertZeroArgs(T,n),e.SUBDICTRPGET(n));r.SUBDICTRPGET=Ri;const ii=(I,T,n)=>(a.assertZeroArgs(T,n),e.SUBDICTIRPGET(n));r.SUBDICTIRPGET=ii;const oi=(I,T,n)=>(a.assertZeroArgs(T,n),e.SUBDICTURPGET(n));r.SUBDICTURPGET=oi;const Li=(I,T,n)=>(a.assertZeroArgs(T,n),e.THROWANY(n));r.THROWANY=Li;const ui=(I,T,n)=>(a.assertZeroArgs(T,n),e.THROWARGANY(n));r.THROWARGANY=ui;const Ci=(I,T,n)=>(a.assertZeroArgs(T,n),e.THROWANYIFNOT(n));r.THROWANYIFNOT=Ci;const Ai=(I,T,n)=>(a.assertZeroArgs(T,n),e.THROWARGANYIFNOT(n));r.THROWARGANYIFNOT=Ai;const Mi=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTGETNEXT(n));r.DICTGETNEXT=Mi;const ci=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTGETNEXTEQ(n));r.DICTGETNEXTEQ=ci;const Pi=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTGETPREV(n));r.DICTGETPREV=Pi;const Oi=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTGETPREVEQ(n));r.DICTGETPREVEQ=Oi;const di=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTIGETNEXT(n));r.DICTIGETNEXT=di;const Fi=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTIGETNEXTEQ(n));r.DICTIGETNEXTEQ=Fi;const mi=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTIGETPREV(n));r.DICTIGETPREV=mi;const gi=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTIGETPREVEQ(n));r.DICTIGETPREVEQ=gi;const Ui=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTUGETNEXT(n));r.DICTUGETNEXT=Ui;const li=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTUGETNEXTEQ(n));r.DICTUGETNEXTEQ=li;const Ni=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTUGETPREV(n));r.DICTUGETPREV=Ni;const Hi=(I,T,n)=>(a.assertZeroArgs(T,n),e.DICTUGETPREVEQ(n));r.DICTUGETPREVEQ=Hi;const Gi=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.ADDINT(i,n)};r.ADDINT=Gi;const Qi=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.MULINT(i,n)};r.MULINT=Qi;const _i=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.QADDINT(i,n)};r.QADDINT=_i;const Bi=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.QMULINT(i,n)};r.QMULINT=Bi;const fi=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.EQINT(i,n)};r.EQINT=fi;const Xi=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.LESSINT(i,n)};r.LESSINT=Xi;const Vi=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.GTINT(i,n)};r.GTINT=Vi;const $i=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.NEQINT(i,n)};r.NEQINT=$i;const Wi=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.QEQINT(i,n)};r.QEQINT=Wi;const Ki=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.QLESSINT(i,n)};r.QLESSINT=Ki;const Zi=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.QGTINT(i,n)};r.QGTINT=Zi;const ki=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.QNEQINT(i,n)};r.QNEQINT=ki;const hi=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.PUSHPOW2DEC(i,n)};r.PUSHPOW2DEC=hi;const yi=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.PUSHNEGPOW2(i,n)};r.PUSHNEGPOW2=yi;const wi=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.FITS(i,n)};r.FITS=wi;const pi=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.UFITS(i,n)};r.UFITS=pi;const Yi=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.QFITS(i,n)};r.QFITS=Yi;const bi=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.QUFITS(i,n)};r.QUFITS=bi;const Ji=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.SETCONTCTRMANY(i,n)};r.SETCONTCTRMANY=Ji;const vi=(I,T,n)=>{if(T.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const X=t.twoIntegerArgs(T);return e.CALLCCARGS(X[0],X[1],n)};r.CALLCCARGS=vi;const ji=(I,T,n)=>{if(T.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const X=t.twoIntegerArgs(T);return e.TRYARGS(X[0],X[1],n)};r.TRYARGS=ji;const zi=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.PLDREFIDX(i,n)};r.PLDREFIDX=zi;const qi=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.CHASHI(i,n)};r.CHASHI=qi;const xi=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.CDEPTHI(i,n)};r.CDEPTHI=xi;const e1=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.JMPDICT(i,n)};r.JMPDICT=e1;const r1=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.PREPAREDICT(i,n)};r.PREPAREDICT=r1;const n1=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.THROWARG(i,n)};r.THROWARG=n1;const t1=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.THROWARGIF(i,n)};r.THROWARGIF=t1;const a1=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.THROWARGIFNOT(i,n)};r.THROWARGIFNOT=a1;const T1=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.JMPXARGS(i,n)};r.JMPXARGS=T1;const I1=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.RETARGS(i,n)};r.RETARGS=I1;const D1=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.RETURNARGS(i,n)};r.RETURNARGS=D1;const E1=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.BLKDROP(i,n)};r.BLKDROP=E1;const s1=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.TUPLE(i,n)};r.TUPLE=s1;const S1=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.INDEX(i,n)};r.INDEX=S1;const R1=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.UNTUPLE(i,n)};r.UNTUPLE=R1;const i1=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.UNPACKFIRST(i,n)};r.UNPACKFIRST=i1;const o1=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.EXPLODE(i,n)};r.EXPLODE=o1;const L1=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.SETINDEX(i,n)};r.SETINDEX=L1;const u1=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.INDEXQ(i,n)};r.INDEXQ=u1;const C1=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.SETINDEXQ(i,n)};r.SETINDEXQ=C1;const A1=(I,T,n)=>{if(T.args.length!==3)throw new t.ParseError(n,"Expected 3 arguments");const X=t.threeStackArgs(T);return e.XC2PU(X[0],X[1],X[2],n)};r.XC2PU=A1;const M1=(I,T,n)=>{if(T.args.length!==3)throw new t.ParseError(n,"Expected 3 arguments");const X=t.threeStackArgs(T);return e.XCPU2(X[0],X[1],X[2],n)};r.XCPU2=M1;const c1=(I,T,n)=>{if(T.args.length!==3)throw new t.ParseError(n,"Expected 3 arguments");const X=t.threeStackArgs(T);return e.PUSH3(X[0],X[1],X[2],n)};r.PUSH3=c1;const P1=(I,T,n)=>{if(T.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const X=t.twoStackArgs(T);return e.XCHG2(X[0],X[1],n)};r.XCHG2=P1;const O1=(I,T,n)=>{if(T.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const X=t.twoStackArgs(T);return e.XCPU(X[0],X[1],n)};r.XCPU=O1;const d1=(I,T,n)=>{if(T.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const X=t.twoStackArgs(T);return e.PUSH2(X[0],X[1],n)};r.PUSH2=d1;const F1=(I,T,n)=>{if(T.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const X=t.twoStackArgs(T);return e.PUXC(X[0],X[1],n)};r.PUXC=F1;const m1=(I,T,n)=>{if(T.args.length!==3)throw new t.ParseError(n,"Expected 3 arguments");const X=t.threeStackArgs(T);return e.XCPUXC(X[0],X[1],X[2],n)};r.XCPUXC=m1;const g1=(I,T,n)=>{if(T.args.length!==3)throw new t.ParseError(n,"Expected 3 arguments");const X=t.threeStackArgs(T);return e.PUXC2(X[0],X[1],X[2],n)};r.PUXC2=g1;const U1=(I,T,n)=>{if(T.args.length!==3)throw new t.ParseError(n,"Expected 3 arguments");const X=t.threeStackArgs(T);return e.PUXCPU(X[0],X[1],X[2],n)};r.PUXCPU=U1;const l1=(I,T,n)=>{if(T.args.length!==3)throw new t.ParseError(n,"Expected 3 arguments");const X=t.threeStackArgs(T);return e.PU2XC(X[0],X[1],X[2],n)};r.PU2XC=l1;const N1=(I,T,n)=>{if(T.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const X=t.twoIntegerArgs(T);return e.BLKSWAP(X[0],X[1],n)};r.BLKSWAP=N1;const H1=(I,T,n)=>{if(T.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const X=t.twoIntegerArgs(T);return e.REVERSE(X[0],X[1],n)};r.REVERSE=H1;const G1=(I,T,n)=>{if(T.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const X=t.twoIntegerArgs(T);return e.SETCONTARGS(X[0],X[1],n)};r.SETCONTARGS=G1;const Q1=(I,T,n)=>{if(T.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const X=t.twoIntegerArgs(T);return e.BLESSARGS(X[0],X[1],n)};r.BLESSARGS=Q1;const _1=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.STIR(i,n)};r.STIR=_1;const B1=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.STUR(i,n)};r.STUR=B1;const f1=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.STIQ(i,n)};r.STIQ=f1;const X1=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.STUQ(i,n)};r.STUQ=X1;const V1=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.STIRQ(i,n)};r.STIRQ=V1;const $1=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.STURQ(i,n)};r.STURQ=$1;const W1=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.PLDI(i,n)};r.PLDI=W1;const K1=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.PLDU(i,n)};r.PLDU=K1;const Z1=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.LDIQ(i,n)};r.LDIQ=Z1;const k1=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.LDUQ(i,n)};r.LDUQ=k1;const h1=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.PLDIQ(i,n)};r.PLDIQ=h1;const y1=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.PLDUQ(i,n)};r.PLDUQ=y1;const w1=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.PLDUZ(i,n)};r.PLDUZ=w1;const p1=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.PLDSLICE(i,n)};r.PLDSLICE=p1;const Y1=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.LDSLICEQ(i,n)};r.LDSLICEQ=Y1;const b1=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.PLDSLICEQ(i,n)};r.PLDSLICEQ=b1;const J1=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.IFBITJMP(i,n)};r.IFBITJMP=J1;const v1=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.IFNBITJMP(i,n)};r.IFNBITJMP=v1;const j1=(I,T,n)=>{if(T.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const X=t.twoIntegerArgs(T);return e.INDEX2(X[0],X[1],n)};r.INDEX2=j1;const z1=(I,T,n)=>{if(T.args.length!==3)throw new t.ParseError(n,"Expected 3 arguments");const X=t.threeIntegerArgs(T);return e.INDEX3(X[0],X[1],X[2],n)};r.INDEX3=z1;const q1=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.PUSHPOW2(i,n)};r.PUSHPOW2=q1;const x1=(I,T,n)=>{if(T.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const X=t.twoIntegerArgs(T);return e.BLKPUSH(X[0],X[1],n)};r.BLKPUSH=x1;const eo=(I,T,n)=>{if(T.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const X=t.twoIntegerArgs(T);return e.BLKDROP2(X[0],X[1],n)};r.BLKDROP2=eo;const ro=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.GETGLOB(i,n)};r.GETGLOB=ro;const no=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.SETGLOB(i,n)};r.SETGLOB=no;const to=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.GETPARAM(i,n)};r.GETPARAM=to;const ao=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.codeSliceArg(I,T);return e.PUSHREF(i,n)};r.PUSHREF=ao;const To=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.codeSliceArg(I,T);return e.PUSHREFSLICE(i,n)};r.PUSHREFSLICE=To;const Io=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.codeSliceArg(I,T);return e.PUSHREFCONT(i,n)};r.PUSHREFCONT=Io;const Do=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.codeSliceArg(I,T);return e.CALLREF(i,n)};r.CALLREF=Do;const Eo=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.codeSliceArg(I,T);return e.JMPREF(i,n)};r.JMPREF=Eo;const so=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.codeSliceArg(I,T);return e.JMPREFDATA(i,n)};r.JMPREFDATA=so;const So=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.codeSliceArg(I,T);return e.IFREF(i,n)};r.IFREF=So;const Ro=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.codeSliceArg(I,T);return e.IFNOTREF(i,n)};r.IFNOTREF=Ro;const io=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.codeSliceArg(I,T);return e.IFJMPREF(i,n)};r.IFJMPREF=io;const oo=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.codeSliceArg(I,T);return e.IFNOTJMPREF(i,n)};r.IFNOTJMPREF=oo;const Lo=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.codeSliceArg(I,T);return e.IFREFELSE(i,n)};r.IFREFELSE=Lo;const uo=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.codeSliceArg(I,T);return e.IFELSEREF(i,n)};r.IFELSEREF=uo;const Co=(I,T,n)=>{if(T.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const X=t.twoCodeSliceArgs(I,T);return e.IFREFELSEREF(X[0],X[1],n)};r.IFREFELSEREF=Co;const Ao=(I,T,n)=>{if(T.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const X=t.ifBitArgs(I,T);return e.IFBITJMPREF(X[0],X[1],n)};r.IFBITJMPREF=Ao;const Mo=(I,T,n)=>{if(T.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const X=t.ifBitArgs(I,T);return e.IFNBITJMPREF(X[0],X[1],n)};r.IFNBITJMPREF=Mo;const co=(I,T,n)=>{if(T.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const X=t.dictpushArg(I,T);return e.DICTPUSHCONST(X[0],X[1],n)};r.DICTPUSHCONST=co;const Po=(I,T,n)=>{if(T.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const X=t.dictpushArg(I,T);return e.PFXDICTSWITCH(X[0],X[1],n)};r.PFXDICTSWITCH=Po;const Oo=(I,T,n)=>(a.assertZeroArgs(T,n),e.SDBEGINSX(n));r.SDBEGINSX=Oo;const Fo=(I,T,n)=>(a.assertZeroArgs(T,n),e.SDBEGINSXQ(n));r.SDBEGINSXQ=Fo;const mo=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.sliceArg(T);return e.SDBEGINS(i,n)};r.SDBEGINS=mo;const go=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.sliceArg(T);return e.SDBEGINSQ(i,n)};r.SDBEGINSQ=go;const Uo=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.codeSliceArg(I,T);return e.STREFCONST(i,n)};r.STREFCONST=Uo;const lo=(I,T,n)=>{if(T.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const X=t.twoCodeSliceArgs(I,T);return e.STREF2CONST(X[0],X[1],n)};r.STREF2CONST=lo;const No=(I,T,n)=>(a.assertZeroArgs(T,n),e.THROWANYIF(n));r.THROWANYIF=No;const Ho=(I,T,n)=>(a.assertZeroArgs(T,n),e.THROWARGANYIF(n));r.THROWARGANYIF=Ho;const Go=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.debugstrArg(T);return e.DEBUGSTR(i,n)};r.DEBUGSTR=Go;const Qo=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleControlArg(T);return e.SETCONTCTR(i,n)};r.SETCONTCTR=Qo;const _o=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleControlArg(T);return e.SETRETCTR(i,n)};r.SETRETCTR=_o;const Bo=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleControlArg(T);return e.SETALTCTR(i,n)};r.SETALTCTR=Bo;const fo=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleControlArg(T);return e.POPSAVE(i,n)};r.POPSAVE=fo;const Xo=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleControlArg(T);return e.SAVECTR(i,n)};r.SAVECTR=Xo;const Vo=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleControlArg(T);return e.SAVEALTCTR(i,n)};r.SAVEALTCTR=Vo;const $o=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleControlArg(T);return e.SAVEBOTHCTR(i,n)};r.SAVEBOTHCTR=$o;const Wo=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.RUNVM(i,n)};r.RUNVM=Wo;const Ko=(I,T,n)=>(a.assertZeroArgs(T,n),e.SWAP2(n));r.SWAP2=Ko;const Zo=(I,T,n)=>(a.assertZeroArgs(T,n),e.DROP2(n));r.DROP2=Zo;const ko=(I,T,n)=>(a.assertZeroArgs(T,n),e.DUP2(n));r.DUP2=ko;const ho=(I,T,n)=>(a.assertZeroArgs(T,n),e.OVER2(n));r.OVER2=ho;const yo=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.ADDRSHIFT_MOD(i,n)};r.ADDRSHIFT_MOD=yo;const wo=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.ADDRSHIFTR_MOD(i,n)};r.ADDRSHIFTR_MOD=wo;const po=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.ADDRSHIFTC_MOD(i,n)};r.ADDRSHIFTC_MOD=po;const Yo=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.RSHIFT_(i,n)};r.RSHIFT_=Yo;const bo=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.RSHIFTR_(i,n)};r.RSHIFTR_=bo;const Jo=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.RSHIFTC_(i,n)};r.RSHIFTC_=Jo;const vo=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.MODPOW2_(i,n)};r.MODPOW2_=vo;const jo=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.MODPOW2R_(i,n)};r.MODPOW2R_=jo;const zo=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.MODPOW2C_(i,n)};r.MODPOW2C_=zo;const qo=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.RSHIFT_MOD(i,n)};r.RSHIFT_MOD=qo;const xo=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.RSHIFTR_MOD(i,n)};r.RSHIFTR_MOD=xo;const eL=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.RSHIFTC_MOD(i,n)};r.RSHIFTC_MOD=eL;const rL=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.MULADDRSHIFT_MOD(i,n)};r.MULADDRSHIFT_MOD=rL;const nL=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.MULADDRSHIFTR_MOD(i,n)};r.MULADDRSHIFTR_MOD=nL;const tL=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.MULADDRSHIFTC_MOD(i,n)};r.MULADDRSHIFTC_MOD=tL;const aL=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.MULRSHIFT_(i,n)};r.MULRSHIFT_=aL;const TL=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.MULRSHIFTR_(i,n)};r.MULRSHIFTR_=TL;const IL=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.MULRSHIFTC_(i,n)};r.MULRSHIFTC_=IL;const DL=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.MULMODPOW2_(i,n)};r.MULMODPOW2_=DL;const EL=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.MULMODPOW2R_(i,n)};r.MULMODPOW2R_=EL;const sL=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.MULMODPOW2C_(i,n)};r.MULMODPOW2C_=sL;const SL=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.MULRSHIFT_MOD(i,n)};r.MULRSHIFT_MOD=SL;const RL=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.MULRSHIFTR_MOD(i,n)};r.MULRSHIFTR_MOD=RL;const iL=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.MULRSHIFTC_MOD(i,n)};r.MULRSHIFTC_MOD=iL;const oL=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.LSHIFT_ADDDIVMOD(i,n)};r.LSHIFT_ADDDIVMOD=oL;const LL=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.LSHIFT_ADDDIVMODR(i,n)};r.LSHIFT_ADDDIVMODR=LL;const uL=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.LSHIFT_ADDDIVMODC(i,n)};r.LSHIFT_ADDDIVMODC=uL;const CL=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.LSHIFT_DIV(i,n)};r.LSHIFT_DIV=CL;const AL=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.LSHIFT_DIVR(i,n)};r.LSHIFT_DIVR=AL;const ML=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.LSHIFT_DIVC(i,n)};r.LSHIFT_DIVC=ML;const cL=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.LSHIFT_MOD(i,n)};r.LSHIFT_MOD=cL;const PL=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.LSHIFT_MODR(i,n)};r.LSHIFT_MODR=PL;const OL=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.LSHIFT_MODC(i,n)};r.LSHIFT_MODC=OL;const dL=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.LSHIFT_DIVMOD(i,n)};r.LSHIFT_DIVMOD=dL;const FL=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.LSHIFT_DIVMODR(i,n)};r.LSHIFT_DIVMODR=FL;const mL=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.LSHIFT_DIVMODC(i,n)};r.LSHIFT_DIVMODC=mL;const gL=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.HASHEXT(i,n)};r.HASHEXT=gL;const UL=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.HASHEXTR(i,n)};r.HASHEXTR=UL;const lL=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.HASHEXTA(i,n)};r.HASHEXTA=lL;const NL=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.HASHEXTAR(i,n)};r.HASHEXTAR=NL;const HL=(I,T,n)=>(a.assertZeroArgs(T,n),e.STREF(n));r.STREF=HL;const GL=(I,T,n)=>(a.assertZeroArgs(T,n),e.STREF_ALT(n));r.STREF_ALT=GL;const QL=(I,T,n)=>(a.assertZeroArgs(T,n),e.STSLICE(n));r.STSLICE=QL;const _L=(I,T,n)=>(a.assertZeroArgs(T,n),e.STSLICE_ALT(n));r.STSLICE_ALT=_L;const BL=(I,T,n)=>{if(T.args.length!==3)throw new t.ParseError(n,"Expected 3 arguments");const X=t.threeStackArgs(T);return e.XCHG3(X[0],X[1],X[2],n)};r.XCHG3=BL;const fL=(I,T,n)=>{if(T.args.length!==3)throw new t.ParseError(n,"Expected 3 arguments");const X=t.threeStackArgs(T);return e.XCHG3_ALT(X[0],X[1],X[2],n)};r.XCHG3_ALT=fL;const XL=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.STI(i,n)};r.STI=XL;const VL=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.STI_ALT(i,n)};r.STI_ALT=VL;const $L=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.STU(i,n)};r.STU=$L;const WL=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.STU_ALT(i,n)};r.STU_ALT=WL;const KL=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.LDI(i,n)};r.LDI=KL;const ZL=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.LDI_ALT(i,n)};r.LDI_ALT=ZL;const kL=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.LDU(i,n)};r.LDU=kL;const hL=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.LDU_ALT(i,n)};r.LDU_ALT=hL;const yL=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.LDSLICE(i,n)};r.LDSLICE=yL;const wL=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.LDSLICE_ALT(i,n)};r.LDSLICE_ALT=wL;const pL=(I,T,n)=>(a.assertZeroArgs(T,n),e.LSHIFT_VAR(n));r.LSHIFT_VAR=pL;const YL=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.LSHIFT(i,n)};r.LSHIFT=YL;const bL=(I,T,n)=>(a.assertZeroArgs(T,n),e.QLSHIFT_VAR(n));r.QLSHIFT_VAR=bL;const JL=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.QLSHIFT(i,n)};r.QLSHIFT=JL;const vL=(I,T,n)=>(a.assertZeroArgs(T,n),e.BCHKBITS_VAR(n));r.BCHKBITS_VAR=vL;const jL=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.BCHKBITS(i,n)};r.BCHKBITS=jL;const zL=(I,T,n)=>(a.assertZeroArgs(T,n),e.BCHKBITSQ_VAR(n));r.BCHKBITSQ_VAR=zL;const qL=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.BCHKBITSQ(i,n)};r.BCHKBITSQ=qL;const xL=(I,T,n)=>(a.assertZeroArgs(T,n),e.RSHIFT_VAR(n));r.RSHIFT_VAR=xL;const eu=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.RSHIFT(i,n)};r.RSHIFT=eu;const ru=(I,T,n)=>(a.assertZeroArgs(T,n),e.RSHIFT_ALT(n));r.RSHIFT_ALT=ru;const nu=(I,T,n)=>(a.assertZeroArgs(T,n),e.QRSHIFT_VAR(n));r.QRSHIFT_VAR=nu;const tu=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.QRSHIFT(i,n)};r.QRSHIFT=tu;const au=(I,T,n)=>(a.assertZeroArgs(T,n),e.QRSHIFT_ALT(n));r.QRSHIFT_ALT=au;const Tu=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.CALLDICT(i,n)};r.CALLDICT=Tu;const Iu=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.CALLDICT_LONG(i,n)};r.CALLDICT_LONG=Iu;const Du=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.THROW_SHORT(i,n)};r.THROW_SHORT=Du;const Eu=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.THROW(i,n)};r.THROW=Eu;const su=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.THROWIF_SHORT(i,n)};r.THROWIF_SHORT=su;const Su=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.THROWIF(i,n)};r.THROWIF=Su;const Ru=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.THROWIFNOT_SHORT(i,n)};r.THROWIFNOT_SHORT=Ru;const iu=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.THROWIFNOT(i,n)};r.THROWIFNOT=iu;const ou=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.PUSHINT_4(i,n)};r.PUSHINT_4=ou;const Lu=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.PUSHINT_8(i,n)};r.PUSHINT_8=Lu;const uu=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.PUSHINT_16(i,n)};r.PUSHINT_16=uu;const Cu=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleBigIntArg(T);return e.PUSHINT_LONG(i,n)};r.PUSHINT_LONG=Cu;const Au=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleStackArg(T);return e.XCHG_01_LONG(i,n)};r.XCHG_01_LONG=Au;const Mu=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleStackArg(T);return e.XCHG_0I(i,n)};r.XCHG_0I=Mu;const cu=(I,T,n)=>{if(T.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const X=t.twoStackArgs(T);return e.XCHG_IJ(X[0],X[1],n)};r.XCHG_IJ=cu;const Pu=(I,T,n)=>{if(T.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const X=t.twoStackArgs(T);return e.XCHG_1I(X[0],X[1],n)};r.XCHG_1I=Pu;const Ou=(I,T,n)=>(a.assertZeroArgs(T,n),e.DUMPSTK(n));r.DUMPSTK=Ou;const du=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.DEBUG(i,n)};r.DEBUG=du;const Fu=(I,T,n)=>(a.assertZeroArgs(T,n),e.STRDUMP(n));r.STRDUMP=Fu;const mu=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.DEBUG_1(i,n)};r.DEBUG_1=mu;const gu=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleStackArg(T);return e.DUMP(i,n)};r.DUMP=gu;const Uu=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.DEBUG_2(i,n)};r.DEBUG_2=Uu;const lu=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleControlArg(T);return e.PUSHCTR(i,n)};r.PUSHCTR=lu;const Nu=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleStackArg(T);return e.PUSH(i,n)};r.PUSH=Nu;const Hu=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleStackArg(T);return e.PUSH_LONG(i,n)};r.PUSH_LONG=Hu;const Gu=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleControlArg(T);return e.POPCTR(i,n)};r.POPCTR=Gu;const Qu=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleStackArg(T);return e.POP(i,n)};r.POP=Qu;const _u=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleStackArg(T);return e.POP_LONG(i,n)};r.POP_LONG=_u;const Bu=(I,T,n)=>{if(T.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const X=t.twoIntegerArgs(T);return e.CALLXARGS(X[0],X[1],n)};r.CALLXARGS=Bu;const fu=(I,T,n)=>{if(T.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const X=t.twoIntegerArgs(T);return e.CALLXARGS_1(X[0],X[1],n)};r.CALLXARGS_1=fu;const Xu=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.sliceArg(T);return e.PUSHSLICE(i,n)};r.PUSHSLICE=Xu;const Vu=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.sliceArg(T);return e.PUSHSLICE_REFS(i,n)};r.PUSHSLICE_REFS=Vu;const $u=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.sliceArg(T);return e.PUSHSLICE_LONG(i,n)};r.PUSHSLICE_LONG=$u;const Wu=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.codeSliceArg(I,T);return e.PUSHCONT(i,n)};r.PUSHCONT=Wu;const Ku=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.codeSliceArg(I,T);return e.PUSHCONT_SHORT(i,n)};r.PUSHCONT_SHORT=Ku;const Zu=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.sliceArg(T);return e.STSLICECONST(i,n)};r.STSLICECONST=Zu;const s=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.SETCP(i,n)};r.SETCP=s;const R=(I,T,n)=>(a.assertZeroArgs(T,n),e.SETCPX(n));r.SETCPX=R;const z=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.SETCP_SHORT(i,n)};r.SETCP_SHORT=z;const ie=(I,T,n)=>{a.assertSingleArgs(T,n);const i=t.singleIntegerArg(T);return e.DEBUGMARK(i,n)};r.DEBUGMARK=ie;const qC=(I,T,n)=>{const i=T.name.name;switch(i){case"PUSHNAN":return(0,r.PUSHNAN)(I,T,n);case"ADD":return(0,r.ADD)(I,T,n);case"SUB":return(0,r.SUB)(I,T,n);case"SUBR":return(0,r.SUBR)(I,T,n);case"NEGATE":return(0,r.NEGATE)(I,T,n);case"INC":return(0,r.INC)(I,T,n);case"DEC":return(0,r.DEC)(I,T,n);case"MUL":return(0,r.MUL)(I,T,n);case"POW2":return(0,r.POW2)(I,T,n);case"AND":return(0,r.AND)(I,T,n);case"OR":return(0,r.OR)(I,T,n);case"XOR":return(0,r.XOR)(I,T,n);case"NOT":return(0,r.NOT)(I,T,n);case"FITSX":return(0,r.FITSX)(I,T,n);case"UFITSX":return(0,r.UFITSX)(I,T,n);case"BITSIZE":return(0,r.BITSIZE)(I,T,n);case"UBITSIZE":return(0,r.UBITSIZE)(I,T,n);case"MIN":return(0,r.MIN)(I,T,n);case"MAX":return(0,r.MAX)(I,T,n);case"MINMAX":return(0,r.MINMAX)(I,T,n);case"ABS":return(0,r.ABS)(I,T,n);case"QADD":return(0,r.QADD)(I,T,n);case"QSUB":return(0,r.QSUB)(I,T,n);case"QSUBR":return(0,r.QSUBR)(I,T,n);case"QNEGATE":return(0,r.QNEGATE)(I,T,n);case"QINC":return(0,r.QINC)(I,T,n);case"QDEC":return(0,r.QDEC)(I,T,n);case"QMUL":return(0,r.QMUL)(I,T,n);case"QPOW2":return(0,r.QPOW2)(I,T,n);case"QAND":return(0,r.QAND)(I,T,n);case"QOR":return(0,r.QOR)(I,T,n);case"QXOR":return(0,r.QXOR)(I,T,n);case"QNOT":return(0,r.QNOT)(I,T,n);case"QFITSX":return(0,r.QFITSX)(I,T,n);case"QUFITSX":return(0,r.QUFITSX)(I,T,n);case"QBITSIZE":return(0,r.QBITSIZE)(I,T,n);case"QUBITSIZE":return(0,r.QUBITSIZE)(I,T,n);case"QMIN":return(0,r.QMIN)(I,T,n);case"QMAX":return(0,r.QMAX)(I,T,n);case"QMINMAX":return(0,r.QMINMAX)(I,T,n);case"QABS":return(0,r.QABS)(I,T,n);case"SGN":return(0,r.SGN)(I,T,n);case"LESS":return(0,r.LESS)(I,T,n);case"EQUAL":return(0,r.EQUAL)(I,T,n);case"LEQ":return(0,r.LEQ)(I,T,n);case"GREATER":return(0,r.GREATER)(I,T,n);case"NEQ":return(0,r.NEQ)(I,T,n);case"GEQ":return(0,r.GEQ)(I,T,n);case"CMP":return(0,r.CMP)(I,T,n);case"ISNAN":return(0,r.ISNAN)(I,T,n);case"CHKNAN":return(0,r.CHKNAN)(I,T,n);case"QSGN":return(0,r.QSGN)(I,T,n);case"QLESS":return(0,r.QLESS)(I,T,n);case"QEQUAL":return(0,r.QEQUAL)(I,T,n);case"QLEQ":return(0,r.QLEQ)(I,T,n);case"QGREATER":return(0,r.QGREATER)(I,T,n);case"QNEQ":return(0,r.QNEQ)(I,T,n);case"QGEQ":return(0,r.QGEQ)(I,T,n);case"QCMP":return(0,r.QCMP)(I,T,n);case"SEMPTY":return(0,r.SEMPTY)(I,T,n);case"SDEMPTY":return(0,r.SDEMPTY)(I,T,n);case"SREMPTY":return(0,r.SREMPTY)(I,T,n);case"SDFIRST":return(0,r.SDFIRST)(I,T,n);case"SDLEXCMP":return(0,r.SDLEXCMP)(I,T,n);case"SDEQ":return(0,r.SDEQ)(I,T,n);case"SDPFX":return(0,r.SDPFX)(I,T,n);case"SDPFXREV":return(0,r.SDPFXREV)(I,T,n);case"SDPPFX":return(0,r.SDPPFX)(I,T,n);case"SDPPFXREV":return(0,r.SDPPFXREV)(I,T,n);case"SDSFX":return(0,r.SDSFX)(I,T,n);case"SDSFXREV":return(0,r.SDSFXREV)(I,T,n);case"SDPSFX":return(0,r.SDPSFX)(I,T,n);case"SDPSFXREV":return(0,r.SDPSFXREV)(I,T,n);case"SDCNTLEAD0":return(0,r.SDCNTLEAD0)(I,T,n);case"SDCNTLEAD1":return(0,r.SDCNTLEAD1)(I,T,n);case"SDCNTTRAIL0":return(0,r.SDCNTTRAIL0)(I,T,n);case"SDCNTTRAIL1":return(0,r.SDCNTTRAIL1)(I,T,n);case"NEWC":return(0,r.NEWC)(I,T,n);case"ENDC":return(0,r.ENDC)(I,T,n);case"ENDCST":return(0,r.ENDCST)(I,T,n);case"STBREF":return(0,r.STBREF)(I,T,n);case"STB":return(0,r.STB)(I,T,n);case"STREFR":return(0,r.STREFR)(I,T,n);case"STBREFR":return(0,r.STBREFR)(I,T,n);case"STSLICER":return(0,r.STSLICER)(I,T,n);case"STBR":return(0,r.STBR)(I,T,n);case"STREFQ":return(0,r.STREFQ)(I,T,n);case"STBREFQ":return(0,r.STBREFQ)(I,T,n);case"STSLICEQ":return(0,r.STSLICEQ)(I,T,n);case"STBQ":return(0,r.STBQ)(I,T,n);case"STREFRQ":return(0,r.STREFRQ)(I,T,n);case"STBREFRQ":return(0,r.STBREFRQ)(I,T,n);case"STSLICERQ":return(0,r.STSLICERQ)(I,T,n);case"STBRQ":return(0,r.STBRQ)(I,T,n);case"ENDXC":return(0,r.ENDXC)(I,T,n);case"BDEPTH":return(0,r.BDEPTH)(I,T,n);case"BBITS":return(0,r.BBITS)(I,T,n);case"BREFS":return(0,r.BREFS)(I,T,n);case"BBITREFS":return(0,r.BBITREFS)(I,T,n);case"BREMBITS":return(0,r.BREMBITS)(I,T,n);case"BREMREFS":return(0,r.BREMREFS)(I,T,n);case"BREMBITREFS":return(0,r.BREMBITREFS)(I,T,n);case"BCHKREFS":return(0,r.BCHKREFS)(I,T,n);case"BCHKBITREFS":return(0,r.BCHKBITREFS)(I,T,n);case"BCHKREFSQ":return(0,r.BCHKREFSQ)(I,T,n);case"BCHKBITREFSQ":return(0,r.BCHKBITREFSQ)(I,T,n);case"STZEROES":return(0,r.STZEROES)(I,T,n);case"STONES":return(0,r.STONES)(I,T,n);case"STSAME":return(0,r.STSAME)(I,T,n);case"CTOS":return(0,r.CTOS)(I,T,n);case"ENDS":return(0,r.ENDS)(I,T,n);case"LDREF":return(0,r.LDREF)(I,T,n);case"LDREFRTOS":return(0,r.LDREFRTOS)(I,T,n);case"SDCUTFIRST":return(0,r.SDCUTFIRST)(I,T,n);case"SDSKIPFIRST":return(0,r.SDSKIPFIRST)(I,T,n);case"SDCUTLAST":return(0,r.SDCUTLAST)(I,T,n);case"SDSKIPLAST":return(0,r.SDSKIPLAST)(I,T,n);case"SDSUBSTR":return(0,r.SDSUBSTR)(I,T,n);case"SCUTFIRST":return(0,r.SCUTFIRST)(I,T,n);case"SSKIPFIRST":return(0,r.SSKIPFIRST)(I,T,n);case"SCUTLAST":return(0,r.SCUTLAST)(I,T,n);case"SSKIPLAST":return(0,r.SSKIPLAST)(I,T,n);case"SUBSLICE":return(0,r.SUBSLICE)(I,T,n);case"SPLIT":return(0,r.SPLIT)(I,T,n);case"SPLITQ":return(0,r.SPLITQ)(I,T,n);case"XCTOS":return(0,r.XCTOS)(I,T,n);case"XLOAD":return(0,r.XLOAD)(I,T,n);case"XLOADQ":return(0,r.XLOADQ)(I,T,n);case"SCHKBITS":return(0,r.SCHKBITS)(I,T,n);case"SCHKREFS":return(0,r.SCHKREFS)(I,T,n);case"SCHKBITREFS":return(0,r.SCHKBITREFS)(I,T,n);case"SCHKBITSQ":return(0,r.SCHKBITSQ)(I,T,n);case"SCHKREFSQ":return(0,r.SCHKREFSQ)(I,T,n);case"SCHKBITREFSQ":return(0,r.SCHKBITREFSQ)(I,T,n);case"PLDREFVAR":return(0,r.PLDREFVAR)(I,T,n);case"SBITS":return(0,r.SBITS)(I,T,n);case"SREFS":return(0,r.SREFS)(I,T,n);case"SBITREFS":return(0,r.SBITREFS)(I,T,n);case"LDZEROES":return(0,r.LDZEROES)(I,T,n);case"LDONES":return(0,r.LDONES)(I,T,n);case"LDSAME":return(0,r.LDSAME)(I,T,n);case"SDEPTH":return(0,r.SDEPTH)(I,T,n);case"CDEPTH":return(0,r.CDEPTH)(I,T,n);case"CLEVEL":return(0,r.CLEVEL)(I,T,n);case"CLEVELMASK":return(0,r.CLEVELMASK)(I,T,n);case"CHASHIX":return(0,r.CHASHIX)(I,T,n);case"CDEPTHIX":return(0,r.CDEPTHIX)(I,T,n);case"EXECUTE":return(0,r.EXECUTE)(I,T,n);case"JMPX":return(0,r.JMPX)(I,T,n);case"RET":return(0,r.RET)(I,T,n);case"RETALT":return(0,r.RETALT)(I,T,n);case"RETBOOL":return(0,r.RETBOOL)(I,T,n);case"CALLCC":return(0,r.CALLCC)(I,T,n);case"JMPXDATA":return(0,r.JMPXDATA)(I,T,n);case"CALLXVARARGS":return(0,r.CALLXVARARGS)(I,T,n);case"RETVARARGS":return(0,r.RETVARARGS)(I,T,n);case"JMPXVARARGS":return(0,r.JMPXVARARGS)(I,T,n);case"CALLCCVARARGS":return(0,r.CALLCCVARARGS)(I,T,n);case"RETDATA":return(0,r.RETDATA)(I,T,n);case"RUNVMX":return(0,r.RUNVMX)(I,T,n);case"IFRET":return(0,r.IFRET)(I,T,n);case"IFNOTRET":return(0,r.IFNOTRET)(I,T,n);case"IF":return(0,r.IF)(I,T,n);case"IFNOT":return(0,r.IFNOT)(I,T,n);case"IFJMP":return(0,r.IFJMP)(I,T,n);case"IFNOTJMP":return(0,r.IFNOTJMP)(I,T,n);case"IFELSE":return(0,r.IFELSE)(I,T,n);case"CONDSEL":return(0,r.CONDSEL)(I,T,n);case"CONDSELCHK":return(0,r.CONDSELCHK)(I,T,n);case"IFRETALT":return(0,r.IFRETALT)(I,T,n);case"IFNOTRETALT":return(0,r.IFNOTRETALT)(I,T,n);case"REPEAT":return(0,r.REPEAT)(I,T,n);case"REPEATEND":return(0,r.REPEATEND)(I,T,n);case"UNTIL":return(0,r.UNTIL)(I,T,n);case"UNTILEND":return(0,r.UNTILEND)(I,T,n);case"WHILE":return(0,r.WHILE)(I,T,n);case"WHILEEND":return(0,r.WHILEEND)(I,T,n);case"AGAIN":return(0,r.AGAIN)(I,T,n);case"AGAINEND":return(0,r.AGAINEND)(I,T,n);case"REPEATBRK":return(0,r.REPEATBRK)(I,T,n);case"REPEATENDBRK":return(0,r.REPEATENDBRK)(I,T,n);case"UNTILBRK":return(0,r.UNTILBRK)(I,T,n);case"UNTILENDBRK":return(0,r.UNTILENDBRK)(I,T,n);case"WHILEBRK":return(0,r.WHILEBRK)(I,T,n);case"WHILEENDBRK":return(0,r.WHILEENDBRK)(I,T,n);case"AGAINBRK":return(0,r.AGAINBRK)(I,T,n);case"AGAINENDBRK":return(0,r.AGAINENDBRK)(I,T,n);case"RETURNVARARGS":return(0,r.RETURNVARARGS)(I,T,n);case"SETCONTVARARGS":return(0,r.SETCONTVARARGS)(I,T,n);case"SETNUMVARARGS":return(0,r.SETNUMVARARGS)(I,T,n);case"BLESS":return(0,r.BLESS)(I,T,n);case"BLESSVARARGS":return(0,r.BLESSVARARGS)(I,T,n);case"PUSHCTRX":return(0,r.PUSHCTRX)(I,T,n);case"POPCTRX":return(0,r.POPCTRX)(I,T,n);case"SETCONTCTRX":return(0,r.SETCONTCTRX)(I,T,n);case"SETCONTCTRMANYX":return(0,r.SETCONTCTRMANYX)(I,T,n);case"BOOLAND":return(0,r.BOOLAND)(I,T,n);case"BOOLOR":return(0,r.BOOLOR)(I,T,n);case"COMPOSBOTH":return(0,r.COMPOSBOTH)(I,T,n);case"ATEXIT":return(0,r.ATEXIT)(I,T,n);case"ATEXITALT":return(0,r.ATEXITALT)(I,T,n);case"SETEXITALT":return(0,r.SETEXITALT)(I,T,n);case"THENRET":return(0,r.THENRET)(I,T,n);case"THENRETALT":return(0,r.THENRETALT)(I,T,n);case"INVERT":return(0,r.INVERT)(I,T,n);case"BOOLEVAL":return(0,r.BOOLEVAL)(I,T,n);case"SAMEALT":return(0,r.SAMEALT)(I,T,n);case"SAMEALTSAVE":return(0,r.SAMEALTSAVE)(I,T,n);case"TRY":return(0,r.TRY)(I,T,n);case"STDICT":return(0,r.STDICT)(I,T,n);case"SKIPDICT":return(0,r.SKIPDICT)(I,T,n);case"LDDICTS":return(0,r.LDDICTS)(I,T,n);case"PLDDICTS":return(0,r.PLDDICTS)(I,T,n);case"LDDICT":return(0,r.LDDICT)(I,T,n);case"PLDDICT":return(0,r.PLDDICT)(I,T,n);case"LDDICTQ":return(0,r.LDDICTQ)(I,T,n);case"PLDDICTQ":return(0,r.PLDDICTQ)(I,T,n);case"PFXDICTSET":return(0,r.PFXDICTSET)(I,T,n);case"PFXDICTREPLACE":return(0,r.PFXDICTREPLACE)(I,T,n);case"PFXDICTADD":return(0,r.PFXDICTADD)(I,T,n);case"PFXDICTDEL":return(0,r.PFXDICTDEL)(I,T,n);case"PFXDICTGETQ":return(0,r.PFXDICTGETQ)(I,T,n);case"PFXDICTGET":return(0,r.PFXDICTGET)(I,T,n);case"PFXDICTGETJMP":return(0,r.PFXDICTGETJMP)(I,T,n);case"PFXDICTGETEXEC":return(0,r.PFXDICTGETEXEC)(I,T,n);case"NOP":return(0,r.NOP)(I,T,n);case"SWAP":return(0,r.SWAP)(I,T,n);case"DUP":return(0,r.DUP)(I,T,n);case"OVER":return(0,r.OVER)(I,T,n);case"DROP":return(0,r.DROP)(I,T,n);case"NIP":return(0,r.NIP)(I,T,n);case"ROT":return(0,r.ROT)(I,T,n);case"ROTREV":return(0,r.ROTREV)(I,T,n);case"PICK":return(0,r.PICK)(I,T,n);case"ROLL":return(0,r.ROLL)(I,T,n);case"ROLLREV":return(0,r.ROLLREV)(I,T,n);case"BLKSWX":return(0,r.BLKSWX)(I,T,n);case"REVX":return(0,r.REVX)(I,T,n);case"DROPX":return(0,r.DROPX)(I,T,n);case"TUCK":return(0,r.TUCK)(I,T,n);case"XCHGX":return(0,r.XCHGX)(I,T,n);case"DEPTH":return(0,r.DEPTH)(I,T,n);case"CHKDEPTH":return(0,r.CHKDEPTH)(I,T,n);case"ONLYTOPX":return(0,r.ONLYTOPX)(I,T,n);case"ONLYX":return(0,r.ONLYX)(I,T,n);case"ACCEPT":return(0,r.ACCEPT)(I,T,n);case"SETGASLIMIT":return(0,r.SETGASLIMIT)(I,T,n);case"GASCONSUMED":return(0,r.GASCONSUMED)(I,T,n);case"COMMIT":return(0,r.COMMIT)(I,T,n);case"NOW":return(0,r.NOW)(I,T,n);case"BLOCKLT":return(0,r.BLOCKLT)(I,T,n);case"LTIME":return(0,r.LTIME)(I,T,n);case"RANDSEED":return(0,r.RANDSEED)(I,T,n);case"BALANCE":return(0,r.BALANCE)(I,T,n);case"MYADDR":return(0,r.MYADDR)(I,T,n);case"CONFIGROOT":return(0,r.CONFIGROOT)(I,T,n);case"MYCODE":return(0,r.MYCODE)(I,T,n);case"INCOMINGVALUE":return(0,r.INCOMINGVALUE)(I,T,n);case"STORAGEFEES":return(0,r.STORAGEFEES)(I,T,n);case"PREVBLOCKSINFOTUPLE":return(0,r.PREVBLOCKSINFOTUPLE)(I,T,n);case"UNPACKEDCONFIGTUPLE":return(0,r.UNPACKEDCONFIGTUPLE)(I,T,n);case"DUEPAYMENT":return(0,r.DUEPAYMENT)(I,T,n);case"CONFIGDICT":return(0,r.CONFIGDICT)(I,T,n);case"CONFIGPARAM":return(0,r.CONFIGPARAM)(I,T,n);case"CONFIGOPTPARAM":return(0,r.CONFIGOPTPARAM)(I,T,n);case"PREVMCBLOCKS":return(0,r.PREVMCBLOCKS)(I,T,n);case"PREVKEYBLOCK":return(0,r.PREVKEYBLOCK)(I,T,n);case"PREVMCBLOCKS_100":return(0,r.PREVMCBLOCKS_100)(I,T,n);case"GLOBALID":return(0,r.GLOBALID)(I,T,n);case"GETGASFEE":return(0,r.GETGASFEE)(I,T,n);case"GETSTORAGEFEE":return(0,r.GETSTORAGEFEE)(I,T,n);case"GETFORWARDFEE":return(0,r.GETFORWARDFEE)(I,T,n);case"GETPRECOMPILEDGAS":return(0,r.GETPRECOMPILEDGAS)(I,T,n);case"GETORIGINALFWDFEE":return(0,r.GETORIGINALFWDFEE)(I,T,n);case"GETGASFEESIMPLE":return(0,r.GETGASFEESIMPLE)(I,T,n);case"GETFORWARDFEESIMPLE":return(0,r.GETFORWARDFEESIMPLE)(I,T,n);case"GETGLOBVAR":return(0,r.GETGLOBVAR)(I,T,n);case"SETGLOBVAR":return(0,r.SETGLOBVAR)(I,T,n);case"RANDU256":return(0,r.RANDU256)(I,T,n);case"RAND":return(0,r.RAND)(I,T,n);case"SETRAND":return(0,r.SETRAND)(I,T,n);case"ADDRAND":return(0,r.ADDRAND)(I,T,n);case"HASHCU":return(0,r.HASHCU)(I,T,n);case"HASHSU":return(0,r.HASHSU)(I,T,n);case"SHA256U":return(0,r.SHA256U)(I,T,n);case"CHKSIGNU":return(0,r.CHKSIGNU)(I,T,n);case"CHKSIGNS":return(0,r.CHKSIGNS)(I,T,n);case"ECRECOVER":return(0,r.ECRECOVER)(I,T,n);case"SECP256K1_XONLY_PUBKEY_TWEAK_ADD":return(0,r.SECP256K1_XONLY_PUBKEY_TWEAK_ADD)(I,T,n);case"P256_CHKSIGNU":return(0,r.P256_CHKSIGNU)(I,T,n);case"P256_CHKSIGNS":return(0,r.P256_CHKSIGNS)(I,T,n);case"RIST255_FROMHASH":return(0,r.RIST255_FROMHASH)(I,T,n);case"RIST255_VALIDATE":return(0,r.RIST255_VALIDATE)(I,T,n);case"RIST255_ADD":return(0,r.RIST255_ADD)(I,T,n);case"RIST255_SUB":return(0,r.RIST255_SUB)(I,T,n);case"RIST255_MUL":return(0,r.RIST255_MUL)(I,T,n);case"RIST255_MULBASE":return(0,r.RIST255_MULBASE)(I,T,n);case"RIST255_PUSHL":return(0,r.RIST255_PUSHL)(I,T,n);case"RIST255_QVALIDATE":return(0,r.RIST255_QVALIDATE)(I,T,n);case"RIST255_QADD":return(0,r.RIST255_QADD)(I,T,n);case"RIST255_QSUB":return(0,r.RIST255_QSUB)(I,T,n);case"RIST255_QMUL":return(0,r.RIST255_QMUL)(I,T,n);case"RIST255_QMULBASE":return(0,r.RIST255_QMULBASE)(I,T,n);case"BLS_VERIFY":return(0,r.BLS_VERIFY)(I,T,n);case"BLS_AGGREGATE":return(0,r.BLS_AGGREGATE)(I,T,n);case"BLS_FASTAGGREGATEVERIFY":return(0,r.BLS_FASTAGGREGATEVERIFY)(I,T,n);case"BLS_AGGREGATEVERIFY":return(0,r.BLS_AGGREGATEVERIFY)(I,T,n);case"BLS_G1_ADD":return(0,r.BLS_G1_ADD)(I,T,n);case"BLS_G1_SUB":return(0,r.BLS_G1_SUB)(I,T,n);case"BLS_G1_NEG":return(0,r.BLS_G1_NEG)(I,T,n);case"BLS_G1_MUL":return(0,r.BLS_G1_MUL)(I,T,n);case"BLS_G1_MULTIEXP":return(0,r.BLS_G1_MULTIEXP)(I,T,n);case"BLS_G1_ZERO":return(0,r.BLS_G1_ZERO)(I,T,n);case"BLS_MAP_TO_G1":return(0,r.BLS_MAP_TO_G1)(I,T,n);case"BLS_G1_INGROUP":return(0,r.BLS_G1_INGROUP)(I,T,n);case"BLS_G1_ISZERO":return(0,r.BLS_G1_ISZERO)(I,T,n);case"BLS_G2_ADD":return(0,r.BLS_G2_ADD)(I,T,n);case"BLS_G2_SUB":return(0,r.BLS_G2_SUB)(I,T,n);case"BLS_G2_NEG":return(0,r.BLS_G2_NEG)(I,T,n);case"BLS_G2_MUL":return(0,r.BLS_G2_MUL)(I,T,n);case"BLS_G2_MULTIEXP":return(0,r.BLS_G2_MULTIEXP)(I,T,n);case"BLS_G2_ZERO":return(0,r.BLS_G2_ZERO)(I,T,n);case"BLS_MAP_TO_G2":return(0,r.BLS_MAP_TO_G2)(I,T,n);case"BLS_G2_INGROUP":return(0,r.BLS_G2_INGROUP)(I,T,n);case"BLS_G2_ISZERO":return(0,r.BLS_G2_ISZERO)(I,T,n);case"BLS_PAIRING":return(0,r.BLS_PAIRING)(I,T,n);case"BLS_PUSHR":return(0,r.BLS_PUSHR)(I,T,n);case"CDATASIZEQ":return(0,r.CDATASIZEQ)(I,T,n);case"CDATASIZE":return(0,r.CDATASIZE)(I,T,n);case"SDATASIZEQ":return(0,r.SDATASIZEQ)(I,T,n);case"SDATASIZE":return(0,r.SDATASIZE)(I,T,n);case"LDGRAMS":return(0,r.LDGRAMS)(I,T,n);case"LDVARINT16":return(0,r.LDVARINT16)(I,T,n);case"STGRAMS":return(0,r.STGRAMS)(I,T,n);case"STVARINT16":return(0,r.STVARINT16)(I,T,n);case"LDVARUINT32":return(0,r.LDVARUINT32)(I,T,n);case"LDVARINT32":return(0,r.LDVARINT32)(I,T,n);case"STVARUINT32":return(0,r.STVARUINT32)(I,T,n);case"STVARINT32":return(0,r.STVARINT32)(I,T,n);case"LDMSGADDR":return(0,r.LDMSGADDR)(I,T,n);case"LDMSGADDRQ":return(0,r.LDMSGADDRQ)(I,T,n);case"PARSEMSGADDR":return(0,r.PARSEMSGADDR)(I,T,n);case"PARSEMSGADDRQ":return(0,r.PARSEMSGADDRQ)(I,T,n);case"REWRITESTDADDR":return(0,r.REWRITESTDADDR)(I,T,n);case"REWRITESTDADDRQ":return(0,r.REWRITESTDADDRQ)(I,T,n);case"REWRITEVARADDR":return(0,r.REWRITEVARADDR)(I,T,n);case"REWRITEVARADDRQ":return(0,r.REWRITEVARADDRQ)(I,T,n);case"SENDRAWMSG":return(0,r.SENDRAWMSG)(I,T,n);case"RAWRESERVE":return(0,r.RAWRESERVE)(I,T,n);case"RAWRESERVEX":return(0,r.RAWRESERVEX)(I,T,n);case"SETCODE":return(0,r.SETCODE)(I,T,n);case"SETLIBCODE":return(0,r.SETLIBCODE)(I,T,n);case"CHANGELIB":return(0,r.CHANGELIB)(I,T,n);case"SENDMSG":return(0,r.SENDMSG)(I,T,n);case"PUSHNULL":return(0,r.PUSHNULL)(I,T,n);case"ISNULL":return(0,r.ISNULL)(I,T,n);case"TUPLEVAR":return(0,r.TUPLEVAR)(I,T,n);case"INDEXVAR":return(0,r.INDEXVAR)(I,T,n);case"UNTUPLEVAR":return(0,r.UNTUPLEVAR)(I,T,n);case"UNPACKFIRSTVAR":return(0,r.UNPACKFIRSTVAR)(I,T,n);case"EXPLODEVAR":return(0,r.EXPLODEVAR)(I,T,n);case"SETINDEXVAR":return(0,r.SETINDEXVAR)(I,T,n);case"INDEXVARQ":return(0,r.INDEXVARQ)(I,T,n);case"SETINDEXVARQ":return(0,r.SETINDEXVARQ)(I,T,n);case"TLEN":return(0,r.TLEN)(I,T,n);case"QTLEN":return(0,r.QTLEN)(I,T,n);case"ISTUPLE":return(0,r.ISTUPLE)(I,T,n);case"LAST":return(0,r.LAST)(I,T,n);case"TPUSH":return(0,r.TPUSH)(I,T,n);case"TPOP":return(0,r.TPOP)(I,T,n);case"NULLSWAPIF":return(0,r.NULLSWAPIF)(I,T,n);case"NULLSWAPIFNOT":return(0,r.NULLSWAPIFNOT)(I,T,n);case"NULLROTRIF":return(0,r.NULLROTRIF)(I,T,n);case"NULLROTRIFNOT":return(0,r.NULLROTRIFNOT)(I,T,n);case"NULLSWAPIF2":return(0,r.NULLSWAPIF2)(I,T,n);case"NULLSWAPIFNOT2":return(0,r.NULLSWAPIFNOT2)(I,T,n);case"NULLROTRIF2":return(0,r.NULLROTRIF2)(I,T,n);case"NULLROTRIFNOT2":return(0,r.NULLROTRIFNOT2)(I,T,n);case"ADDDIVMOD":return(0,r.ADDDIVMOD)(I,T,n);case"ADDDIVMODR":return(0,r.ADDDIVMODR)(I,T,n);case"ADDDIVMODC":return(0,r.ADDDIVMODC)(I,T,n);case"DIV":return(0,r.DIV)(I,T,n);case"DIVR":return(0,r.DIVR)(I,T,n);case"DIVC":return(0,r.DIVC)(I,T,n);case"MOD":return(0,r.MOD)(I,T,n);case"MODR":return(0,r.MODR)(I,T,n);case"MODC":return(0,r.MODC)(I,T,n);case"DIVMOD":return(0,r.DIVMOD)(I,T,n);case"DIVMODR":return(0,r.DIVMODR)(I,T,n);case"DIVMODC":return(0,r.DIVMODC)(I,T,n);case"QADDDIVMOD":return(0,r.QADDDIVMOD)(I,T,n);case"QADDDIVMODR":return(0,r.QADDDIVMODR)(I,T,n);case"QADDDIVMODC":return(0,r.QADDDIVMODC)(I,T,n);case"QDIV":return(0,r.QDIV)(I,T,n);case"QDIVR":return(0,r.QDIVR)(I,T,n);case"QDIVC":return(0,r.QDIVC)(I,T,n);case"QMOD":return(0,r.QMOD)(I,T,n);case"QMODR":return(0,r.QMODR)(I,T,n);case"QMODC":return(0,r.QMODC)(I,T,n);case"QDIVMOD":return(0,r.QDIVMOD)(I,T,n);case"QDIVMODR":return(0,r.QDIVMODR)(I,T,n);case"QDIVMODC":return(0,r.QDIVMODC)(I,T,n);case"ADDRSHIFTMOD":return(0,r.ADDRSHIFTMOD)(I,T,n);case"ADDRSHIFTMODR":return(0,r.ADDRSHIFTMODR)(I,T,n);case"ADDRSHIFTMODC":return(0,r.ADDRSHIFTMODC)(I,T,n);case"RSHIFTR":return(0,r.RSHIFTR)(I,T,n);case"RSHIFTC":return(0,r.RSHIFTC)(I,T,n);case"MODPOW2":return(0,r.MODPOW2)(I,T,n);case"MODPOW2R":return(0,r.MODPOW2R)(I,T,n);case"MODPOW2C":return(0,r.MODPOW2C)(I,T,n);case"RSHIFTMOD":return(0,r.RSHIFTMOD)(I,T,n);case"RSHIFTMODR":return(0,r.RSHIFTMODR)(I,T,n);case"RSHIFTMODC":return(0,r.RSHIFTMODC)(I,T,n);case"QADDRSHIFTMOD":return(0,r.QADDRSHIFTMOD)(I,T,n);case"QADDRSHIFTMODR":return(0,r.QADDRSHIFTMODR)(I,T,n);case"QADDRSHIFTMODC":return(0,r.QADDRSHIFTMODC)(I,T,n);case"QRSHIFTR":return(0,r.QRSHIFTR)(I,T,n);case"QRSHIFTC":return(0,r.QRSHIFTC)(I,T,n);case"QMODPOW2":return(0,r.QMODPOW2)(I,T,n);case"QMODPOW2R":return(0,r.QMODPOW2R)(I,T,n);case"QMODPOW2C":return(0,r.QMODPOW2C)(I,T,n);case"QRSHIFTMOD":return(0,r.QRSHIFTMOD)(I,T,n);case"QRSHIFTMODR":return(0,r.QRSHIFTMODR)(I,T,n);case"QRSHIFTMODC":return(0,r.QRSHIFTMODC)(I,T,n);case"MULADDDIVMOD":return(0,r.MULADDDIVMOD)(I,T,n);case"MULADDDIVMODR":return(0,r.MULADDDIVMODR)(I,T,n);case"MULADDDIVMODC":return(0,r.MULADDDIVMODC)(I,T,n);case"MULDIV":return(0,r.MULDIV)(I,T,n);case"MULDIVR":return(0,r.MULDIVR)(I,T,n);case"MULDIVC":return(0,r.MULDIVC)(I,T,n);case"MULMOD":return(0,r.MULMOD)(I,T,n);case"MULMODR":return(0,r.MULMODR)(I,T,n);case"MULMODC":return(0,r.MULMODC)(I,T,n);case"MULDIVMOD":return(0,r.MULDIVMOD)(I,T,n);case"MULDIVMODR":return(0,r.MULDIVMODR)(I,T,n);case"MULDIVMODC":return(0,r.MULDIVMODC)(I,T,n);case"QMULADDDIVMOD":return(0,r.QMULADDDIVMOD)(I,T,n);case"QMULADDDIVMODR":return(0,r.QMULADDDIVMODR)(I,T,n);case"QMULADDDIVMODC":return(0,r.QMULADDDIVMODC)(I,T,n);case"QMULDIV":return(0,r.QMULDIV)(I,T,n);case"QMULDIVR":return(0,r.QMULDIVR)(I,T,n);case"QMULDIVC":return(0,r.QMULDIVC)(I,T,n);case"QMULMOD":return(0,r.QMULMOD)(I,T,n);case"QMULMODR":return(0,r.QMULMODR)(I,T,n);case"QMULMODC":return(0,r.QMULMODC)(I,T,n);case"QMULDIVMOD":return(0,r.QMULDIVMOD)(I,T,n);case"QMULDIVMODR":return(0,r.QMULDIVMODR)(I,T,n);case"QMULDIVMODC":return(0,r.QMULDIVMODC)(I,T,n);case"MULADDRSHIFTMOD":return(0,r.MULADDRSHIFTMOD)(I,T,n);case"MULADDRSHIFTRMOD":return(0,r.MULADDRSHIFTRMOD)(I,T,n);case"MULADDRSHIFTCMOD":return(0,r.MULADDRSHIFTCMOD)(I,T,n);case"MULRSHIFT":return(0,r.MULRSHIFT)(I,T,n);case"MULRSHIFTR":return(0,r.MULRSHIFTR)(I,T,n);case"MULRSHIFTC":return(0,r.MULRSHIFTC)(I,T,n);case"MULMODPOW2":return(0,r.MULMODPOW2)(I,T,n);case"MULMODPOW2R":return(0,r.MULMODPOW2R)(I,T,n);case"MULMODPOW2C":return(0,r.MULMODPOW2C)(I,T,n);case"MULRSHIFTMOD":return(0,r.MULRSHIFTMOD)(I,T,n);case"MULRSHIFTRMOD":return(0,r.MULRSHIFTRMOD)(I,T,n);case"MULRSHIFTCMOD":return(0,r.MULRSHIFTCMOD)(I,T,n);case"QMULADDRSHIFTMOD":return(0,r.QMULADDRSHIFTMOD)(I,T,n);case"QMULADDRSHIFTRMOD":return(0,r.QMULADDRSHIFTRMOD)(I,T,n);case"QMULADDRSHIFTCMOD":return(0,r.QMULADDRSHIFTCMOD)(I,T,n);case"QMULRSHIFT":return(0,r.QMULRSHIFT)(I,T,n);case"QMULRSHIFTR":return(0,r.QMULRSHIFTR)(I,T,n);case"QMULRSHIFTC":return(0,r.QMULRSHIFTC)(I,T,n);case"QMULMODPOW2":return(0,r.QMULMODPOW2)(I,T,n);case"QMULMODPOW2R":return(0,r.QMULMODPOW2R)(I,T,n);case"QMULMODPOW2C":return(0,r.QMULMODPOW2C)(I,T,n);case"QMULRSHIFTMOD":return(0,r.QMULRSHIFTMOD)(I,T,n);case"QMULRSHIFTRMOD":return(0,r.QMULRSHIFTRMOD)(I,T,n);case"QMULRSHIFTCMOD":return(0,r.QMULRSHIFTCMOD)(I,T,n);case"LSHIFTADDDIVMOD":return(0,r.LSHIFTADDDIVMOD)(I,T,n);case"LSHIFTADDDIVMODR":return(0,r.LSHIFTADDDIVMODR)(I,T,n);case"LSHIFTADDDIVMODC":return(0,r.LSHIFTADDDIVMODC)(I,T,n);case"LSHIFTDIV":return(0,r.LSHIFTDIV)(I,T,n);case"LSHIFTDIVR":return(0,r.LSHIFTDIVR)(I,T,n);case"LSHIFTDIVC":return(0,r.LSHIFTDIVC)(I,T,n);case"LSHIFTMOD":return(0,r.LSHIFTMOD)(I,T,n);case"LSHIFTMODR":return(0,r.LSHIFTMODR)(I,T,n);case"LSHIFTMODC":return(0,r.LSHIFTMODC)(I,T,n);case"LSHIFTDIVMOD":return(0,r.LSHIFTDIVMOD)(I,T,n);case"LSHIFTDIVMODR":return(0,r.LSHIFTDIVMODR)(I,T,n);case"LSHIFTDIVMODC":return(0,r.LSHIFTDIVMODC)(I,T,n);case"QLSHIFTADDDIVMOD":return(0,r.QLSHIFTADDDIVMOD)(I,T,n);case"QLSHIFTADDDIVMODR":return(0,r.QLSHIFTADDDIVMODR)(I,T,n);case"QLSHIFTADDDIVMODC":return(0,r.QLSHIFTADDDIVMODC)(I,T,n);case"QLSHIFTDIV":return(0,r.QLSHIFTDIV)(I,T,n);case"QLSHIFTDIVR":return(0,r.QLSHIFTDIVR)(I,T,n);case"QLSHIFTDIVC":return(0,r.QLSHIFTDIVC)(I,T,n);case"QLSHIFTMOD":return(0,r.QLSHIFTMOD)(I,T,n);case"QLSHIFTMODR":return(0,r.QLSHIFTMODR)(I,T,n);case"QLSHIFTMODC":return(0,r.QLSHIFTMODC)(I,T,n);case"QLSHIFTDIVMOD":return(0,r.QLSHIFTDIVMOD)(I,T,n);case"QLSHIFTDIVMODR":return(0,r.QLSHIFTDIVMODR)(I,T,n);case"QLSHIFTDIVMODC":return(0,r.QLSHIFTDIVMODC)(I,T,n);case"STIX":return(0,r.STIX)(I,T,n);case"STUX":return(0,r.STUX)(I,T,n);case"STIXR":return(0,r.STIXR)(I,T,n);case"STUXR":return(0,r.STUXR)(I,T,n);case"STIXQ":return(0,r.STIXQ)(I,T,n);case"STUXQ":return(0,r.STUXQ)(I,T,n);case"STIXRQ":return(0,r.STIXRQ)(I,T,n);case"STUXRQ":return(0,r.STUXRQ)(I,T,n);case"STILE4":return(0,r.STILE4)(I,T,n);case"STULE4":return(0,r.STULE4)(I,T,n);case"STILE8":return(0,r.STILE8)(I,T,n);case"STULE8":return(0,r.STULE8)(I,T,n);case"LDIX":return(0,r.LDIX)(I,T,n);case"LDUX":return(0,r.LDUX)(I,T,n);case"PLDIX":return(0,r.PLDIX)(I,T,n);case"PLDUX":return(0,r.PLDUX)(I,T,n);case"LDIXQ":return(0,r.LDIXQ)(I,T,n);case"LDUXQ":return(0,r.LDUXQ)(I,T,n);case"PLDIXQ":return(0,r.PLDIXQ)(I,T,n);case"PLDUXQ":return(0,r.PLDUXQ)(I,T,n);case"LDSLICEX":return(0,r.LDSLICEX)(I,T,n);case"PLDSLICEX":return(0,r.PLDSLICEX)(I,T,n);case"LDSLICEXQ":return(0,r.LDSLICEXQ)(I,T,n);case"PLDSLICEXQ":return(0,r.PLDSLICEXQ)(I,T,n);case"LDILE4":return(0,r.LDILE4)(I,T,n);case"LDULE4":return(0,r.LDULE4)(I,T,n);case"LDILE8":return(0,r.LDILE8)(I,T,n);case"LDULE8":return(0,r.LDULE8)(I,T,n);case"PLDILE4":return(0,r.PLDILE4)(I,T,n);case"PLDULE4":return(0,r.PLDULE4)(I,T,n);case"PLDILE8":return(0,r.PLDILE8)(I,T,n);case"PLDULE8":return(0,r.PLDULE8)(I,T,n);case"LDILE4Q":return(0,r.LDILE4Q)(I,T,n);case"LDULE4Q":return(0,r.LDULE4Q)(I,T,n);case"LDILE8Q":return(0,r.LDILE8Q)(I,T,n);case"LDULE8Q":return(0,r.LDULE8Q)(I,T,n);case"PLDILE4Q":return(0,r.PLDILE4Q)(I,T,n);case"PLDULE4Q":return(0,r.PLDULE4Q)(I,T,n);case"PLDILE8Q":return(0,r.PLDILE8Q)(I,T,n);case"PLDULE8Q":return(0,r.PLDULE8Q)(I,T,n);case"DICTIGETJMP":return(0,r.DICTIGETJMP)(I,T,n);case"DICTUGETJMP":return(0,r.DICTUGETJMP)(I,T,n);case"DICTIGETEXEC":return(0,r.DICTIGETEXEC)(I,T,n);case"DICTUGETEXEC":return(0,r.DICTUGETEXEC)(I,T,n);case"DICTIGETJMPZ":return(0,r.DICTIGETJMPZ)(I,T,n);case"DICTUGETJMPZ":return(0,r.DICTUGETJMPZ)(I,T,n);case"DICTIGETEXECZ":return(0,r.DICTIGETEXECZ)(I,T,n);case"DICTUGETEXECZ":return(0,r.DICTUGETEXECZ)(I,T,n);case"DICTGET":return(0,r.DICTGET)(I,T,n);case"DICTGETREF":return(0,r.DICTGETREF)(I,T,n);case"DICTIGET":return(0,r.DICTIGET)(I,T,n);case"DICTIGETREF":return(0,r.DICTIGETREF)(I,T,n);case"DICTUGET":return(0,r.DICTUGET)(I,T,n);case"DICTUGETREF":return(0,r.DICTUGETREF)(I,T,n);case"DICTSET":return(0,r.DICTSET)(I,T,n);case"DICTSETREF":return(0,r.DICTSETREF)(I,T,n);case"DICTISET":return(0,r.DICTISET)(I,T,n);case"DICTISETREF":return(0,r.DICTISETREF)(I,T,n);case"DICTUSET":return(0,r.DICTUSET)(I,T,n);case"DICTUSETREF":return(0,r.DICTUSETREF)(I,T,n);case"DICTSETGET":return(0,r.DICTSETGET)(I,T,n);case"DICTSETGETREF":return(0,r.DICTSETGETREF)(I,T,n);case"DICTISETGET":return(0,r.DICTISETGET)(I,T,n);case"DICTISETGETREF":return(0,r.DICTISETGETREF)(I,T,n);case"DICTUSETGET":return(0,r.DICTUSETGET)(I,T,n);case"DICTUSETGETREF":return(0,r.DICTUSETGETREF)(I,T,n);case"DICTREPLACE":return(0,r.DICTREPLACE)(I,T,n);case"DICTREPLACEREF":return(0,r.DICTREPLACEREF)(I,T,n);case"DICTIREPLACE":return(0,r.DICTIREPLACE)(I,T,n);case"DICTIREPLACEREF":return(0,r.DICTIREPLACEREF)(I,T,n);case"DICTUREPLACE":return(0,r.DICTUREPLACE)(I,T,n);case"DICTUREPLACEREF":return(0,r.DICTUREPLACEREF)(I,T,n);case"DICTREPLACEGET":return(0,r.DICTREPLACEGET)(I,T,n);case"DICTREPLACEGETREF":return(0,r.DICTREPLACEGETREF)(I,T,n);case"DICTIREPLACEGET":return(0,r.DICTIREPLACEGET)(I,T,n);case"DICTIREPLACEGETREF":return(0,r.DICTIREPLACEGETREF)(I,T,n);case"DICTUREPLACEGET":return(0,r.DICTUREPLACEGET)(I,T,n);case"DICTUREPLACEGETREF":return(0,r.DICTUREPLACEGETREF)(I,T,n);case"DICTADD":return(0,r.DICTADD)(I,T,n);case"DICTADDREF":return(0,r.DICTADDREF)(I,T,n);case"DICTIADD":return(0,r.DICTIADD)(I,T,n);case"DICTIADDREF":return(0,r.DICTIADDREF)(I,T,n);case"DICTUADD":return(0,r.DICTUADD)(I,T,n);case"DICTUADDREF":return(0,r.DICTUADDREF)(I,T,n);case"DICTADDGET":return(0,r.DICTADDGET)(I,T,n);case"DICTADDGETREF":return(0,r.DICTADDGETREF)(I,T,n);case"DICTIADDGET":return(0,r.DICTIADDGET)(I,T,n);case"DICTIADDGETREF":return(0,r.DICTIADDGETREF)(I,T,n);case"DICTUADDGET":return(0,r.DICTUADDGET)(I,T,n);case"DICTUADDGETREF":return(0,r.DICTUADDGETREF)(I,T,n);case"DICTDELGET":return(0,r.DICTDELGET)(I,T,n);case"DICTDELGETREF":return(0,r.DICTDELGETREF)(I,T,n);case"DICTIDELGET":return(0,r.DICTIDELGET)(I,T,n);case"DICTIDELGETREF":return(0,r.DICTIDELGETREF)(I,T,n);case"DICTUDELGET":return(0,r.DICTUDELGET)(I,T,n);case"DICTUDELGETREF":return(0,r.DICTUDELGETREF)(I,T,n);case"DICTMIN":return(0,r.DICTMIN)(I,T,n);case"DICTMINREF":return(0,r.DICTMINREF)(I,T,n);case"DICTIMIN":return(0,r.DICTIMIN)(I,T,n);case"DICTIMINREF":return(0,r.DICTIMINREF)(I,T,n);case"DICTUMIN":return(0,r.DICTUMIN)(I,T,n);case"DICTUMINREF":return(0,r.DICTUMINREF)(I,T,n);case"DICTMAX":return(0,r.DICTMAX)(I,T,n);case"DICTMAXREF":return(0,r.DICTMAXREF)(I,T,n);case"DICTIMAX":return(0,r.DICTIMAX)(I,T,n);case"DICTIMAXREF":return(0,r.DICTIMAXREF)(I,T,n);case"DICTUMAX":return(0,r.DICTUMAX)(I,T,n);case"DICTUMAXREF":return(0,r.DICTUMAXREF)(I,T,n);case"DICTREMMIN":return(0,r.DICTREMMIN)(I,T,n);case"DICTREMMINREF":return(0,r.DICTREMMINREF)(I,T,n);case"DICTIREMMIN":return(0,r.DICTIREMMIN)(I,T,n);case"DICTIREMMINREF":return(0,r.DICTIREMMINREF)(I,T,n);case"DICTUREMMIN":return(0,r.DICTUREMMIN)(I,T,n);case"DICTUREMMINREF":return(0,r.DICTUREMMINREF)(I,T,n);case"DICTREMMAX":return(0,r.DICTREMMAX)(I,T,n);case"DICTREMMAXREF":return(0,r.DICTREMMAXREF)(I,T,n);case"DICTIREMMAX":return(0,r.DICTIREMMAX)(I,T,n);case"DICTIREMMAXREF":return(0,r.DICTIREMMAXREF)(I,T,n);case"DICTUREMMAX":return(0,r.DICTUREMMAX)(I,T,n);case"DICTUREMMAXREF":return(0,r.DICTUREMMAXREF)(I,T,n);case"DICTSETB":return(0,r.DICTSETB)(I,T,n);case"DICTISETB":return(0,r.DICTISETB)(I,T,n);case"DICTUSETB":return(0,r.DICTUSETB)(I,T,n);case"DICTSETGETB":return(0,r.DICTSETGETB)(I,T,n);case"DICTISETGETB":return(0,r.DICTISETGETB)(I,T,n);case"DICTUSETGETB":return(0,r.DICTUSETGETB)(I,T,n);case"DICTREPLACEB":return(0,r.DICTREPLACEB)(I,T,n);case"DICTIREPLACEB":return(0,r.DICTIREPLACEB)(I,T,n);case"DICTUREPLACEB":return(0,r.DICTUREPLACEB)(I,T,n);case"DICTREPLACEGETB":return(0,r.DICTREPLACEGETB)(I,T,n);case"DICTIREPLACEGETB":return(0,r.DICTIREPLACEGETB)(I,T,n);case"DICTUREPLACEGETB":return(0,r.DICTUREPLACEGETB)(I,T,n);case"DICTADDB":return(0,r.DICTADDB)(I,T,n);case"DICTIADDB":return(0,r.DICTIADDB)(I,T,n);case"DICTUADDB":return(0,r.DICTUADDB)(I,T,n);case"DICTADDGETB":return(0,r.DICTADDGETB)(I,T,n);case"DICTIADDGETB":return(0,r.DICTIADDGETB)(I,T,n);case"DICTUADDGETB":return(0,r.DICTUADDGETB)(I,T,n);case"DICTDEL":return(0,r.DICTDEL)(I,T,n);case"DICTIDEL":return(0,r.DICTIDEL)(I,T,n);case"DICTUDEL":return(0,r.DICTUDEL)(I,T,n);case"DICTGETOPTREF":return(0,r.DICTGETOPTREF)(I,T,n);case"DICTIGETOPTREF":return(0,r.DICTIGETOPTREF)(I,T,n);case"DICTUGETOPTREF":return(0,r.DICTUGETOPTREF)(I,T,n);case"DICTSETGETOPTREF":return(0,r.DICTSETGETOPTREF)(I,T,n);case"DICTISETGETOPTREF":return(0,r.DICTISETGETOPTREF)(I,T,n);case"DICTUSETGETOPTREF":return(0,r.DICTUSETGETOPTREF)(I,T,n);case"SUBDICTGET":return(0,r.SUBDICTGET)(I,T,n);case"SUBDICTIGET":return(0,r.SUBDICTIGET)(I,T,n);case"SUBDICTUGET":return(0,r.SUBDICTUGET)(I,T,n);case"SUBDICTRPGET":return(0,r.SUBDICTRPGET)(I,T,n);case"SUBDICTIRPGET":return(0,r.SUBDICTIRPGET)(I,T,n);case"SUBDICTURPGET":return(0,r.SUBDICTURPGET)(I,T,n);case"THROWANY":return(0,r.THROWANY)(I,T,n);case"THROWARGANY":return(0,r.THROWARGANY)(I,T,n);case"THROWANYIFNOT":return(0,r.THROWANYIFNOT)(I,T,n);case"THROWARGANYIFNOT":return(0,r.THROWARGANYIFNOT)(I,T,n);case"DICTGETNEXT":return(0,r.DICTGETNEXT)(I,T,n);case"DICTGETNEXTEQ":return(0,r.DICTGETNEXTEQ)(I,T,n);case"DICTGETPREV":return(0,r.DICTGETPREV)(I,T,n);case"DICTGETPREVEQ":return(0,r.DICTGETPREVEQ)(I,T,n);case"DICTIGETNEXT":return(0,r.DICTIGETNEXT)(I,T,n);case"DICTIGETNEXTEQ":return(0,r.DICTIGETNEXTEQ)(I,T,n);case"DICTIGETPREV":return(0,r.DICTIGETPREV)(I,T,n);case"DICTIGETPREVEQ":return(0,r.DICTIGETPREVEQ)(I,T,n);case"DICTUGETNEXT":return(0,r.DICTUGETNEXT)(I,T,n);case"DICTUGETNEXTEQ":return(0,r.DICTUGETNEXTEQ)(I,T,n);case"DICTUGETPREV":return(0,r.DICTUGETPREV)(I,T,n);case"DICTUGETPREVEQ":return(0,r.DICTUGETPREVEQ)(I,T,n);case"ADDINT":return(0,r.ADDINT)(I,T,n);case"MULINT":return(0,r.MULINT)(I,T,n);case"QADDINT":return(0,r.QADDINT)(I,T,n);case"QMULINT":return(0,r.QMULINT)(I,T,n);case"EQINT":return(0,r.EQINT)(I,T,n);case"LESSINT":return(0,r.LESSINT)(I,T,n);case"GTINT":return(0,r.GTINT)(I,T,n);case"NEQINT":return(0,r.NEQINT)(I,T,n);case"QEQINT":return(0,r.QEQINT)(I,T,n);case"QLESSINT":return(0,r.QLESSINT)(I,T,n);case"QGTINT":return(0,r.QGTINT)(I,T,n);case"QNEQINT":return(0,r.QNEQINT)(I,T,n);case"PUSHPOW2DEC":return(0,r.PUSHPOW2DEC)(I,T,n);case"PUSHNEGPOW2":return(0,r.PUSHNEGPOW2)(I,T,n);case"FITS":return(0,r.FITS)(I,T,n);case"UFITS":return(0,r.UFITS)(I,T,n);case"QFITS":return(0,r.QFITS)(I,T,n);case"QUFITS":return(0,r.QUFITS)(I,T,n);case"SETCONTCTRMANY":return(0,r.SETCONTCTRMANY)(I,T,n);case"CALLCCARGS":return(0,r.CALLCCARGS)(I,T,n);case"TRYARGS":return(0,r.TRYARGS)(I,T,n);case"PLDREFIDX":return(0,r.PLDREFIDX)(I,T,n);case"CHASHI":return(0,r.CHASHI)(I,T,n);case"CDEPTHI":return(0,r.CDEPTHI)(I,T,n);case"JMPDICT":return(0,r.JMPDICT)(I,T,n);case"PREPAREDICT":return(0,r.PREPAREDICT)(I,T,n);case"THROWARG":return(0,r.THROWARG)(I,T,n);case"THROWARGIF":return(0,r.THROWARGIF)(I,T,n);case"THROWARGIFNOT":return(0,r.THROWARGIFNOT)(I,T,n);case"JMPXARGS":return(0,r.JMPXARGS)(I,T,n);case"RETARGS":return(0,r.RETARGS)(I,T,n);case"RETURNARGS":return(0,r.RETURNARGS)(I,T,n);case"BLKDROP":return(0,r.BLKDROP)(I,T,n);case"TUPLE":return(0,r.TUPLE)(I,T,n);case"INDEX":return(0,r.INDEX)(I,T,n);case"UNTUPLE":return(0,r.UNTUPLE)(I,T,n);case"UNPACKFIRST":return(0,r.UNPACKFIRST)(I,T,n);case"EXPLODE":return(0,r.EXPLODE)(I,T,n);case"SETINDEX":return(0,r.SETINDEX)(I,T,n);case"INDEXQ":return(0,r.INDEXQ)(I,T,n);case"SETINDEXQ":return(0,r.SETINDEXQ)(I,T,n);case"XC2PU":return(0,r.XC2PU)(I,T,n);case"XCPU2":return(0,r.XCPU2)(I,T,n);case"PUSH3":return(0,r.PUSH3)(I,T,n);case"XCHG2":return(0,r.XCHG2)(I,T,n);case"XCPU":return(0,r.XCPU)(I,T,n);case"PUSH2":return(0,r.PUSH2)(I,T,n);case"PUXC":return(0,r.PUXC)(I,T,n);case"XCPUXC":return(0,r.XCPUXC)(I,T,n);case"PUXC2":return(0,r.PUXC2)(I,T,n);case"PUXCPU":return(0,r.PUXCPU)(I,T,n);case"PU2XC":return(0,r.PU2XC)(I,T,n);case"BLKSWAP":return(0,r.BLKSWAP)(I,T,n);case"REVERSE":return(0,r.REVERSE)(I,T,n);case"SETCONTARGS":return(0,r.SETCONTARGS)(I,T,n);case"BLESSARGS":return(0,r.BLESSARGS)(I,T,n);case"STIR":return(0,r.STIR)(I,T,n);case"STUR":return(0,r.STUR)(I,T,n);case"STIQ":return(0,r.STIQ)(I,T,n);case"STUQ":return(0,r.STUQ)(I,T,n);case"STIRQ":return(0,r.STIRQ)(I,T,n);case"STURQ":return(0,r.STURQ)(I,T,n);case"PLDI":return(0,r.PLDI)(I,T,n);case"PLDU":return(0,r.PLDU)(I,T,n);case"LDIQ":return(0,r.LDIQ)(I,T,n);case"LDUQ":return(0,r.LDUQ)(I,T,n);case"PLDIQ":return(0,r.PLDIQ)(I,T,n);case"PLDUQ":return(0,r.PLDUQ)(I,T,n);case"PLDUZ":return(0,r.PLDUZ)(I,T,n);case"PLDSLICE":return(0,r.PLDSLICE)(I,T,n);case"LDSLICEQ":return(0,r.LDSLICEQ)(I,T,n);case"PLDSLICEQ":return(0,r.PLDSLICEQ)(I,T,n);case"IFBITJMP":return(0,r.IFBITJMP)(I,T,n);case"IFNBITJMP":return(0,r.IFNBITJMP)(I,T,n);case"INDEX2":return(0,r.INDEX2)(I,T,n);case"INDEX3":return(0,r.INDEX3)(I,T,n);case"PUSHPOW2":return(0,r.PUSHPOW2)(I,T,n);case"BLKPUSH":return(0,r.BLKPUSH)(I,T,n);case"BLKDROP2":return(0,r.BLKDROP2)(I,T,n);case"GETGLOB":return(0,r.GETGLOB)(I,T,n);case"SETGLOB":return(0,r.SETGLOB)(I,T,n);case"GETPARAM":return(0,r.GETPARAM)(I,T,n);case"PUSHREF":return(0,r.PUSHREF)(I,T,n);case"PUSHREFSLICE":return(0,r.PUSHREFSLICE)(I,T,n);case"PUSHREFCONT":return(0,r.PUSHREFCONT)(I,T,n);case"CALLREF":return(0,r.CALLREF)(I,T,n);case"JMPREF":return(0,r.JMPREF)(I,T,n);case"JMPREFDATA":return(0,r.JMPREFDATA)(I,T,n);case"IFREF":return(0,r.IFREF)(I,T,n);case"IFNOTREF":return(0,r.IFNOTREF)(I,T,n);case"IFJMPREF":return(0,r.IFJMPREF)(I,T,n);case"IFNOTJMPREF":return(0,r.IFNOTJMPREF)(I,T,n);case"IFREFELSE":return(0,r.IFREFELSE)(I,T,n);case"IFELSEREF":return(0,r.IFELSEREF)(I,T,n);case"IFREFELSEREF":return(0,r.IFREFELSEREF)(I,T,n);case"IFBITJMPREF":return(0,r.IFBITJMPREF)(I,T,n);case"IFNBITJMPREF":return(0,r.IFNBITJMPREF)(I,T,n);case"DICTPUSHCONST":return(0,r.DICTPUSHCONST)(I,T,n);case"PFXDICTSWITCH":return(0,r.PFXDICTSWITCH)(I,T,n);case"SDBEGINSX":return(0,r.SDBEGINSX)(I,T,n);case"SDBEGINSXQ":return(0,r.SDBEGINSXQ)(I,T,n);case"SDBEGINS":return(0,r.SDBEGINS)(I,T,n);case"SDBEGINSQ":return(0,r.SDBEGINSQ)(I,T,n);case"STREFCONST":return(0,r.STREFCONST)(I,T,n);case"STREF2CONST":return(0,r.STREF2CONST)(I,T,n);case"THROWANYIF":return(0,r.THROWANYIF)(I,T,n);case"THROWARGANYIF":return(0,r.THROWARGANYIF)(I,T,n);case"DEBUGSTR":return(0,r.DEBUGSTR)(I,T,n);case"SETCONTCTR":return(0,r.SETCONTCTR)(I,T,n);case"SETRETCTR":return(0,r.SETRETCTR)(I,T,n);case"SETALTCTR":return(0,r.SETALTCTR)(I,T,n);case"POPSAVE":return(0,r.POPSAVE)(I,T,n);case"SAVECTR":return(0,r.SAVECTR)(I,T,n);case"SAVEALTCTR":return(0,r.SAVEALTCTR)(I,T,n);case"SAVEBOTHCTR":return(0,r.SAVEBOTHCTR)(I,T,n);case"RUNVM":return(0,r.RUNVM)(I,T,n);case"SWAP2":return(0,r.SWAP2)(I,T,n);case"DROP2":return(0,r.DROP2)(I,T,n);case"DUP2":return(0,r.DUP2)(I,T,n);case"OVER2":return(0,r.OVER2)(I,T,n);case"ADDRSHIFT_MOD":return(0,r.ADDRSHIFT_MOD)(I,T,n);case"ADDRSHIFTR_MOD":return(0,r.ADDRSHIFTR_MOD)(I,T,n);case"ADDRSHIFTC_MOD":return(0,r.ADDRSHIFTC_MOD)(I,T,n);case"RSHIFT_":return(0,r.RSHIFT_)(I,T,n);case"RSHIFTR_":return(0,r.RSHIFTR_)(I,T,n);case"RSHIFTC_":return(0,r.RSHIFTC_)(I,T,n);case"MODPOW2_":return(0,r.MODPOW2_)(I,T,n);case"MODPOW2R_":return(0,r.MODPOW2R_)(I,T,n);case"MODPOW2C_":return(0,r.MODPOW2C_)(I,T,n);case"RSHIFT_MOD":return(0,r.RSHIFT_MOD)(I,T,n);case"RSHIFTR_MOD":return(0,r.RSHIFTR_MOD)(I,T,n);case"RSHIFTC_MOD":return(0,r.RSHIFTC_MOD)(I,T,n);case"MULADDRSHIFT_MOD":return(0,r.MULADDRSHIFT_MOD)(I,T,n);case"MULADDRSHIFTR_MOD":return(0,r.MULADDRSHIFTR_MOD)(I,T,n);case"MULADDRSHIFTC_MOD":return(0,r.MULADDRSHIFTC_MOD)(I,T,n);case"MULRSHIFT_":return(0,r.MULRSHIFT_)(I,T,n);case"MULRSHIFTR_":return(0,r.MULRSHIFTR_)(I,T,n);case"MULRSHIFTC_":return(0,r.MULRSHIFTC_)(I,T,n);case"MULMODPOW2_":return(0,r.MULMODPOW2_)(I,T,n);case"MULMODPOW2R_":return(0,r.MULMODPOW2R_)(I,T,n);case"MULMODPOW2C_":return(0,r.MULMODPOW2C_)(I,T,n);case"MULRSHIFT_MOD":return(0,r.MULRSHIFT_MOD)(I,T,n);case"MULRSHIFTR_MOD":return(0,r.MULRSHIFTR_MOD)(I,T,n);case"MULRSHIFTC_MOD":return(0,r.MULRSHIFTC_MOD)(I,T,n);case"LSHIFT_ADDDIVMOD":return(0,r.LSHIFT_ADDDIVMOD)(I,T,n);case"LSHIFT_ADDDIVMODR":return(0,r.LSHIFT_ADDDIVMODR)(I,T,n);case"LSHIFT_ADDDIVMODC":return(0,r.LSHIFT_ADDDIVMODC)(I,T,n);case"LSHIFT_DIV":return(0,r.LSHIFT_DIV)(I,T,n);case"LSHIFT_DIVR":return(0,r.LSHIFT_DIVR)(I,T,n);case"LSHIFT_DIVC":return(0,r.LSHIFT_DIVC)(I,T,n);case"LSHIFT_MOD":return(0,r.LSHIFT_MOD)(I,T,n);case"LSHIFT_MODR":return(0,r.LSHIFT_MODR)(I,T,n);case"LSHIFT_MODC":return(0,r.LSHIFT_MODC)(I,T,n);case"LSHIFT_DIVMOD":return(0,r.LSHIFT_DIVMOD)(I,T,n);case"LSHIFT_DIVMODR":return(0,r.LSHIFT_DIVMODR)(I,T,n);case"LSHIFT_DIVMODC":return(0,r.LSHIFT_DIVMODC)(I,T,n);case"HASHEXT":return(0,r.HASHEXT)(I,T,n);case"HASHEXTR":return(0,r.HASHEXTR)(I,T,n);case"HASHEXTA":return(0,r.HASHEXTA)(I,T,n);case"HASHEXTAR":return(0,r.HASHEXTAR)(I,T,n);case"STREF":return(0,r.STREF)(I,T,n);case"STREF_ALT":return(0,r.STREF_ALT)(I,T,n);case"STSLICE":return(0,r.STSLICE)(I,T,n);case"STSLICE_ALT":return(0,r.STSLICE_ALT)(I,T,n);case"XCHG3":return(0,r.XCHG3)(I,T,n);case"XCHG3_ALT":return(0,r.XCHG3_ALT)(I,T,n);case"STI":return(0,r.STI)(I,T,n);case"STI_ALT":return(0,r.STI_ALT)(I,T,n);case"STU":return(0,r.STU)(I,T,n);case"STU_ALT":return(0,r.STU_ALT)(I,T,n);case"LDI":return(0,r.LDI)(I,T,n);case"LDI_ALT":return(0,r.LDI_ALT)(I,T,n);case"LDU":return(0,r.LDU)(I,T,n);case"LDU_ALT":return(0,r.LDU_ALT)(I,T,n);case"LDSLICE":return(0,r.LDSLICE)(I,T,n);case"LDSLICE_ALT":return(0,r.LDSLICE_ALT)(I,T,n);case"LSHIFT_VAR":return(0,r.LSHIFT_VAR)(I,T,n);case"LSHIFT":return(0,r.LSHIFT)(I,T,n);case"QLSHIFT_VAR":return(0,r.QLSHIFT_VAR)(I,T,n);case"QLSHIFT":return(0,r.QLSHIFT)(I,T,n);case"BCHKBITS_VAR":return(0,r.BCHKBITS_VAR)(I,T,n);case"BCHKBITS":return(0,r.BCHKBITS)(I,T,n);case"BCHKBITSQ_VAR":return(0,r.BCHKBITSQ_VAR)(I,T,n);case"BCHKBITSQ":return(0,r.BCHKBITSQ)(I,T,n);case"RSHIFT_VAR":return(0,r.RSHIFT_VAR)(I,T,n);case"RSHIFT":return(0,r.RSHIFT)(I,T,n);case"RSHIFT_ALT":return(0,r.RSHIFT_ALT)(I,T,n);case"QRSHIFT_VAR":return(0,r.QRSHIFT_VAR)(I,T,n);case"QRSHIFT":return(0,r.QRSHIFT)(I,T,n);case"QRSHIFT_ALT":return(0,r.QRSHIFT_ALT)(I,T,n);case"CALLDICT":return(0,r.CALLDICT)(I,T,n);case"CALLDICT_LONG":return(0,r.CALLDICT_LONG)(I,T,n);case"THROW_SHORT":return(0,r.THROW_SHORT)(I,T,n);case"THROW":return(0,r.THROW)(I,T,n);case"THROWIF_SHORT":return(0,r.THROWIF_SHORT)(I,T,n);case"THROWIF":return(0,r.THROWIF)(I,T,n);case"THROWIFNOT_SHORT":return(0,r.THROWIFNOT_SHORT)(I,T,n);case"THROWIFNOT":return(0,r.THROWIFNOT)(I,T,n);case"PUSHINT_4":return(0,r.PUSHINT_4)(I,T,n);case"PUSHINT_8":return(0,r.PUSHINT_8)(I,T,n);case"PUSHINT_16":return(0,r.PUSHINT_16)(I,T,n);case"PUSHINT_LONG":return(0,r.PUSHINT_LONG)(I,T,n);case"XCHG_01_LONG":return(0,r.XCHG_01_LONG)(I,T,n);case"XCHG_0I":return(0,r.XCHG_0I)(I,T,n);case"XCHG_IJ":return(0,r.XCHG_IJ)(I,T,n);case"XCHG_1I":return(0,r.XCHG_1I)(I,T,n);case"DUMPSTK":return(0,r.DUMPSTK)(I,T,n);case"DEBUG":return(0,r.DEBUG)(I,T,n);case"STRDUMP":return(0,r.STRDUMP)(I,T,n);case"DEBUG_1":return(0,r.DEBUG_1)(I,T,n);case"DUMP":return(0,r.DUMP)(I,T,n);case"DEBUG_2":return(0,r.DEBUG_2)(I,T,n);case"PUSHCTR":return(0,r.PUSHCTR)(I,T,n);case"PUSH":return(0,r.PUSH)(I,T,n);case"PUSH_LONG":return(0,r.PUSH_LONG)(I,T,n);case"POPCTR":return(0,r.POPCTR)(I,T,n);case"POP":return(0,r.POP)(I,T,n);case"POP_LONG":return(0,r.POP_LONG)(I,T,n);case"CALLXARGS":return(0,r.CALLXARGS)(I,T,n);case"CALLXARGS_1":return(0,r.CALLXARGS_1)(I,T,n);case"PUSHSLICE":return(0,r.PUSHSLICE)(I,T,n);case"PUSHSLICE_REFS":return(0,r.PUSHSLICE_REFS)(I,T,n);case"PUSHSLICE_LONG":return(0,r.PUSHSLICE_LONG)(I,T,n);case"PUSHCONT":return(0,r.PUSHCONT)(I,T,n);case"PUSHCONT_SHORT":return(0,r.PUSHCONT_SHORT)(I,T,n);case"STSLICECONST":return(0,r.STSLICECONST)(I,T,n);case"SETCP":return(0,r.SETCP)(I,T,n);case"SETCPX":return(0,r.SETCPX)(I,T,n);case"SETCP_SHORT":return(0,r.SETCP_SHORT)(I,T,n);case"DEBUGMARK":return(0,r.DEBUGMARK)(I,T,n)}throw new Error(`Unexpected instruction: ${i}`)};r.convertInstruction=qC}(rr)),rr}var tr={},$e={},wu={},lC;function bu(){return lC||(lC=1,function(r){Object.defineProperty(r,"__esModule",{value:!0}),r.getExpectables=r.printExpectable=r.negate=r.negateExps=r.max=r.ExpSet=r.ExpNamed=r.ExpRange=r.ExpString=r.ExpAny=void 0;const G=()=>({$:"any",negated:!1});r.ExpAny=G;const _=d=>({$:"string",value:d,negated:!1});r.ExpString=_;const S=(d,f)=>({$:"range",from:d,to:f,negated:!1});r.ExpRange=S;const t=d=>({$:"named",name:d,negated:!1});r.ExpNamed=t;const e=d=>f=>({at:f,exps:d});r.ExpSet=e;const a=(d,f)=>d?!f||d.at>f.at?d:d.at<f.at?f:{at:d.at,exps:[...d.exps,...f.exps]}:f;r.max=a;const C=d=>d.map(f=>({...f,negated:!f.negated}));r.negateExps=C;const u=d=>d&&{at:d.at,exps:(0,r.negateExps)(d.exps)};r.negate=u;const o=(d,f)=>(d.negated?"not ":"")+f,A=d=>{switch(d.$){case"any":return d.negated?"end of input":"any character";case"named":return o(d,d.name);case"range":return o(d,JSON.stringify(d.from)+".."+JSON.stringify(d.to));case"string":return o(d,JSON.stringify(d.value))}};r.printExpectable=A;const c=d=>JSON.stringify({...d,negated:!1}),l=c((0,r.ExpNamed)("space")),K=d=>{const f=new Map,p=new Set;for(const v of d){const B=c(v);if(p.has(B))continue;const F=f.get(B);F?F.negated===v.negated||(f.delete(B),p.add(B)):f.set(B,v)}return f.size>1&&f.has(l)&&f.delete(l),new Set([...f.values()].map(r.printExpectable))};r.getExpectables=K}(wu)),wu}var ar={},NC;function ju(){return NC||(NC=1,function(r){var G=ar&&ar.__createBinding||(Object.create?function(Q,V,w,b){b===void 0&&(b=w);var j=Object.getOwnPropertyDescriptor(V,w);(!j||("get"in j?!V.__esModule:j.writable||j.configurable))&&(j={enumerable:!0,get:function(){return V[w]}}),Object.defineProperty(Q,b,j)}:function(Q,V,w,b){b===void 0&&(b=w),Q[b]=V[w]}),_=ar&&ar.__setModuleDefault||(Object.create?function(Q,V){Object.defineProperty(Q,"default",{enumerable:!0,value:V})}:function(Q,V){Q.default=V}),S=ar&&ar.__importStar||function(){var Q=function(V){return Q=Object.getOwnPropertyNames||function(w){var b=[];for(var j in w)Object.prototype.hasOwnProperty.call(w,j)&&(b[b.length]=j);return b},Q(V)};return function(V){if(V&&V.__esModule)return V;var w={};if(V!=null)for(var b=Q(V),j=0;j<b.length;j++)b[j]!=="default"&&G(w,V,b[j]);return _(w,V),w}}();Object.defineProperty(r,"__esModule",{value:!0}),r.where=r.named=r.lookNeg=r.lookPos=r.stry=r.lazy=r.star=r.alt=r.seq=r.app=r.str=r.regex=r.range=r.any=r.terminal=r.createContext=r.failure=r.getSuccess=r.success=void 0;const t=S(bu()),e=Q=>({ok:!0,value:Q});r.success=e;const a=Q=>Q.value;r.getSuccess=a;const C=()=>({ok:!1});r.failure=C;const u=Q=>({s:Q,p:0,l:Q.length,ignoreErrors:!1});r.createContext=u;const o=(Q,V)=>w=>{const b=w.p,j=V(w);return{result:j,exps:j.ok?void 0:t.ExpSet([Q])(b)}};r.terminal=o,r.any=(0,r.terminal)(t.ExpAny(),Q=>{const V=Q.p,w=Q.s[V];return Q.p<Q.l?(Q.p+=1,(0,r.success)(w)):(0,r.failure)()});const A=(Q,V)=>(0,r.terminal)(t.ExpRange(Q,V),w=>{const b=w.p,j=w.s[b];return w.p<w.l&&Q<=j&&j<=V?(w.p+=1,(0,r.success)(j)):(0,r.failure)()});r.range=A;const c=(Q,V)=>{const w=new RegExp(`^[${Q}]$`);return b=>{const j=b.p,ne=b.s[j];return b.p<b.l&&w.test(ne)?(b.p+=1,{result:(0,r.success)(ne),exps:void 0}):{result:(0,r.failure)(),exps:t.ExpSet(V)(j)}}};r.regex=c;const l=Q=>(0,r.terminal)(t.ExpString(Q),V=>{const w=V.p;return V.s.substring(w,w+Q.length)===Q?(V.p+=Q.length,(0,r.success)(Q)):(0,r.failure)()});r.str=l;const K=(Q,V)=>w=>{const b=Q(w);return{result:b.result.ok?(0,r.success)(V(b.result.value)):b.result,exps:b.exps}};r.app=K;const d=(Q,V)=>w=>{const b=Q(w);if(!b.result.ok)return{result:b.result,exps:b.exps};const j=V(w),ne=t.max(b.exps,j.exps);return j.result.ok?{result:(0,r.success)([b.result.value,j.result.value]),exps:ne}:{result:j.result,exps:ne}};r.seq=d;const f=(Q,V)=>w=>{const b=w.p,j=Q(w);if(j.result.ok)return j;w.p=b;const ne=V(w),Ie=t.max(j.exps,ne.exps);return ne.result.ok?{result:ne.result,exps:Ie}:{result:(0,r.failure)(),exps:Ie}};r.alt=f;const p=Q=>V=>{const w=[];let b,j=V.p;for(;;){j=V.p;const ne=Q(V);if(b=b?t.max(b,ne.exps):ne.exps,!ne.result.ok)return V.p=j,{result:(0,r.success)(w),exps:b};w.push((0,r.getSuccess)(ne.result))}};r.star=p;const v=Q=>{let V=null;return w=>(V||(V=Q()))(w)};r.lazy=v;const B=Q=>V=>{const w=V.p,b=Q(V);return{result:b.result.ok?(0,r.success)(V.s.substring(w,V.p)):b.result,exps:b.exps}};r.stry=B;const F=Q=>V=>{const w=V.p,b=Q(V);return V.p=w,b};r.lookPos=F;const N=Q=>{const V=(0,r.lookPos)(Q);return w=>{w.p,w.ignoreErrors=!0;const b=V(w),j=b.result.ok?(0,r.failure)():(0,r.success)(void 0);return w.ignoreErrors=!1,{result:j,exps:t.negate(b.exps)}}};r.lookNeg=N;const P=(Q,V)=>w=>{const b=w.p,j=V(w);return{result:j.result,exps:j.result.ok?void 0:t.ExpSet([t.ExpNamed(Q)])(b)}};r.named=P;const O=Q=>({result:(0,r.success)(Q.p),exps:void 0});r.where=O}(ar)),ar}var Tr={},Ir={},pu={},HC;function bC(){return HC||(HC=1,function(r){Object.defineProperty(r,"__esModule",{value:!0}),r.mergeLoc=r.isEmptyLoc=r.emptyLoc=r.rangeLoc=void 0;const G=(e,a)=>({$:"range",start:e,end:a});r.rangeLoc=G;const _=e=>({$:"empty",at:e});r.emptyLoc=_;const S=e=>e.$==="empty";r.isEmptyLoc=S;const t=(e,a)=>(0,r.isEmptyLoc)(e)?a:(0,r.isEmptyLoc)(a)?e:(0,r.rangeLoc)(e.start,a.end);r.mergeLoc=t}(pu)),pu}var GC;function NA(){return GC||(GC=1,function(r){var G=Ir&&Ir.__createBinding||(Object.create?function(B,F,N,P){P===void 0&&(P=N);var O=Object.getOwnPropertyDescriptor(F,N);(!O||("get"in O?!F.__esModule:O.writable||O.configurable))&&(O={enumerable:!0,get:function(){return F[N]}}),Object.defineProperty(B,P,O)}:function(B,F,N,P){P===void 0&&(P=N),B[P]=F[N]}),_=Ir&&Ir.__setModuleDefault||(Object.create?function(B,F){Object.defineProperty(B,"default",{enumerable:!0,value:F})}:function(B,F){B.default=F}),S=Ir&&Ir.__importStar||function(){var B=function(F){return B=Object.getOwnPropertyNames||function(N){var P=[];for(var O in N)Object.prototype.hasOwnProperty.call(N,O)&&(P[P.length]=O);return P},B(F)};return function(F){if(F&&F.__esModule)return F;var N={};if(F!=null)for(var P=B(F),O=0;O<P.length;O++)P[O]!=="default"&&G(N,F,P[O]);return _(N,F),N}}();Object.defineProperty(r,"__esModule",{value:!0}),r.withLoc=r.where=r.named=r.lookNeg=r.lookPos=r.stry=r.lazy=r.star=r.alt=r.seq=r.app=r.regex=r.str=r.range=r.any=void 0;const t=S(ju()),e=S(bC()),a=B=>F=>{const N=F.p,P=B(F);return P.result.ok?{result:t.success([P.result.value,e.rangeLoc(N,F.p)]),exps:P.exps}:{result:P.result,exps:P.exps}};r.any=a(t.any);const C=(B,F)=>a(t.range(B,F));r.range=C;const u=B=>a(t.str(B));r.str=u;const o=(B,F)=>a(t.regex(B,F));r.regex=o;const A=(B,F)=>t.app(B,([N,P])=>[F(N),P]);r.app=A;const c=(B,F)=>t.app(t.seq(B,F),([[N,P],[O,Q]])=>[[N,O],e.mergeLoc(P,Q)]);r.seq=c,r.alt=t.alt;const l=B=>t.app(t.seq(r.where,t.star(B)),([[F],N])=>[N.map(([P])=>P),N.map(([,P])=>P).reduce(e.mergeLoc,e.emptyLoc(F))]);r.star=l,r.lazy=t.lazy;const K=B=>a(t.stry(B));r.stry=K;const d=B=>t.app(t.seq(t.where,t.lookPos(B)),([F,[N]])=>[N,e.emptyLoc(F)]);r.lookPos=d;const f=B=>t.app(t.seq(t.where,t.lookNeg(B)),([F])=>[void 0,e.emptyLoc(F)]);r.lookNeg=f;const p=(B,F)=>t.named(B,F);r.named=p,r.where=t.app(t.where,B=>[B,e.emptyLoc(B)]);const v=B=>t.app(B,([F,N])=>[[F,N],N]);r.withLoc=v}(Ir)),Ir}var QC;function _C(){return QC||(QC=1,function(r){var G=Tr&&Tr.__createBinding||(Object.create?function(B,F,N,P){P===void 0&&(P=N);var O=Object.getOwnPropertyDescriptor(F,N);(!O||("get"in O?!F.__esModule:O.writable||O.configurable))&&(O={enumerable:!0,get:function(){return F[N]}}),Object.defineProperty(B,P,O)}:function(B,F,N,P){P===void 0&&(P=N),B[P]=F[N]}),_=Tr&&Tr.__setModuleDefault||(Object.create?function(B,F){Object.defineProperty(B,"default",{enumerable:!0,value:F})}:function(B,F){B.default=F}),S=Tr&&Tr.__importStar||function(){var B=function(F){return B=Object.getOwnPropertyNames||function(N){var P=[];for(var O in N)Object.prototype.hasOwnProperty.call(N,O)&&(P[P.length]=O);return P},B(F)};return function(F){if(F&&F.__esModule)return F;var N={};if(F!=null)for(var P=B(F),O=0;O<P.length;O++)P[O]!=="default"&&G(N,F,P[O]);return _(N,F),N}}();Object.defineProperty(r,"__esModule",{value:!0}),r.withLoc=r.where=r.named=r.lookNeg=r.lookPos=r.stry=r.lazy=r.star=r.alt=r.seq=r.app=r.pure=r.lex=r.regex=r.range=r.str=r.any=r.lift2=r.lift1=r.terminal=void 0;const t=S(ju()),e=S(NA()),a=(B,F)=>({keep:F,skip:B}),C=B=>a(F=>t.app(t.seq(B,t.star(F)),([[N,P]])=>[N,P]),B);r.terminal=C;const u=B=>F=>a(N=>B(F.skip(N)),B(F.keep));r.lift1=u;const o=B=>(F,N)=>a(P=>B(F.skip(P),N.skip(P)),B(F.keep,N.keep));r.lift2=o,r.any=(0,r.terminal)(e.any);const A=B=>(0,r.terminal)(e.str(B));r.str=A;const c=(B,F)=>(0,r.terminal)(e.range(B,F));r.range=c;const l=(B,F)=>(0,r.terminal)(e.regex(B,F));r.regex=l;const K=B=>(0,r.terminal)(B.keep);r.lex=K;const d=B=>{const F=e.app(e.where,()=>B);return a(()=>F,F)};r.pure=d;const f=(B,F)=>a(N=>e.app(B.skip(N),F),e.app(B.keep,F));r.app=f,r.seq=(0,r.lift2)(e.seq),r.alt=(0,r.lift2)(e.alt),r.star=(0,r.lift1)(e.star);const p=B=>{let F=null;const N=()=>F||(F=B());return a(P=>O=>N().skip(P)(O),P=>N().keep(P))};r.lazy=p,r.stry=(0,r.lift1)(e.stry),r.lookPos=(0,r.lift1)(e.lookPos),r.lookNeg=(0,r.lift1)(e.lookNeg);const v=(B,F)=>a(N=>e.named(B,F.skip(N)),e.named(B,F.keep));r.named=v,r.where=a(()=>e.where,e.where),r.withLoc=(0,r.lift1)(e.withLoc)}(Tr)),Tr}var pn={},BC;function HA(){if(BC)return pn;BC=1,Object.defineProperty(pn,"__esModule",{value:!0}),pn.singleton=void 0;const r=(G,_)=>({[G]:_});return pn.singleton=r,pn}var fC;function JC(){return fC||(fC=1,function(r){var G=$e&&$e.__createBinding||(Object.create?function(N,P,O,Q){Q===void 0&&(Q=O);var V=Object.getOwnPropertyDescriptor(P,O);(!V||("get"in V?!P.__esModule:V.writable||V.configurable))&&(V={enumerable:!0,get:function(){return P[O]}}),Object.defineProperty(N,Q,V)}:function(N,P,O,Q){Q===void 0&&(Q=O),N[Q]=P[O]}),_=$e&&$e.__setModuleDefault||(Object.create?function(N,P){Object.defineProperty(N,"default",{enumerable:!0,value:P})}:function(N,P){N.default=P}),S=$e&&$e.__importStar||function(){var N=function(P){return N=Object.getOwnPropertyNames||function(O){var Q=[];for(var V in O)Object.prototype.hasOwnProperty.call(O,V)&&(Q[Q.length]=V);return Q},N(P)};return function(P){if(P&&P.__esModule)return P;var O={};if(P!=null)for(var Q=N(P),V=0;V<Q.length;V++)Q[V]!=="default"&&G(O,P,Q[V]);return _(O,P),O}}(),t=$e&&$e.__exportStar||function(N,P){for(var O in N)O!=="default"&&!Object.prototype.hasOwnProperty.call(P,O)&&G(P,N,O)};Object.defineProperty(r,"__esModule",{value:!0}),r.parse=r.ignoreLoc=r.consumesAll=r.skipInitialSpaces=r.loc=r.eof=r.opt=r.eps=r.EPS=r.plus=r.field=r.right=r.left=r.withLoc=r.where=r.terminal=r.stry=r.str=r.star=r.seq=r.regex=r.lazy=r.pure=r.named=r.lookPos=r.lookNeg=r.lex=r.app=r.any=r.alt=void 0;const e=bu(),a=S(ju()),C=S(_C()),u=HA();var o=_C();Object.defineProperty(r,"alt",{enumerable:!0,get:function(){return o.alt}}),Object.defineProperty(r,"any",{enumerable:!0,get:function(){return o.any}}),Object.defineProperty(r,"app",{enumerable:!0,get:function(){return o.app}}),Object.defineProperty(r,"lex",{enumerable:!0,get:function(){return o.lex}}),Object.defineProperty(r,"lookNeg",{enumerable:!0,get:function(){return o.lookNeg}}),Object.defineProperty(r,"lookPos",{enumerable:!0,get:function(){return o.lookPos}}),Object.defineProperty(r,"named",{enumerable:!0,get:function(){return o.named}}),Object.defineProperty(r,"pure",{enumerable:!0,get:function(){return o.pure}}),Object.defineProperty(r,"lazy",{enumerable:!0,get:function(){return o.lazy}}),Object.defineProperty(r,"regex",{enumerable:!0,get:function(){return o.regex}}),Object.defineProperty(r,"seq",{enumerable:!0,get:function(){return o.seq}}),Object.defineProperty(r,"star",{enumerable:!0,get:function(){return o.star}}),Object.defineProperty(r,"str",{enumerable:!0,get:function(){return o.str}}),Object.defineProperty(r,"stry",{enumerable:!0,get:function(){return o.stry}}),Object.defineProperty(r,"terminal",{enumerable:!0,get:function(){return o.terminal}}),Object.defineProperty(r,"where",{enumerable:!0,get:function(){return o.where}}),Object.defineProperty(r,"withLoc",{enumerable:!0,get:function(){return o.withLoc}}),t(bC(),r),t(bu(),r);const A=(N,P)=>C.app(C.seq(N,P),([O,Q])=>O);r.left=A;const c=(N,P)=>C.app(C.seq(N,P),([O,Q])=>Q);r.right=c;const l=(N,P,O)=>C.app(C.seq(N,O),([Q,V])=>({...(0,u.singleton)(P,Q),...V}));r.field=l;const K=N=>C.app(C.seq(N,C.star(N)),([P,O])=>(O.unshift(P),O));r.plus=K,r.EPS=Object.freeze({}),r.eps=C.pure(r.EPS);const d=N=>C.alt(N,C.app(r.eps,()=>{}));r.opt=d,r.eof=C.lookNeg(C.any);const f=N=>C.app(C.withLoc(N),([P,O])=>({...P,loc:O}));r.loc=f;const p=(N,P)=>a.app(a.seq(a.star(P.keep),N.skip(P.keep)),([,O])=>O);r.skipInitialSpaces=p;const v=N=>a.app(a.seq(N,a.lookNeg(a.any)),([P])=>P);r.consumesAll=v;const B=N=>a.app(N,([P])=>P);r.ignoreLoc=B;const F=({text:N,grammar:P,space:O})=>{const Q=a.createContext(N),{result:V,exps:w}=(0,r.ignoreLoc)((0,r.consumesAll)((0,r.skipInitialSpaces)(P,O)))(Q);return V.ok?{$:"success",value:a.getSuccess(V)}:{$:"error",error:{position:w?.at??-1,expected:(0,e.getExpectables)(w?.exps??[])}}};r.parse=F}($e)),$e}var XC;function vC(){return XC||(XC=1,function(r){var G=tr&&tr.__createBinding||(Object.create?function(C,u,o,A){A===void 0&&(A=o);var c=Object.getOwnPropertyDescriptor(u,o);(!c||("get"in c?!u.__esModule:c.writable||c.configurable))&&(c={enumerable:!0,get:function(){return u[o]}}),Object.defineProperty(C,A,c)}:function(C,u,o,A){A===void 0&&(A=o),C[A]=u[o]}),_=tr&&tr.__setModuleDefault||(Object.create?function(C,u){Object.defineProperty(C,"default",{enumerable:!0,value:u})}:function(C,u){C.default=u}),S=tr&&tr.__importStar||function(){var C=function(u){return C=Object.getOwnPropertyNames||function(o){var A=[];for(var c in o)Object.prototype.hasOwnProperty.call(o,c)&&(A[A.length]=c);return A},C(u)};return function(u){if(u&&u.__esModule)return u;var o={};if(u!=null)for(var A=C(u),c=0;c<A.length;c++)A[c]!=="default"&&G(o,u,A[c]);return _(o,u),o}}();Object.defineProperty(r,"__esModule",{value:!0}),r.space=r.comment=r.singleLineComment=r.reservedWord=r.keyword=r.StringLiteral=r.digit=r.binDigit=r.hexDigit=r.underscored=r.IntegerLiteralOct=r.IntegerLiteralBin=r.IntegerLiteralHex=r.IntegerLiteralDec=r.IntegerLiteral=r.BocLiteral=r.BinLiteral=r.HexLiteral=r.DataLiteral=r.Id=r.idPart=r.DefaultExotic=r.ExoticLibrary=r.DictionaryEntry=r.Dictionary=r.Code=r.ControlRegister=r.StackElement=r.Argument=r.instructions=r.Exotic=r.EmbedSlice=r.ExplicitRef=r.Instruction=r.File=void 0;const t=S(JC());r.File=t.loc(t.field(t.pure("File"),"$",t.field(t.lazy(()=>r.instructions),"instructions",t.eps))),r.Instruction=t.loc(t.field(t.pure("Instruction"),"$",t.field(t.lazy(()=>r.Id),"name",t.field(t.star(t.lazy(()=>r.Argument)),"args",t.eps)))),r.ExplicitRef=t.loc(t.field(t.pure("ExplicitRef"),"$",t.right(t.lazy(()=>(0,r.keyword)(t.str("ref"))),t.field(t.lazy(()=>r.Code),"code",t.eps)))),r.EmbedSlice=t.loc(t.field(t.pure("EmbedSlice"),"$",t.right(t.lazy(()=>(0,r.keyword)(t.str("embed"))),t.field(t.lazy(()=>r.DataLiteral),"data",t.eps)))),r.Exotic=t.loc(t.field(t.pure("Exotic"),"$",t.right(t.lazy(()=>(0,r.keyword)(t.str("exotic"))),t.field(t.alt(t.lazy(()=>r.ExoticLibrary),t.lazy(()=>r.DefaultExotic)),"lib",t.eps)))),r.instructions=t.star(t.alt(r.Instruction,t.alt(r.ExplicitRef,t.alt(r.EmbedSlice,r.Exotic)))),r.Argument=t.loc(t.field(t.pure("Argument"),"$",t.field(t.alt(t.lazy(()=>r.IntegerLiteral),t.alt(t.lazy(()=>r.DataLiteral),t.alt(t.lazy(()=>r.Code),t.alt(t.lazy(()=>r.Dictionary),t.alt(t.lazy(()=>r.StackElement),t.lazy(()=>r.ControlRegister)))))),"expression",t.eps))),r.StackElement=t.loc(t.field(t.pure("StackElement"),"$",t.field(t.stry(t.lex(t.right(t.str("s"),t.right(t.opt(t.str("-")),t.right(t.lazy(()=>r.IntegerLiteralDec),t.eps))))),"value",t.eps))),r.ControlRegister=t.loc(t.field(t.pure("ControlRegister"),"$",t.field(t.stry(t.lex(t.right(t.str("c"),t.right(t.lazy(()=>r.IntegerLiteralDec),t.eps)))),"value",t.eps))),r.Code=t.loc(t.field(t.pure("Code"),"$",t.right(t.str("{"),t.field(r.instructions,"instructions",t.right(t.str("}"),t.eps))))),r.Dictionary=t.loc(t.field(t.pure("Dictionary"),"$",t.right(t.str("["),t.field(t.star(t.lazy(()=>r.DictionaryEntry)),"entries",t.right(t.str("]"),t.eps))))),r.DictionaryEntry=t.loc(t.field(t.pure("DictionaryEntry"),"$",t.field(t.lazy(()=>r.IntegerLiteral),"id",t.right(t.str("=>"),t.field(r.Code,"code",t.eps))))),r.ExoticLibrary=t.loc(t.field(t.pure("ExoticLibrary"),"$",t.right(t.lazy(()=>(0,r.keyword)(t.str("library"))),t.field(t.lazy(()=>r.DataLiteral),"data",t.eps)))),r.DefaultExotic=t.loc(t.field(t.pure("DefaultExotic"),"$",t.field(t.lazy(()=>r.DataLiteral),"data",t.eps))),r.idPart=t.named("identifier character",t.regex("a-zA-Z0-9_",[t.ExpRange("a","z"),t.ExpRange("A","Z"),t.ExpRange("0","9"),t.ExpString("_")])),r.Id=t.named("identifier",t.loc(t.field(t.pure("Id"),"$",t.field(t.lex(t.stry(t.right(t.lookNeg(t.lazy(()=>r.reservedWord)),t.right(t.regex("a-zA-Z_",[t.ExpRange("a","z"),t.ExpRange("A","Z"),t.ExpString("_")]),t.right(t.star(r.idPart),t.eps))))),"name",t.eps)))),r.DataLiteral=t.loc(t.field(t.pure("DataLiteral"),"$",t.field(t.alt(t.lazy(()=>r.HexLiteral),t.alt(t.lazy(()=>r.BinLiteral),t.alt(t.lazy(()=>r.BocLiteral),t.lazy(()=>r.StringLiteral)))),"value",t.eps))),r.HexLiteral=t.loc(t.field(t.pure("HexLiteral"),"$",t.right(t.str("x{"),t.field(t.stry(t.right(t.star(t.lazy(()=>r.hexDigit)),t.right(t.opt(t.str("_")),t.eps))),"content",t.right(t.str("}"),t.eps))))),r.BinLiteral=t.loc(t.field(t.pure("BinLiteral"),"$",t.right(t.str("b{"),t.field(t.stry(t.star(t.lazy(()=>r.binDigit))),"content",t.right(t.str("}"),t.eps))))),r.BocLiteral=t.loc(t.field(t.pure("BocLiteral"),"$",t.right(t.str("boc{"),t.field(t.stry(t.star(t.lazy(()=>r.hexDigit))),"content",t.right(t.str("}"),t.eps))))),r.IntegerLiteral=t.loc(t.field(t.pure("IntegerLiteral"),"$",t.field(t.opt(t.str("-")),"op",t.field(t.alt(t.lazy(()=>r.IntegerLiteralHex),t.alt(t.lazy(()=>r.IntegerLiteralBin),t.alt(t.lazy(()=>r.IntegerLiteralOct),t.lazy(()=>r.IntegerLiteralDec)))),"value",t.eps)))),r.IntegerLiteralDec=t.loc(t.field(t.pure("IntegerLiteralDec"),"$",t.field(t.lex(t.lazy(()=>(0,r.underscored)(t.lazy(()=>r.digit)))),"digits",t.eps))),r.IntegerLiteralHex=t.loc(t.field(t.pure("IntegerLiteralHex"),"$",t.field(t.lex(t.stry(t.right(t.str("0"),t.right(t.regex("xX",[t.ExpString("x"),t.ExpString("X")]),t.lazy(()=>(0,r.underscored)(t.lazy(()=>r.hexDigit))))))),"digits",t.eps))),r.IntegerLiteralBin=t.loc(t.field(t.pure("IntegerLiteralBin"),"$",t.field(t.lex(t.stry(t.right(t.str("0"),t.right(t.regex("bB",[t.ExpString("b"),t.ExpString("B")]),t.lazy(()=>(0,r.underscored)(t.lazy(()=>r.binDigit))))))),"digits",t.eps))),r.IntegerLiteralOct=t.loc(t.field(t.pure("IntegerLiteralOct"),"$",t.field(t.lex(t.stry(t.right(t.str("0"),t.right(t.regex("oO",[t.ExpString("o"),t.ExpString("O")]),t.lazy(()=>(0,r.underscored)(t.regex("0-7",[t.ExpRange("0","7")]))))))),"digits",t.eps)));const e=C=>t.stry(t.right(t.lazy(()=>C),t.right(t.star(t.right(t.opt(t.str("_")),t.right(t.lazy(()=>C),t.eps))),t.eps)));r.underscored=e,r.hexDigit=t.named("hexadecimal digit",t.regex("0-9a-fA-F",[t.ExpRange("0","9"),t.ExpRange("a","f"),t.ExpRange("A","F")])),r.binDigit=t.named("binary digit",t.regex("01",[t.ExpString("0"),t.ExpString("1")])),r.digit=t.named("digit",t.regex("0-9",[t.ExpRange("0","9")])),r.StringLiteral=t.loc(t.field(t.pure("StringLiteral"),"$",t.field(t.lex(t.right(t.str('"'),t.left(t.stry(t.star(t.regex('^"\\\\',t.negateExps([t.ExpString('"'),t.ExpString("\\")])))),t.str('"')))),"value",t.eps)));const a=C=>t.lex(t.left(t.lazy(()=>C),t.lookNeg(r.idPart)));r.keyword=a,r.reservedWord=t.named("reserved word",(0,r.keyword)(t.alt(t.str("ref"),t.alt(t.str("embed"),t.alt(t.str("exotic"),t.str("library")))))),r.singleLineComment=t.right(t.str("//"),t.stry(t.star(t.regex("^\\r\\n",t.negateExps([t.ExpString("\r"),t.ExpString(`
`)]))))),r.comment=r.singleLineComment,r.space=t.named("space",t.alt(t.regex(" \\t\\r\\n",[t.ExpString(" "),t.ExpString("	"),t.ExpString("\r"),t.ExpString(`
`)]),r.comment))}(tr)),tr}var ye={},VC;function GA(){if(VC)return ye;VC=1;var r=ye&&ye.__createBinding||(Object.create?function(A,c,l,K){K===void 0&&(K=l);var d=Object.getOwnPropertyDescriptor(c,l);(!d||("get"in d?!c.__esModule:d.writable||d.configurable))&&(d={enumerable:!0,get:function(){return c[l]}}),Object.defineProperty(A,K,d)}:function(A,c,l,K){K===void 0&&(K=l),A[K]=c[l]}),G=ye&&ye.__setModuleDefault||(Object.create?function(A,c){Object.defineProperty(A,"default",{enumerable:!0,value:c})}:function(A,c){A.default=c}),_=ye&&ye.__importStar||function(){var A=function(c){return A=Object.getOwnPropertyNames||function(l){var K=[];for(var d in l)Object.prototype.hasOwnProperty.call(l,d)&&(K[K.length]=d);return K},A(c)};return function(c){if(c&&c.__esModule)return c;var l={};if(c!=null)for(var K=A(c),d=0;d<K.length;d++)K[d]!=="default"&&r(l,c,K[d]);return G(l,c),l}}();Object.defineProperty(ye,"__esModule",{value:!0}),ye.parse=u;const S=_(JC()),t=_(vC()),e=rt(),a=A=>({$:"ParseSuccess",instructions:A}),C=A=>({$:"ParseFailure",error:A});function u(A,c){const K={lines:c.split(`
`),filepath:A},d=S.parse({grammar:t.File,space:t.space,text:c});if(d.$!=="success"){const{expected:f,position:p}=d.error,v=(0,e.createLoc)(K,{$:"empty",at:p});return C(new e.ParseError(v,`Expected ${o(f)}`))}try{return a((0,e.processInstructions)(K,d.value.instructions))}catch(f){if(f instanceof e.ParseError)return C(f);throw f}}const o=A=>{const c=[],l=[...A].sort();for(const[K,d]of l.entries())K>0&&(K===l.length-1?c.push(l.length>2?", or ":" or "):c.push(", ")),c.push(d);return c.join("")};return ye}var Yu={},We={},$C;function jC(){if($C)return We;$C=1;var r=We&&We.__createBinding||(Object.create?function(e,a,C,u){u===void 0&&(u=C);var o=Object.getOwnPropertyDescriptor(a,C);(!o||("get"in o?!a.__esModule:o.writable||o.configurable))&&(o={enumerable:!0,get:function(){return a[C]}}),Object.defineProperty(e,u,o)}:function(e,a,C,u){u===void 0&&(u=C),e[u]=a[C]}),G=We&&We.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:!0,value:a})}:function(e,a){e.default=a}),_=We&&We.__importStar||function(){var e=function(a){return e=Object.getOwnPropertyNames||function(C){var u=[];for(var o in C)Object.prototype.hasOwnProperty.call(C,o)&&(u[u.length]=o);return u},e(a)};return function(a){if(a&&a.__esModule)return a;var C={};if(a!=null)for(var u=e(a),o=0;o<u.length;o++)u[o]!=="default"&&r(C,a,u[o]);return G(C,a),C}}();Object.defineProperty(We,"__esModule",{value:!0}),We.printInstruction=void 0;const S=_(zC()),t=(e,a)=>{switch(e.beginLine(a.$),a.$){case"PUSHNAN":return;case"ADD":return;case"SUB":return;case"SUBR":return;case"NEGATE":return;case"INC":return;case"DEC":return;case"MUL":return;case"POW2":return;case"AND":return;case"OR":return;case"XOR":return;case"NOT":return;case"FITSX":return;case"UFITSX":return;case"BITSIZE":return;case"UBITSIZE":return;case"MIN":return;case"MAX":return;case"MINMAX":return;case"ABS":return;case"QADD":return;case"QSUB":return;case"QSUBR":return;case"QNEGATE":return;case"QINC":return;case"QDEC":return;case"QMUL":return;case"QPOW2":return;case"QAND":return;case"QOR":return;case"QXOR":return;case"QNOT":return;case"QFITSX":return;case"QUFITSX":return;case"QBITSIZE":return;case"QUBITSIZE":return;case"QMIN":return;case"QMAX":return;case"QMINMAX":return;case"QABS":return;case"SGN":return;case"LESS":return;case"EQUAL":return;case"LEQ":return;case"GREATER":return;case"NEQ":return;case"GEQ":return;case"CMP":return;case"ISNAN":return;case"CHKNAN":return;case"QSGN":return;case"QLESS":return;case"QEQUAL":return;case"QLEQ":return;case"QGREATER":return;case"QNEQ":return;case"QGEQ":return;case"QCMP":return;case"SEMPTY":return;case"SDEMPTY":return;case"SREMPTY":return;case"SDFIRST":return;case"SDLEXCMP":return;case"SDEQ":return;case"SDPFX":return;case"SDPFXREV":return;case"SDPPFX":return;case"SDPPFXREV":return;case"SDSFX":return;case"SDSFXREV":return;case"SDPSFX":return;case"SDPSFXREV":return;case"SDCNTLEAD0":return;case"SDCNTLEAD1":return;case"SDCNTTRAIL0":return;case"SDCNTTRAIL1":return;case"NEWC":return;case"ENDC":return;case"ENDCST":return;case"STBREF":return;case"STB":return;case"STREFR":return;case"STBREFR":return;case"STSLICER":return;case"STBR":return;case"STREFQ":return;case"STBREFQ":return;case"STSLICEQ":return;case"STBQ":return;case"STREFRQ":return;case"STBREFRQ":return;case"STSLICERQ":return;case"STBRQ":return;case"ENDXC":return;case"BDEPTH":return;case"BBITS":return;case"BREFS":return;case"BBITREFS":return;case"BREMBITS":return;case"BREMREFS":return;case"BREMBITREFS":return;case"BCHKREFS":return;case"BCHKBITREFS":return;case"BCHKREFSQ":return;case"BCHKBITREFSQ":return;case"STZEROES":return;case"STONES":return;case"STSAME":return;case"CTOS":return;case"ENDS":return;case"LDREF":return;case"LDREFRTOS":return;case"SDCUTFIRST":return;case"SDSKIPFIRST":return;case"SDCUTLAST":return;case"SDSKIPLAST":return;case"SDSUBSTR":return;case"SCUTFIRST":return;case"SSKIPFIRST":return;case"SCUTLAST":return;case"SSKIPLAST":return;case"SUBSLICE":return;case"SPLIT":return;case"SPLITQ":return;case"XCTOS":return;case"XLOAD":return;case"XLOADQ":return;case"SCHKBITS":return;case"SCHKREFS":return;case"SCHKBITREFS":return;case"SCHKBITSQ":return;case"SCHKREFSQ":return;case"SCHKBITREFSQ":return;case"PLDREFVAR":return;case"SBITS":return;case"SREFS":return;case"SBITREFS":return;case"LDZEROES":return;case"LDONES":return;case"LDSAME":return;case"SDEPTH":return;case"CDEPTH":return;case"CLEVEL":return;case"CLEVELMASK":return;case"CHASHIX":return;case"CDEPTHIX":return;case"EXECUTE":return;case"JMPX":return;case"RET":return;case"RETALT":return;case"RETBOOL":return;case"CALLCC":return;case"JMPXDATA":return;case"CALLXVARARGS":return;case"RETVARARGS":return;case"JMPXVARARGS":return;case"CALLCCVARARGS":return;case"RETDATA":return;case"RUNVMX":return;case"IFRET":return;case"IFNOTRET":return;case"IF":return;case"IFNOT":return;case"IFJMP":return;case"IFNOTJMP":return;case"IFELSE":return;case"CONDSEL":return;case"CONDSELCHK":return;case"IFRETALT":return;case"IFNOTRETALT":return;case"REPEAT":return;case"REPEATEND":return;case"UNTIL":return;case"UNTILEND":return;case"WHILE":return;case"WHILEEND":return;case"AGAIN":return;case"AGAINEND":return;case"REPEATBRK":return;case"REPEATENDBRK":return;case"UNTILBRK":return;case"UNTILENDBRK":return;case"WHILEBRK":return;case"WHILEENDBRK":return;case"AGAINBRK":return;case"AGAINENDBRK":return;case"RETURNVARARGS":return;case"SETCONTVARARGS":return;case"SETNUMVARARGS":return;case"BLESS":return;case"BLESSVARARGS":return;case"PUSHCTRX":return;case"POPCTRX":return;case"SETCONTCTRX":return;case"SETCONTCTRMANYX":return;case"BOOLAND":return;case"BOOLOR":return;case"COMPOSBOTH":return;case"ATEXIT":return;case"ATEXITALT":return;case"SETEXITALT":return;case"THENRET":return;case"THENRETALT":return;case"INVERT":return;case"BOOLEVAL":return;case"SAMEALT":return;case"SAMEALTSAVE":return;case"TRY":return;case"STDICT":return;case"SKIPDICT":return;case"LDDICTS":return;case"PLDDICTS":return;case"LDDICT":return;case"PLDDICT":return;case"LDDICTQ":return;case"PLDDICTQ":return;case"PFXDICTSET":return;case"PFXDICTREPLACE":return;case"PFXDICTADD":return;case"PFXDICTDEL":return;case"PFXDICTGETQ":return;case"PFXDICTGET":return;case"PFXDICTGETJMP":return;case"PFXDICTGETEXEC":return;case"NOP":return;case"SWAP":return;case"DUP":return;case"OVER":return;case"DROP":return;case"NIP":return;case"ROT":return;case"ROTREV":return;case"PICK":return;case"ROLL":return;case"ROLLREV":return;case"BLKSWX":return;case"REVX":return;case"DROPX":return;case"TUCK":return;case"XCHGX":return;case"DEPTH":return;case"CHKDEPTH":return;case"ONLYTOPX":return;case"ONLYX":return;case"ACCEPT":return;case"SETGASLIMIT":return;case"GASCONSUMED":return;case"COMMIT":return;case"NOW":return;case"BLOCKLT":return;case"LTIME":return;case"RANDSEED":return;case"BALANCE":return;case"MYADDR":return;case"CONFIGROOT":return;case"MYCODE":return;case"INCOMINGVALUE":return;case"STORAGEFEES":return;case"PREVBLOCKSINFOTUPLE":return;case"UNPACKEDCONFIGTUPLE":return;case"DUEPAYMENT":return;case"CONFIGDICT":return;case"CONFIGPARAM":return;case"CONFIGOPTPARAM":return;case"PREVMCBLOCKS":return;case"PREVKEYBLOCK":return;case"PREVMCBLOCKS_100":return;case"GLOBALID":return;case"GETGASFEE":return;case"GETSTORAGEFEE":return;case"GETFORWARDFEE":return;case"GETPRECOMPILEDGAS":return;case"GETORIGINALFWDFEE":return;case"GETGASFEESIMPLE":return;case"GETFORWARDFEESIMPLE":return;case"GETGLOBVAR":return;case"SETGLOBVAR":return;case"RANDU256":return;case"RAND":return;case"SETRAND":return;case"ADDRAND":return;case"HASHCU":return;case"HASHSU":return;case"SHA256U":return;case"CHKSIGNU":return;case"CHKSIGNS":return;case"ECRECOVER":return;case"SECP256K1_XONLY_PUBKEY_TWEAK_ADD":return;case"P256_CHKSIGNU":return;case"P256_CHKSIGNS":return;case"RIST255_FROMHASH":return;case"RIST255_VALIDATE":return;case"RIST255_ADD":return;case"RIST255_SUB":return;case"RIST255_MUL":return;case"RIST255_MULBASE":return;case"RIST255_PUSHL":return;case"RIST255_QVALIDATE":return;case"RIST255_QADD":return;case"RIST255_QSUB":return;case"RIST255_QMUL":return;case"RIST255_QMULBASE":return;case"BLS_VERIFY":return;case"BLS_AGGREGATE":return;case"BLS_FASTAGGREGATEVERIFY":return;case"BLS_AGGREGATEVERIFY":return;case"BLS_G1_ADD":return;case"BLS_G1_SUB":return;case"BLS_G1_NEG":return;case"BLS_G1_MUL":return;case"BLS_G1_MULTIEXP":return;case"BLS_G1_ZERO":return;case"BLS_MAP_TO_G1":return;case"BLS_G1_INGROUP":return;case"BLS_G1_ISZERO":return;case"BLS_G2_ADD":return;case"BLS_G2_SUB":return;case"BLS_G2_NEG":return;case"BLS_G2_MUL":return;case"BLS_G2_MULTIEXP":return;case"BLS_G2_ZERO":return;case"BLS_MAP_TO_G2":return;case"BLS_G2_INGROUP":return;case"BLS_G2_ISZERO":return;case"BLS_PAIRING":return;case"BLS_PUSHR":return;case"CDATASIZEQ":return;case"CDATASIZE":return;case"SDATASIZEQ":return;case"SDATASIZE":return;case"LDGRAMS":return;case"LDVARINT16":return;case"STGRAMS":return;case"STVARINT16":return;case"LDVARUINT32":return;case"LDVARINT32":return;case"STVARUINT32":return;case"STVARINT32":return;case"LDMSGADDR":return;case"LDMSGADDRQ":return;case"PARSEMSGADDR":return;case"PARSEMSGADDRQ":return;case"REWRITESTDADDR":return;case"REWRITESTDADDRQ":return;case"REWRITEVARADDR":return;case"REWRITEVARADDRQ":return;case"SENDRAWMSG":return;case"RAWRESERVE":return;case"RAWRESERVEX":return;case"SETCODE":return;case"SETLIBCODE":return;case"CHANGELIB":return;case"SENDMSG":return;case"PUSHNULL":return;case"ISNULL":return;case"TUPLEVAR":return;case"INDEXVAR":return;case"UNTUPLEVAR":return;case"UNPACKFIRSTVAR":return;case"EXPLODEVAR":return;case"SETINDEXVAR":return;case"INDEXVARQ":return;case"SETINDEXVARQ":return;case"TLEN":return;case"QTLEN":return;case"ISTUPLE":return;case"LAST":return;case"TPUSH":return;case"TPOP":return;case"NULLSWAPIF":return;case"NULLSWAPIFNOT":return;case"NULLROTRIF":return;case"NULLROTRIFNOT":return;case"NULLSWAPIF2":return;case"NULLSWAPIFNOT2":return;case"NULLROTRIF2":return;case"NULLROTRIFNOT2":return;case"ADDDIVMOD":return;case"ADDDIVMODR":return;case"ADDDIVMODC":return;case"DIV":return;case"DIVR":return;case"DIVC":return;case"MOD":return;case"MODR":return;case"MODC":return;case"DIVMOD":return;case"DIVMODR":return;case"DIVMODC":return;case"QADDDIVMOD":return;case"QADDDIVMODR":return;case"QADDDIVMODC":return;case"QDIV":return;case"QDIVR":return;case"QDIVC":return;case"QMOD":return;case"QMODR":return;case"QMODC":return;case"QDIVMOD":return;case"QDIVMODR":return;case"QDIVMODC":return;case"ADDRSHIFTMOD":return;case"ADDRSHIFTMODR":return;case"ADDRSHIFTMODC":return;case"RSHIFTR":return;case"RSHIFTC":return;case"MODPOW2":return;case"MODPOW2R":return;case"MODPOW2C":return;case"RSHIFTMOD":return;case"RSHIFTMODR":return;case"RSHIFTMODC":return;case"QADDRSHIFTMOD":return;case"QADDRSHIFTMODR":return;case"QADDRSHIFTMODC":return;case"QRSHIFTR":return;case"QRSHIFTC":return;case"QMODPOW2":return;case"QMODPOW2R":return;case"QMODPOW2C":return;case"QRSHIFTMOD":return;case"QRSHIFTMODR":return;case"QRSHIFTMODC":return;case"MULADDDIVMOD":return;case"MULADDDIVMODR":return;case"MULADDDIVMODC":return;case"MULDIV":return;case"MULDIVR":return;case"MULDIVC":return;case"MULMOD":return;case"MULMODR":return;case"MULMODC":return;case"MULDIVMOD":return;case"MULDIVMODR":return;case"MULDIVMODC":return;case"QMULADDDIVMOD":return;case"QMULADDDIVMODR":return;case"QMULADDDIVMODC":return;case"QMULDIV":return;case"QMULDIVR":return;case"QMULDIVC":return;case"QMULMOD":return;case"QMULMODR":return;case"QMULMODC":return;case"QMULDIVMOD":return;case"QMULDIVMODR":return;case"QMULDIVMODC":return;case"MULADDRSHIFTMOD":return;case"MULADDRSHIFTRMOD":return;case"MULADDRSHIFTCMOD":return;case"MULRSHIFT":return;case"MULRSHIFTR":return;case"MULRSHIFTC":return;case"MULMODPOW2":return;case"MULMODPOW2R":return;case"MULMODPOW2C":return;case"MULRSHIFTMOD":return;case"MULRSHIFTRMOD":return;case"MULRSHIFTCMOD":return;case"QMULADDRSHIFTMOD":return;case"QMULADDRSHIFTRMOD":return;case"QMULADDRSHIFTCMOD":return;case"QMULRSHIFT":return;case"QMULRSHIFTR":return;case"QMULRSHIFTC":return;case"QMULMODPOW2":return;case"QMULMODPOW2R":return;case"QMULMODPOW2C":return;case"QMULRSHIFTMOD":return;case"QMULRSHIFTRMOD":return;case"QMULRSHIFTCMOD":return;case"LSHIFTADDDIVMOD":return;case"LSHIFTADDDIVMODR":return;case"LSHIFTADDDIVMODC":return;case"LSHIFTDIV":return;case"LSHIFTDIVR":return;case"LSHIFTDIVC":return;case"LSHIFTMOD":return;case"LSHIFTMODR":return;case"LSHIFTMODC":return;case"LSHIFTDIVMOD":return;case"LSHIFTDIVMODR":return;case"LSHIFTDIVMODC":return;case"QLSHIFTADDDIVMOD":return;case"QLSHIFTADDDIVMODR":return;case"QLSHIFTADDDIVMODC":return;case"QLSHIFTDIV":return;case"QLSHIFTDIVR":return;case"QLSHIFTDIVC":return;case"QLSHIFTMOD":return;case"QLSHIFTMODR":return;case"QLSHIFTMODC":return;case"QLSHIFTDIVMOD":return;case"QLSHIFTDIVMODR":return;case"QLSHIFTDIVMODC":return;case"STIX":return;case"STUX":return;case"STIXR":return;case"STUXR":return;case"STIXQ":return;case"STUXQ":return;case"STIXRQ":return;case"STUXRQ":return;case"STILE4":return;case"STULE4":return;case"STILE8":return;case"STULE8":return;case"LDIX":return;case"LDUX":return;case"PLDIX":return;case"PLDUX":return;case"LDIXQ":return;case"LDUXQ":return;case"PLDIXQ":return;case"PLDUXQ":return;case"LDSLICEX":return;case"PLDSLICEX":return;case"LDSLICEXQ":return;case"PLDSLICEXQ":return;case"LDILE4":return;case"LDULE4":return;case"LDILE8":return;case"LDULE8":return;case"PLDILE4":return;case"PLDULE4":return;case"PLDILE8":return;case"PLDULE8":return;case"LDILE4Q":return;case"LDULE4Q":return;case"LDILE8Q":return;case"LDULE8Q":return;case"PLDILE4Q":return;case"PLDULE4Q":return;case"PLDILE8Q":return;case"PLDULE8Q":return;case"DICTIGETJMP":return;case"DICTUGETJMP":return;case"DICTIGETEXEC":return;case"DICTUGETEXEC":return;case"DICTIGETJMPZ":return;case"DICTUGETJMPZ":return;case"DICTIGETEXECZ":return;case"DICTUGETEXECZ":return;case"DICTGET":return;case"DICTGETREF":return;case"DICTIGET":return;case"DICTIGETREF":return;case"DICTUGET":return;case"DICTUGETREF":return;case"DICTSET":return;case"DICTSETREF":return;case"DICTISET":return;case"DICTISETREF":return;case"DICTUSET":return;case"DICTUSETREF":return;case"DICTSETGET":return;case"DICTSETGETREF":return;case"DICTISETGET":return;case"DICTISETGETREF":return;case"DICTUSETGET":return;case"DICTUSETGETREF":return;case"DICTREPLACE":return;case"DICTREPLACEREF":return;case"DICTIREPLACE":return;case"DICTIREPLACEREF":return;case"DICTUREPLACE":return;case"DICTUREPLACEREF":return;case"DICTREPLACEGET":return;case"DICTREPLACEGETREF":return;case"DICTIREPLACEGET":return;case"DICTIREPLACEGETREF":return;case"DICTUREPLACEGET":return;case"DICTUREPLACEGETREF":return;case"DICTADD":return;case"DICTADDREF":return;case"DICTIADD":return;case"DICTIADDREF":return;case"DICTUADD":return;case"DICTUADDREF":return;case"DICTADDGET":return;case"DICTADDGETREF":return;case"DICTIADDGET":return;case"DICTIADDGETREF":return;case"DICTUADDGET":return;case"DICTUADDGETREF":return;case"DICTDELGET":return;case"DICTDELGETREF":return;case"DICTIDELGET":return;case"DICTIDELGETREF":return;case"DICTUDELGET":return;case"DICTUDELGETREF":return;case"DICTMIN":return;case"DICTMINREF":return;case"DICTIMIN":return;case"DICTIMINREF":return;case"DICTUMIN":return;case"DICTUMINREF":return;case"DICTMAX":return;case"DICTMAXREF":return;case"DICTIMAX":return;case"DICTIMAXREF":return;case"DICTUMAX":return;case"DICTUMAXREF":return;case"DICTREMMIN":return;case"DICTREMMINREF":return;case"DICTIREMMIN":return;case"DICTIREMMINREF":return;case"DICTUREMMIN":return;case"DICTUREMMINREF":return;case"DICTREMMAX":return;case"DICTREMMAXREF":return;case"DICTIREMMAX":return;case"DICTIREMMAXREF":return;case"DICTUREMMAX":return;case"DICTUREMMAXREF":return;case"DICTSETB":return;case"DICTISETB":return;case"DICTUSETB":return;case"DICTSETGETB":return;case"DICTISETGETB":return;case"DICTUSETGETB":return;case"DICTREPLACEB":return;case"DICTIREPLACEB":return;case"DICTUREPLACEB":return;case"DICTREPLACEGETB":return;case"DICTIREPLACEGETB":return;case"DICTUREPLACEGETB":return;case"DICTADDB":return;case"DICTIADDB":return;case"DICTUADDB":return;case"DICTADDGETB":return;case"DICTIADDGETB":return;case"DICTUADDGETB":return;case"DICTDEL":return;case"DICTIDEL":return;case"DICTUDEL":return;case"DICTGETOPTREF":return;case"DICTIGETOPTREF":return;case"DICTUGETOPTREF":return;case"DICTSETGETOPTREF":return;case"DICTISETGETOPTREF":return;case"DICTUSETGETOPTREF":return;case"SUBDICTGET":return;case"SUBDICTIGET":return;case"SUBDICTUGET":return;case"SUBDICTRPGET":return;case"SUBDICTIRPGET":return;case"SUBDICTURPGET":return;case"THROWANY":return;case"THROWARGANY":return;case"THROWANYIFNOT":return;case"THROWARGANYIFNOT":return;case"DICTGETNEXT":return;case"DICTGETNEXTEQ":return;case"DICTGETPREV":return;case"DICTGETPREVEQ":return;case"DICTIGETNEXT":return;case"DICTIGETNEXTEQ":return;case"DICTIGETPREV":return;case"DICTIGETPREVEQ":return;case"DICTUGETNEXT":return;case"DICTUGETNEXTEQ":return;case"DICTUGETPREV":return;case"DICTUGETPREVEQ":return;case"ADDINT":e.append(" "),e.append(a.arg0.toString());return;case"MULINT":e.append(" "),e.append(a.arg0.toString());return;case"QADDINT":e.append(" "),e.append(a.arg0.toString());return;case"QMULINT":e.append(" "),e.append(a.arg0.toString());return;case"EQINT":e.append(" "),e.append(a.arg0.toString());return;case"LESSINT":e.append(" "),e.append(a.arg0.toString());return;case"GTINT":e.append(" "),e.append(a.arg0.toString());return;case"NEQINT":e.append(" "),e.append(a.arg0.toString());return;case"QEQINT":e.append(" "),e.append(a.arg0.toString());return;case"QLESSINT":e.append(" "),e.append(a.arg0.toString());return;case"QGTINT":e.append(" "),e.append(a.arg0.toString());return;case"QNEQINT":e.append(" "),e.append(a.arg0.toString());return;case"PUSHPOW2DEC":e.append(" "),e.append(a.arg0.toString());return;case"PUSHNEGPOW2":e.append(" "),e.append(a.arg0.toString());return;case"FITS":e.append(" "),e.append(a.arg0.toString());return;case"UFITS":e.append(" "),e.append(a.arg0.toString());return;case"QFITS":e.append(" "),e.append(a.arg0.toString());return;case"QUFITS":e.append(" "),e.append(a.arg0.toString());return;case"SETCONTCTRMANY":e.append(" "),e.append(a.arg0.toString());return;case"CALLCCARGS":e.append(" "),e.append(a.arg0.toString()),e.append(" "),e.append(a.arg1.toString());return;case"TRYARGS":e.append(" "),e.append(a.arg0.toString()),e.append(" "),e.append(a.arg1.toString());return;case"PLDREFIDX":e.append(" "),e.append(a.arg0.toString());return;case"CHASHI":e.append(" "),e.append(a.arg0.toString());return;case"CDEPTHI":e.append(" "),e.append(a.arg0.toString());return;case"JMPDICT":e.append(" "),e.append(a.arg0.toString());return;case"PREPAREDICT":e.append(" "),e.append(a.arg0.toString());return;case"THROWARG":e.append(" "),e.append(a.arg0.toString());return;case"THROWARGIF":e.append(" "),e.append(a.arg0.toString());return;case"THROWARGIFNOT":e.append(" "),e.append(a.arg0.toString());return;case"JMPXARGS":e.append(" "),e.append(a.arg0.toString());return;case"RETARGS":e.append(" "),e.append(a.arg0.toString());return;case"RETURNARGS":e.append(" "),e.append(a.arg0.toString());return;case"BLKDROP":e.append(" "),e.append(a.arg0.toString());return;case"TUPLE":e.append(" "),e.append(a.arg0.toString());return;case"INDEX":e.append(" "),e.append(a.arg0.toString());return;case"UNTUPLE":e.append(" "),e.append(a.arg0.toString());return;case"UNPACKFIRST":e.append(" "),e.append(a.arg0.toString());return;case"EXPLODE":e.append(" "),e.append(a.arg0.toString());return;case"SETINDEX":e.append(" "),e.append(a.arg0.toString());return;case"INDEXQ":e.append(" "),e.append(a.arg0.toString());return;case"SETINDEXQ":e.append(" "),e.append(a.arg0.toString());return;case"XC2PU":e.append(" "),e.append("s"),e.append(a.arg0.toString()),e.append(" "),e.append("s"),e.append(a.arg1.toString()),e.append(" "),e.append("s"),e.append(a.arg2.toString());return;case"XCPU2":e.append(" "),e.append("s"),e.append(a.arg0.toString()),e.append(" "),e.append("s"),e.append(a.arg1.toString()),e.append(" "),e.append("s"),e.append(a.arg2.toString());return;case"PUSH3":e.append(" "),e.append("s"),e.append(a.arg0.toString()),e.append(" "),e.append("s"),e.append(a.arg1.toString()),e.append(" "),e.append("s"),e.append(a.arg2.toString());return;case"XCHG2":e.append(" "),e.append("s"),e.append(a.arg0.toString()),e.append(" "),e.append("s"),e.append(a.arg1.toString());return;case"XCPU":e.append(" "),e.append("s"),e.append(a.arg0.toString()),e.append(" "),e.append("s"),e.append(a.arg1.toString());return;case"PUSH2":e.append(" "),e.append("s"),e.append(a.arg0.toString()),e.append(" "),e.append("s"),e.append(a.arg1.toString());return;case"PUXC":e.append(" "),e.append("s"),e.append(a.arg0.toString()),e.append(" "),e.append("s"),e.append(a.arg1.toString());return;case"XCPUXC":e.append(" "),e.append("s"),e.append(a.arg0.toString()),e.append(" "),e.append("s"),e.append(a.arg1.toString()),e.append(" "),e.append("s"),e.append(a.arg2.toString());return;case"PUXC2":e.append(" "),e.append("s"),e.append(a.arg0.toString()),e.append(" "),e.append("s"),e.append(a.arg1.toString()),e.append(" "),e.append("s"),e.append(a.arg2.toString());return;case"PUXCPU":e.append(" "),e.append("s"),e.append(a.arg0.toString()),e.append(" "),e.append("s"),e.append(a.arg1.toString()),e.append(" "),e.append("s"),e.append(a.arg2.toString());return;case"PU2XC":e.append(" "),e.append("s"),e.append(a.arg0.toString()),e.append(" "),e.append("s"),e.append(a.arg1.toString()),e.append(" "),e.append("s"),e.append(a.arg2.toString());return;case"BLKSWAP":e.append(" "),e.append(a.arg0.toString()),e.append(" "),e.append(a.arg1.toString());return;case"REVERSE":e.append(" "),e.append(a.arg0.toString()),e.append(" "),e.append(a.arg1.toString());return;case"SETCONTARGS":e.append(" "),e.append(a.arg0.toString()),e.append(" "),e.append(a.arg1.toString());return;case"BLESSARGS":e.append(" "),e.append(a.arg0.toString()),e.append(" "),e.append(a.arg1.toString());return;case"STIR":e.append(" "),e.append(a.arg0.toString());return;case"STUR":e.append(" "),e.append(a.arg0.toString());return;case"STIQ":e.append(" "),e.append(a.arg0.toString());return;case"STUQ":e.append(" "),e.append(a.arg0.toString());return;case"STIRQ":e.append(" "),e.append(a.arg0.toString());return;case"STURQ":e.append(" "),e.append(a.arg0.toString());return;case"PLDI":e.append(" "),e.append(a.arg0.toString());return;case"PLDU":e.append(" "),e.append(a.arg0.toString());return;case"LDIQ":e.append(" "),e.append(a.arg0.toString());return;case"LDUQ":e.append(" "),e.append(a.arg0.toString());return;case"PLDIQ":e.append(" "),e.append(a.arg0.toString());return;case"PLDUQ":e.append(" "),e.append(a.arg0.toString());return;case"PLDUZ":e.append(" "),e.append(a.arg0.toString());return;case"PLDSLICE":e.append(" "),e.append(a.arg0.toString());return;case"LDSLICEQ":e.append(" "),e.append(a.arg0.toString());return;case"PLDSLICEQ":e.append(" "),e.append(a.arg0.toString());return;case"IFBITJMP":e.append(" "),e.append(a.arg0.toString());return;case"IFNBITJMP":e.append(" "),e.append(a.arg0.toString());return;case"INDEX2":e.append(" "),e.append(a.arg0.toString()),e.append(" "),e.append(a.arg1.toString());return;case"INDEX3":e.append(" "),e.append(a.arg0.toString()),e.append(" "),e.append(a.arg1.toString()),e.append(" "),e.append(a.arg2.toString());return;case"PUSHPOW2":e.append(" "),e.append(a.arg0.toString());return;case"BLKPUSH":e.append(" "),e.append(a.arg0.toString()),e.append(" "),e.append(a.arg1.toString());return;case"BLKDROP2":e.append(" "),e.append(a.arg0.toString()),e.append(" "),e.append(a.arg1.toString());return;case"GETGLOB":e.append(" "),e.append(a.arg0.toString());return;case"SETGLOB":e.append(" "),e.append(a.arg0.toString());return;case"GETPARAM":e.append(" "),e.append(a.arg0.toString());return;case"PUSHREF":e.append(" "),S.printCode(e,a.arg0);return;case"PUSHREFSLICE":e.append(" "),S.printCode(e,a.arg0);return;case"PUSHREFCONT":e.append(" "),S.printCode(e,a.arg0);return;case"CALLREF":e.append(" "),S.printCode(e,a.arg0);return;case"JMPREF":e.append(" "),S.printCode(e,a.arg0);return;case"JMPREFDATA":e.append(" "),S.printCode(e,a.arg0);return;case"IFREF":e.append(" "),S.printCode(e,a.arg0);return;case"IFNOTREF":e.append(" "),S.printCode(e,a.arg0);return;case"IFJMPREF":e.append(" "),S.printCode(e,a.arg0);return;case"IFNOTJMPREF":e.append(" "),S.printCode(e,a.arg0);return;case"IFREFELSE":e.append(" "),S.printCode(e,a.arg0);return;case"IFELSEREF":e.append(" "),S.printCode(e,a.arg0);return;case"IFREFELSEREF":e.append(" "),S.printCode(e,a.arg0),e.append(" "),S.printCode(e,a.arg1);return;case"IFBITJMPREF":e.append(" "),e.append(a.arg0.toString()),e.append(" "),S.printCode(e,a.arg1);return;case"IFNBITJMPREF":e.append(" "),e.append(a.arg0.toString()),e.append(" "),S.printCode(e,a.arg1);return;case"DICTPUSHCONST":e.append(" "),e.append(a.arg0.toString()),e.append(" "),S.printDictionary(e,a.arg1);return;case"PFXDICTSWITCH":e.append(" "),e.append(a.arg0.toString()),e.append(" "),S.printDictionary(e,a.arg1);return;case"SDBEGINSX":return;case"SDBEGINSXQ":return;case"SDBEGINS":e.append(" "),S.printSlice(e,a.arg0);return;case"SDBEGINSQ":e.append(" "),S.printSlice(e,a.arg0);return;case"STREFCONST":e.append(" "),S.printCode(e,a.arg0);return;case"STREF2CONST":e.append(" "),S.printCode(e,a.arg0),e.append(" "),S.printCode(e,a.arg1);return;case"THROWANYIF":return;case"THROWARGANYIF":return;case"DEBUGSTR":e.append(" "),S.printSlice(e,a.arg0);return;case"SETCONTCTR":e.append(" "),e.append("c"),e.append(a.arg0.toString());return;case"SETRETCTR":e.append(" "),e.append("c"),e.append(a.arg0.toString());return;case"SETALTCTR":e.append(" "),e.append("c"),e.append(a.arg0.toString());return;case"POPSAVE":e.append(" "),e.append("c"),e.append(a.arg0.toString());return;case"SAVECTR":e.append(" "),e.append("c"),e.append(a.arg0.toString());return;case"SAVEALTCTR":e.append(" "),e.append("c"),e.append(a.arg0.toString());return;case"SAVEBOTHCTR":e.append(" "),e.append("c"),e.append(a.arg0.toString());return;case"RUNVM":e.append(" "),e.append(a.arg0.toString());return;case"SWAP2":return;case"DROP2":return;case"DUP2":return;case"OVER2":return;case"ADDRSHIFT_MOD":e.append(" "),e.append(a.arg0.toString());return;case"ADDRSHIFTR_MOD":e.append(" "),e.append(a.arg0.toString());return;case"ADDRSHIFTC_MOD":e.append(" "),e.append(a.arg0.toString());return;case"RSHIFT_":e.append(" "),e.append(a.arg0.toString());return;case"RSHIFTR_":e.append(" "),e.append(a.arg0.toString());return;case"RSHIFTC_":e.append(" "),e.append(a.arg0.toString());return;case"MODPOW2_":e.append(" "),e.append(a.arg0.toString());return;case"MODPOW2R_":e.append(" "),e.append(a.arg0.toString());return;case"MODPOW2C_":e.append(" "),e.append(a.arg0.toString());return;case"RSHIFT_MOD":e.append(" "),e.append(a.arg0.toString());return;case"RSHIFTR_MOD":e.append(" "),e.append(a.arg0.toString());return;case"RSHIFTC_MOD":e.append(" "),e.append(a.arg0.toString());return;case"MULADDRSHIFT_MOD":e.append(" "),e.append(a.arg0.toString());return;case"MULADDRSHIFTR_MOD":e.append(" "),e.append(a.arg0.toString());return;case"MULADDRSHIFTC_MOD":e.append(" "),e.append(a.arg0.toString());return;case"MULRSHIFT_":e.append(" "),e.append(a.arg0.toString());return;case"MULRSHIFTR_":e.append(" "),e.append(a.arg0.toString());return;case"MULRSHIFTC_":e.append(" "),e.append(a.arg0.toString());return;case"MULMODPOW2_":e.append(" "),e.append(a.arg0.toString());return;case"MULMODPOW2R_":e.append(" "),e.append(a.arg0.toString());return;case"MULMODPOW2C_":e.append(" "),e.append(a.arg0.toString());return;case"MULRSHIFT_MOD":e.append(" "),e.append(a.arg0.toString());return;case"MULRSHIFTR_MOD":e.append(" "),e.append(a.arg0.toString());return;case"MULRSHIFTC_MOD":e.append(" "),e.append(a.arg0.toString());return;case"LSHIFT_ADDDIVMOD":e.append(" "),e.append(a.arg0.toString());return;case"LSHIFT_ADDDIVMODR":e.append(" "),e.append(a.arg0.toString());return;case"LSHIFT_ADDDIVMODC":e.append(" "),e.append(a.arg0.toString());return;case"LSHIFT_DIV":e.append(" "),e.append(a.arg0.toString());return;case"LSHIFT_DIVR":e.append(" "),e.append(a.arg0.toString());return;case"LSHIFT_DIVC":e.append(" "),e.append(a.arg0.toString());return;case"LSHIFT_MOD":e.append(" "),e.append(a.arg0.toString());return;case"LSHIFT_MODR":e.append(" "),e.append(a.arg0.toString());return;case"LSHIFT_MODC":e.append(" "),e.append(a.arg0.toString());return;case"LSHIFT_DIVMOD":e.append(" "),e.append(a.arg0.toString());return;case"LSHIFT_DIVMODR":e.append(" "),e.append(a.arg0.toString());return;case"LSHIFT_DIVMODC":e.append(" "),e.append(a.arg0.toString());return;case"HASHEXT":e.append(" "),e.append(a.arg0.toString());return;case"HASHEXTR":e.append(" "),e.append(a.arg0.toString());return;case"HASHEXTA":e.append(" "),e.append(a.arg0.toString());return;case"HASHEXTAR":e.append(" "),e.append(a.arg0.toString());return;case"STREF":return;case"STREF_ALT":return;case"STSLICE":return;case"STSLICE_ALT":return;case"XCHG3":e.append(" "),e.append("s"),e.append(a.arg0.toString()),e.append(" "),e.append("s"),e.append(a.arg1.toString()),e.append(" "),e.append("s"),e.append(a.arg2.toString());return;case"XCHG3_ALT":e.append(" "),e.append("s"),e.append(a.arg0.toString()),e.append(" "),e.append("s"),e.append(a.arg1.toString()),e.append(" "),e.append("s"),e.append(a.arg2.toString());return;case"STI":e.append(" "),e.append(a.arg0.toString());return;case"STI_ALT":e.append(" "),e.append(a.arg0.toString());return;case"STU":e.append(" "),e.append(a.arg0.toString());return;case"STU_ALT":e.append(" "),e.append(a.arg0.toString());return;case"LDI":e.append(" "),e.append(a.arg0.toString());return;case"LDI_ALT":e.append(" "),e.append(a.arg0.toString());return;case"LDU":e.append(" "),e.append(a.arg0.toString());return;case"LDU_ALT":e.append(" "),e.append(a.arg0.toString());return;case"LDSLICE":e.append(" "),e.append(a.arg0.toString());return;case"LDSLICE_ALT":e.append(" "),e.append(a.arg0.toString());return;case"LSHIFT_VAR":return;case"LSHIFT":e.append(" "),e.append(a.arg0.toString());return;case"QLSHIFT_VAR":return;case"QLSHIFT":e.append(" "),e.append(a.arg0.toString());return;case"BCHKBITS_VAR":return;case"BCHKBITS":e.append(" "),e.append(a.arg0.toString());return;case"BCHKBITSQ_VAR":return;case"BCHKBITSQ":e.append(" "),e.append(a.arg0.toString());return;case"RSHIFT_VAR":return;case"RSHIFT":e.append(" "),e.append(a.arg0.toString());return;case"RSHIFT_ALT":return;case"QRSHIFT_VAR":return;case"QRSHIFT":e.append(" "),e.append(a.arg0.toString());return;case"QRSHIFT_ALT":return;case"CALLDICT":e.append(" "),e.append(a.arg0.toString());return;case"CALLDICT_LONG":e.append(" "),e.append(a.arg0.toString());return;case"THROW_SHORT":e.append(" "),e.append(a.arg0.toString());return;case"THROW":e.append(" "),e.append(a.arg0.toString());return;case"THROWIF_SHORT":e.append(" "),e.append(a.arg0.toString());return;case"THROWIF":e.append(" "),e.append(a.arg0.toString());return;case"THROWIFNOT_SHORT":e.append(" "),e.append(a.arg0.toString());return;case"THROWIFNOT":e.append(" "),e.append(a.arg0.toString());return;case"PUSHINT_4":e.append(" "),e.append(a.arg0.toString());return;case"PUSHINT_8":e.append(" "),e.append(a.arg0.toString());return;case"PUSHINT_16":e.append(" "),e.append(a.arg0.toString());return;case"PUSHINT_LONG":e.append(" "),e.append(a.arg0.toString());return;case"XCHG_01_LONG":e.append(" "),e.append("s"),e.append(a.arg0.toString());return;case"XCHG_0I":e.append(" "),e.append("s"),e.append(a.arg0.toString());return;case"XCHG_IJ":e.append(" "),e.append("s"),e.append(a.arg0.toString()),e.append(" "),e.append("s"),e.append(a.arg1.toString());return;case"XCHG_1I":e.append(" "),e.append("s1"),e.append(" "),e.append("s"),e.append(a.arg1.toString());return;case"DUMPSTK":return;case"DEBUG":e.append(" "),e.append(a.arg0.toString());return;case"STRDUMP":return;case"DEBUG_1":e.append(" "),e.append(a.arg0.toString());return;case"DUMP":e.append(" "),e.append("s"),e.append(a.arg0.toString());return;case"DEBUG_2":e.append(" "),e.append(a.arg0.toString());return;case"PUSHCTR":e.append(" "),e.append("c"),e.append(a.arg0.toString());return;case"PUSH":e.append(" "),e.append("s"),e.append(a.arg0.toString());return;case"PUSH_LONG":e.append(" "),e.append("s"),e.append(a.arg0.toString());return;case"POPCTR":e.append(" "),e.append("c"),e.append(a.arg0.toString());return;case"POP":e.append(" "),e.append("s"),e.append(a.arg0.toString());return;case"POP_LONG":e.append(" "),e.append("s"),e.append(a.arg0.toString());return;case"CALLXARGS":e.append(" "),e.append(a.arg0.toString()),e.append(" "),e.append(a.arg1.toString());return;case"CALLXARGS_1":e.append(" "),e.append(a.arg0.toString()),e.append(" "),e.append(a.arg1.toString());return;case"PUSHSLICE":e.append(" "),S.printSlice(e,a.arg0);return;case"PUSHSLICE_REFS":e.append(" "),S.printSlice(e,a.arg0);return;case"PUSHSLICE_LONG":e.append(" "),S.printSlice(e,a.arg0);return;case"PUSHCONT":e.append(" "),S.printCode(e,a.arg0);return;case"PUSHCONT_SHORT":e.append(" "),S.printCode(e,a.arg0);return;case"STSLICECONST":e.append(" "),S.printSlice(e,a.arg0);return;case"SETCP":e.append(" "),e.append(a.arg0.toString());return;case"SETCPX":return;case"SETCP_SHORT":e.append(" "),e.append(a.arg0.toString());return;case"DEBUGMARK":e.append(" "),e.append(a.arg0.toString());return}};return We.printInstruction=t,We}var WC;function zC(){return WC||(WC=1,function(r){Object.defineProperty(r,"__esModule",{value:!0}),r.print=r.printInstructions=r.printInstr=r.Printer=void 0,r.printDictionary=a,r.printCode=C,r.printSlice=u;const G=jC();class _{constructor(A){le(this,"indent");le(this,"result");this.indent=A,this.result=""}beginLine(A){const c="    ".repeat(this.indent);this.result+=c+A}append(A){this.result+=A}inIndent(A){this.indent++,A(this),this.indent--}build(){return this.result}}r.Printer=_;const S=(o,A)=>{if(A.$==="PSEUDO_PUSHREF"){o.beginLine("ref "),C(o,A.arg0);return}if(A.$==="PSEUDO_PUSHSLICE"){o.beginLine("embed "),u(o,A.arg0);return}if(A.$==="PSEUDO_EXOTIC"){if(o.beginLine("exotic "),A.arg0.$==="LibraryCell"){o.append("library "),u(o,A.arg0.data);return}u(o,A.arg0.cell.beginParse(!0));return}(0,G.printInstruction)(o,A)};r.printInstr=S;const t=(o,A)=>{if(A.length===0){o.append("{}");return}o.append(`{
`),o.inIndent(c=>{for(const l of A)(0,r.printInstr)(c,l),c.append(`
`)}),o.beginLine("}")};r.printInstructions=t;const e=o=>{const A=new _(0);for(const c of o)(0,r.printInstr)(A,c),A.append(`
`);return A.build()};r.print=e;function a(o,A){if(A.$==="RawDict"&&u(o,A.slice),A.$==="DecompiledDict"){o.append(`[
`);for(const c of A.methods)o.inIndent(l=>{l.beginLine(`${c.id} => `),(0,r.printInstructions)(l,c.instructions),l.append(`
`)});o.beginLine("]")}}function C(o,A){A.$==="Instructions"&&(0,r.printInstructions)(o,A.instructions),A.$==="Raw"&&u(o,A.slice)}function u(o,A){if(A.remainingRefs){const l=A.asCell().toBoc().toString("hex");o.append(`boc{${l}}`)}else{const l=A.asCell().bits.toString();o.append(`x{${l}}`)}}}(Yu)),Yu}var KC;function QA(){return KC||(KC=1,function(r){var G=Ve&&Ve.__createBinding||(Object.create?function(e,a,C,u){u===void 0&&(u=C);var o=Object.getOwnPropertyDescriptor(a,C);(!o||("get"in o?!a.__esModule:o.writable||o.configurable))&&(o={enumerable:!0,get:function(){return a[C]}}),Object.defineProperty(e,u,o)}:function(e,a,C,u){u===void 0&&(u=C),e[u]=a[C]}),_=Ve&&Ve.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:!0,value:a})}:function(e,a){e.default=a}),S=Ve&&Ve.__exportStar||function(e,a){for(var C in e)C!=="default"&&!Object.prototype.hasOwnProperty.call(a,C)&&G(a,e,C)},t=Ve&&Ve.__importStar||function(){var e=function(a){return e=Object.getOwnPropertyNames||function(C){var u=[];for(var o in C)Object.prototype.hasOwnProperty.call(C,o)&&(u[u.length]=o);return u},e(a)};return function(a){if(a&&a.__esModule)return a;var C={};if(a!=null)for(var u=e(a),o=0;o<u.length;o++)u[o]!=="default"&&G(C,a,u[o]);return _(C,a),C}}();Object.defineProperty(r,"__esModule",{value:!0}),r.ast=void 0,S(YC(),r),r.ast=t(vC()),S(GA(),r),S(zC(),r),S(jC(),r),S(rt(),r)}(Ve)),Ve}var ZC;function _A(){return ZC||(ZC=1,function(r){var G=ze&&ze.__createBinding||(Object.create?function(e,a,C,u){u===void 0&&(u=C);var o=Object.getOwnPropertyDescriptor(a,C);(!o||("get"in o?!a.__esModule:o.writable||o.configurable))&&(o={enumerable:!0,get:function(){return a[C]}}),Object.defineProperty(e,u,o)}:function(e,a,C,u){u===void 0&&(u=C),e[u]=a[C]}),_=ze&&ze.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:!0,value:a})}:function(e,a){e.default=a}),S=ze&&ze.__importStar||function(){var e=function(a){return e=Object.getOwnPropertyNames||function(C){var u=[];for(var o in C)Object.prototype.hasOwnProperty.call(C,o)&&(u[u.length]=o);return u},e(a)};return function(a){if(a&&a.__esModule)return a;var C={};if(a!=null)for(var u=e(a),o=0;o<u.length;o++)u[o]!=="default"&&G(C,a,u[o]);return _(C,a),C}}();Object.defineProperty(r,"__esModule",{value:!0}),r.trace=r.text=r.runtime=r.logs=r.Builder=r.Slice=r.Cell=void 0;var t=Ke();Object.defineProperty(r,"Cell",{enumerable:!0,get:function(){return t.Cell}}),Object.defineProperty(r,"Slice",{enumerable:!0,get:function(){return t.Slice}}),Object.defineProperty(r,"Builder",{enumerable:!0,get:function(){return t.Builder}}),r.logs=S(yC()),r.runtime=S(et()),r.text=S(QA()),r.trace=S(AA())}(ze)),ze}var uM=_A();const CM=({message:r="Loading",subtext:G,loading:_=!1})=>se.jsxs("div",{className:`${_e.spinnerContainer} ${_?"":_e.hidden}`,role:"status","aria-live":"polite","aria-hidden":!_,children:[se.jsxs("div",{className:_e.spinnerWrapper,children:[se.jsx("div",{className:_e.spinner}),se.jsx("div",{className:_e.spinnerGlow})]}),r&&se.jsx("div",{className:_e.loadingText,children:r}),G&&se.jsxs("div",{className:_e.loadingSubtext,children:[se.jsx("span",{children:G}),se.jsxs("span",{className:_e.dotAnimation,children:[se.jsx("span",{className:_e.dot,children:"."}),se.jsx("span",{className:_e.dot,children:"."}),se.jsx("span",{className:_e.dot,children:"."})]})]})]}),BA="_badge_gyiht_1",fA="_badgeGreen_gyiht_10",XA="_badgeRed_gyiht_15",VA="_badgeBlue_gyiht_20",$A="_badgeGray_gyiht_25",Yn={badge:BA,badgeGreen:fA,badgeRed:XA,badgeBlue:VA,badgeGray:$A},WA=({color:r="gray",children:G})=>{const _={green:Yn.badgeGreen,red:Yn.badgeRed,blue:Yn.badgeBlue,gray:Yn.badgeGray}[r];return se.jsx("span",{className:`${Yn.badge} ${_}`,children:G})},KA="_header_1apl9_1",ZA="_logoContainer_1apl9_10",kA="_logo_1apl9_10",hA="_logoDiamond_1apl9_22",yA="_logoText_1apl9_51",wA="_pageTitle_1apl9_61",pA="_headerLinks_1apl9_64",YA="_iconLink_1apl9_70",we={header:KA,logoContainer:ZA,logo:kA,logoDiamond:hA,logoText:yA,pageTitle:wA,headerLinks:pA,iconLink:YA},bA=({pageTitle:r,network:G,children:_})=>{const S=r==="playground",t=r==="explorer";return se.jsxs("header",{className:we.header,role:"banner",children:[se.jsxs("div",{className:we.logoContainer,children:[se.jsxs("a",{href:"/",className:we.logo,"aria-label":"TxTracer home page",children:[se.jsx("div",{className:we.logoDiamond,"aria-hidden":"true"}),se.jsx("span",{className:we.logoText,children:"TxTracer"})]}),S&&se.jsx("span",{className:we.pageTitle,children:"Playground"}),t&&se.jsx("span",{className:we.pageTitle,children:"Code Explorer"}),G==="testnet"&&se.jsx(WA,{color:"red",children:"Testnet"})]}),_,se.jsxs("nav",{className:we.headerLinks,"aria-label":"External links",children:[se.jsx("a",{href:"https://docs.ton.org/",target:"_blank",rel:"noopener noreferrer",title:"TON Documentation",className:we.iconLink,"aria-label":"Open TON Documentation in new tab",children:se.jsx(sA,{size:20,"aria-hidden":"true"})}),se.jsx("a",{href:"https://github.com/tact-lang/txtracer",target:"_blank",rel:"noopener noreferrer",title:"GitHub Repository",className:we.iconLink,"aria-label":"Open TxTracer GitHub repository in new tab",children:se.jsx(SA,{size:20,"aria-hidden":"true"})})]})]})},JA=sr.memo(bA);JA.displayName="PageHeader";export{rM as F,ce as G,CM as I,JA as M,nM as a,aM as b,eM as c,IM as d,SA as e,tM as f,oM as g,DM as h,sM as i,uM as j,LM as k,EM as l,TM as m,xA as n,qA as o,iM as p,vu as q,AA as r,uA as s,CA as t,QA as u,yC as v,SM as w,RM as x};
